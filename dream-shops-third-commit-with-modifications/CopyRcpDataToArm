package armbatch.copyrcpdatatoarm_1_0;

import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.io.Writer;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import org.talend.fileprocess.FileInputDelimited;
import routines.Relational;
import routines.StringUtils;
import routines.TalendString;
import routines.system.FormatterUtils;
import routines.system.IPersistableRow;
import routines.system.LogCatcherUtils;
import routines.system.LogCatcherUtils.LogCatcherMessage;
import routines.system.ResumeUtil;
import routines.system.SharedDBConnection;
import routines.system.TDieException;

public class CopyRcpDataToArm
{
    public final Object obj;
    private Properties defaultProps;
    private ContextProperties context;
    private final String jobVersion = "1.0";
    private final String jobName = "CopyRcpDataToArm";
    private final String projectName = "ARMBATCH";
    public Integer errorCode;
    private String currentComponent;
    private final Map<String, Long> start_Hash;
    private final Map<String, Long> end_Hash;
    private final Map<String, Boolean> ok_Hash;
    private final Map<String, Object> globalMap;
    public final List<String[]> globalBuffer;
    LogCatcherUtils tLogCatcher_1;
    private final ByteArrayOutputStream baos;
    private final PrintStream errorMessagePS;
    public String resuming_logs_dir_path;
    public String resuming_checkpoint_path;
    public String parent_part_launcher;
    private String resumeEntryMethodName;
    private boolean globalResumeTicket;
    public boolean watch;
    public int portStats;
    public int portTraces;
    public String clientHost;
    public String defaultClientHost;
    public String contextStr;
    public String pid;
    public String rootPid;
    public String fatherPid;
    public long startTime;
    public boolean isChildJob;
    private ThreadLocal threadLocal;
    private Properties context_param;
    public String status;
    ResumeUtil resumeUtil;

    public CopyRcpDataToArm()
    {
        this.obj = new Object();

        this.defaultProps = new Properties();

        this.context = new ContextProperties();
        this.jobVersion = "1.0";
        this.jobName = "CopyRcpDataToArm";
        this.projectName = "ARMBATCH";
        this.errorCode = null;
        this.currentComponent = "";
        this.start_Hash = new HashMap();
        this.end_Hash = new HashMap();
        this.ok_Hash = new HashMap();
        this.globalMap = new HashMap();
        this.globalBuffer = new ArrayList();

        this.tLogCatcher_1 = new LogCatcherUtils();

        this.baos = new ByteArrayOutputStream();
        this.errorMessagePS = new PrintStream(
                new BufferedOutputStream(this.baos));

        this.resuming_logs_dir_path = null;
        this.resuming_checkpoint_path = null;
        this.parent_part_launcher = null;
        this.resumeEntryMethodName = null;
        this.globalResumeTicket = false;

        this.watch = false;
        this.portStats = 3334;
        this.portTraces = 4334;

        this.defaultClientHost = "localhost";
        this.contextStr = "PRD_import";
        this.pid = "0";
        this.rootPid = null;
        this.fatherPid = null;
        this.startTime = 0L;
        this.isChildJob = false;

        this.threadLocal = new ThreadLocal();

        Map threadRunResultMap = new HashMap();
        threadRunResultMap.put("errorCode", null);
        threadRunResultMap.put("status", "");
        this.threadLocal.set(threadRunResultMap);

        this.context_param = new Properties();

        this.status = "";

        this.resumeUtil = null;
    }

    public String getExceptionStackTrace()
    {
        this.errorMessagePS.flush();
        return this.baos.toString();
    }

    public void tMSSqlConnection_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlConnection_1", Long.valueOf(System.currentTimeMillis()));
        tMSSqlConnection_1_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlInput_2_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlInput_2", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_2_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlOutput_2_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlOutput_2", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_2_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlCommit_2_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlCommit_2", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_2_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlInput_3_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlInput_3", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_3_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlOutput_3_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlOutput_3", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_3_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlCommit_3_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlCommit_3", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_3_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlInput_6_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlInput_6", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_6_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMap_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMap_1", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_6_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlOutput_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlOutput_1", Long.valueOf(System.currentTimeMillis()));
        tMSSqlInput_6_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tWarn_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tWarn_1", Long.valueOf(System.currentTimeMillis()));
        tWarn_1_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlCommit_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlCommit_1", Long.valueOf(System.currentTimeMillis()));
        tMSSqlCommit_1_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tFileInputDelimited_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tFileInputDelimited_1", Long.valueOf(System.currentTimeMillis()));
        tFileInputDelimited_1_onSubJobError(exception, errorComponent,
                globalMap);
    }

    public void tMap_2_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMap_2", Long.valueOf(System.currentTimeMillis()));
        tFileInputDelimited_1_onSubJobError(exception, errorComponent,
                globalMap);
    }

    public void tMSSqlRow_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlRow_1", Long.valueOf(System.currentTimeMillis()));
        tFileInputDelimited_1_onSubJobError(exception, errorComponent,
                globalMap);
    }

    public void tMSSqlCommit_4_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tMSSqlCommit_4", Long.valueOf(System.currentTimeMillis()));
        tFileInputDelimited_1_onSubJobError(exception, errorComponent,
                globalMap);
    }

    public void tWarn_2_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tWarn_2", Long.valueOf(System.currentTimeMillis()));
        tWarn_2_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tLogCatcher_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tLogCatcher_1", Long.valueOf(System.currentTimeMillis()));
        tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.end_Hash.put("tFileOutputDelimited_1", Long.valueOf(System.currentTimeMillis()));
        tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
    }

    public void tMSSqlConnection_1_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tMSSqlInput_2_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tMSSqlInput_3_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tMSSqlInput_6_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tWarn_1_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tMSSqlCommit_1_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tWarn_2_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        this.resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "",
                Thread.currentThread().getId(),
                "FATAL", "", exception.getMessage(),
                ResumeUtil.getExceptionStackTrace(exception));
    }

    public void tMSSqlConnection_1Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tMSSqlConnection_1_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                this.ok_Hash.put("tMSSqlConnection_1", Boolean.valueOf(false));
                this.start_Hash
                        .put("tMSSqlConnection_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlConnection_1";

                int tos_count_tMSSqlConnection_1 = 0;

                String url_tMSSqlConnection_1 = "jdbc:jtds:sqlserver://" +
                        this.context.ArmDbHost;
                String port_tMSSqlConnection_1 = this.context.ArmDbPort;
                String dbname_tMSSqlConnection_1 = this.context.ArmDbName;
                if (!"".equals(port_tMSSqlConnection_1)) {
                    url_tMSSqlConnection_1 = url_tMSSqlConnection_1 + ":" + this.context.ArmDbPort;
                }
                if (!"".equals(dbname_tMSSqlConnection_1)) {
                    url_tMSSqlConnection_1 = url_tMSSqlConnection_1 + "//" + this.context.ArmDbName;
                }
                url_tMSSqlConnection_1 = url_tMSSqlConnection_1 + ";appName=ARMBATCH;" +
                        this.context.ArmDbParams;

                String userName_tMSSqlConnection_1 = this.context.ArmDbUser;

                String password_tMSSqlConnection_1 = this.context.ArmDbPassword;

                Connection conn_tMSSqlConnection_1 = null;

                String sharedConnectionName_tMSSqlConnection_1 = "ARMDBConn";
                conn_tMSSqlConnection_1 = SharedDBConnection.getDBConnection(
                        "net.sourceforge.jtds.jdbc.Driver",
                        url_tMSSqlConnection_1, userName_tMSSqlConnection_1,
                        password_tMSSqlConnection_1,
                        sharedConnectionName_tMSSqlConnection_1);

                conn_tMSSqlConnection_1.setAutoCommit(false);

                globalMap.put("dbschema_tMSSqlConnection_1", "dbo");

                globalMap.put("db_tMSSqlConnection_1", this.context.ArmDbName);

                globalMap.put("conn_tMSSqlConnection_1",
                        conn_tMSSqlConnection_1);

                currentComponent = "tMSSqlConnection_1";

                tos_count_tMSSqlConnection_1++;

                currentComponent = "tMSSqlConnection_1";

                this.ok_Hash.put("tMSSqlConnection_1", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlConnection_1", Long.valueOf(System.currentTimeMillis()));

                tMSSqlInput_2Process(globalMap);

                this.globalResumeTicket = true;
            }

        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tMSSqlConnection_1_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tMSSqlInput_2Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tMSSqlInput_2_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                row3Struct row3 = new row3Struct();
                row5Struct row5 = new row5Struct();

                this.ok_Hash.put("tMSSqlCommit_2", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlCommit_2", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlCommit_2";

                int tos_count_tMSSqlCommit_2 = 0;

                this.ok_Hash.put("tMSSqlOutput_2", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlOutput_2", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlOutput_2";

                int tos_count_tMSSqlOutput_2 = 0;

                int nb_line_tMSSqlOutput_2 = 0;
                int nb_line_update_tMSSqlOutput_2 = 0;
                int nb_line_inserted_tMSSqlOutput_2 = 0;
                int nb_line_deleted_tMSSqlOutput_2 = 0;

                int deletedCount_tMSSqlOutput_2 = 0;
                int updatedCount_tMSSqlOutput_2 = 0;
                int insertedCount_tMSSqlOutput_2 = 0;
                String dbschema_tMSSqlOutput_2 = null;
                String tableName_tMSSqlOutput_2 = null;
                boolean whetherReject_tMSSqlOutput_2 = false;

                int updateKeyCount_tMSSqlOutput_2 = 1;
                if (updateKeyCount_tMSSqlOutput_2 < 1) {
                    throw new RuntimeException(
                            "For update, Schema must have a key");
                }

                dbschema_tMSSqlOutput_2 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlOutput_2 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                int batchSize_tMSSqlOutput_2 = 10000;
                int batchSizeCounter_tMSSqlOutput_2 = 0;

                if ((dbschema_tMSSqlOutput_2 == null) ||
                        (dbschema_tMSSqlOutput_2.trim().length() == 0))
                    tableName_tMSSqlOutput_2 = "t_businessLine";
                else {
                    tableName_tMSSqlOutput_2 = dbschema_tMSSqlOutput_2 + "].[" +
                            "t_businessLine";
                }
                String update_tMSSqlOutput_2 = "UPDATE [" +
                        tableName_tMSSqlOutput_2 +
                        "] SET [label] = ? WHERE [code] = ?";
                PreparedStatement pstmtUpdate_tMSSqlOutput_2 = conn_tMSSqlOutput_2
                        .prepareStatement(update_tMSSqlOutput_2);
                String insert_tMSSqlOutput_2 = "INSERT INTO [" +
                        tableName_tMSSqlOutput_2 +
                        "] ([code],[label]) VALUES (?,?)";
                PreparedStatement pstmtInsert_tMSSqlOutput_2 = conn_tMSSqlOutput_2
                        .prepareStatement(insert_tMSSqlOutput_2);

                this.ok_Hash.put("tMSSqlInput_2", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlInput_2", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlInput_2";

                int tos_count_tMSSqlInput_2 = 0;

                int nb_line_tMSSqlInput_2 = 0;
                String dbschema_tMSSqlInput_2 = "";

                dbschema_tMSSqlInput_2 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlInput_2 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                Statement stmt_tMSSqlInput_2 = conn_tMSSqlInput_2
                        .createStatement();

                ResultSet rs_tMSSqlInput_2 = stmt_tMSSqlInput_2
                        .executeQuery("SELECT  distinct   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnit,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnitWrd  FROM dbo." +
                                this.context.ArmDbSasRcpTable +
                                " where G1_BusUnit is not null and G1_Presence in ('o')");
                ResultSetMetaData rsmd_tMSSqlInput_2 = rs_tMSSqlInput_2
                        .getMetaData();
                int colQtyInRs_tMSSqlInput_2 = rsmd_tMSSqlInput_2
                        .getColumnCount();
                globalMap
                        .put(
                                "tMSSqlInput_2_QUERY",
                                "SELECT  distinct   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnit,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnitWrd  FROM dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        " where G1_BusUnit is not null and G1_Presence in ('o')");

                String tmpContent_tMSSqlInput_2 = null;
                while (rs_tMSSqlInput_2.next()) {
                    nb_line_tMSSqlInput_2++;

                    if (colQtyInRs_tMSSqlInput_2 < 1) {
                        row3.code = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_2 = rs_tMSSqlInput_2
                                .getString(1);
                        if (tmpContent_tMSSqlInput_2 != null)
                            row3.code = tmpContent_tMSSqlInput_2;
                        else {
                            row3.code = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_2 < 2) {
                        row3.label = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_2 = rs_tMSSqlInput_2
                                .getString(2);
                        if (tmpContent_tMSSqlInput_2 != null)
                            row3.label = tmpContent_tMSSqlInput_2;
                        else {
                            row3.label = null;
                        }

                    }

                    currentComponent = "tMSSqlInput_2";

                    tos_count_tMSSqlInput_2++;

                    currentComponent = "tMSSqlOutput_2";

                    row5 = null;
                    whetherReject_tMSSqlOutput_2 = false;
                    int updateFlag_tMSSqlOutput_2 = 0;
                    if (row3.label == null)
                        pstmtUpdate_tMSSqlOutput_2.setNull(1,
                                12);
                    else {
                        pstmtUpdate_tMSSqlOutput_2.setString(1, row3.label);
                    }

                    if (row3.code == null)
                        pstmtUpdate_tMSSqlOutput_2.setNull(2,
                                12);
                    else {
                        pstmtUpdate_tMSSqlOutput_2.setString(2, row3.code);
                    }
                    try
                    {
                        updateFlag_tMSSqlOutput_2 = pstmtUpdate_tMSSqlOutput_2
                                .executeUpdate();

                        updatedCount_tMSSqlOutput_2 = updatedCount_tMSSqlOutput_2 +
                                updateFlag_tMSSqlOutput_2;
                    } catch (Exception e) {
                        whetherReject_tMSSqlOutput_2 = true;
                        System.err.println(e.getMessage());
                    }
                    if (updateFlag_tMSSqlOutput_2 == 0)
                    {
                        if (row3.code == null)
                            pstmtInsert_tMSSqlOutput_2.setNull(1,
                                    12);
                        else {
                            pstmtInsert_tMSSqlOutput_2.setString(1, row3.code);
                        }

                        if (row3.label == null)
                            pstmtInsert_tMSSqlOutput_2.setNull(2,
                                    12);
                        else {
                            pstmtInsert_tMSSqlOutput_2.setString(2, row3.label);
                        }

                        try
                        {
                            insertedCount_tMSSqlOutput_2 = insertedCount_tMSSqlOutput_2 +
                                    pstmtInsert_tMSSqlOutput_2
                                            .executeUpdate();
                        } catch (Exception e) {
                            whetherReject_tMSSqlOutput_2 = true;
                            System.err.println(e.getMessage());
                        }
                    }

                    nb_line_tMSSqlOutput_2++;
                    if (!whetherReject_tMSSqlOutput_2) {
                        row5 = new row5Struct();
                        row5.code = row3.code;
                        row5.label = row3.label;
                    }

                    tos_count_tMSSqlOutput_2++;

                    if (row5 != null)
                    {
                        currentComponent = "tMSSqlCommit_2";

                        Connection conn_tMSSqlCommit_2 =
                                (Connection)globalMap
                                        .get("conn_tMSSqlConnection_1");
                        if ((conn_tMSSqlCommit_2 != null) &&
                                (!conn_tMSSqlCommit_2.isClosed())) {
                            conn_tMSSqlCommit_2.commit();
                        }

                        tos_count_tMSSqlCommit_2++;
                    }

                    currentComponent = "tMSSqlInput_2";
                }

                stmt_tMSSqlInput_2.close();

                globalMap.put("tMSSqlInput_2_NB_LINE", Integer.valueOf(nb_line_tMSSqlInput_2));

                this.ok_Hash.put("tMSSqlInput_2", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlInput_2", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlOutput_2";

                if (pstmtUpdate_tMSSqlOutput_2 != null)
                {
                    pstmtUpdate_tMSSqlOutput_2.close();
                }

                if (pstmtInsert_tMSSqlOutput_2 != null)
                {
                    pstmtInsert_tMSSqlOutput_2.close();
                }

                nb_line_deleted_tMSSqlOutput_2 = nb_line_deleted_tMSSqlOutput_2 +
                        deletedCount_tMSSqlOutput_2;

                nb_line_update_tMSSqlOutput_2 = nb_line_update_tMSSqlOutput_2 +
                        updatedCount_tMSSqlOutput_2;

                nb_line_inserted_tMSSqlOutput_2 = nb_line_inserted_tMSSqlOutput_2 +
                        insertedCount_tMSSqlOutput_2;

                globalMap.put("tMSSqlOutput_2_NB_LINE", Integer.valueOf(nb_line_tMSSqlOutput_2));
                globalMap.put("tMSSqlOutput_2_NB_LINE_UPDATED",
                        Integer.valueOf(nb_line_update_tMSSqlOutput_2));
                globalMap.put("tMSSqlOutput_2_NB_LINE_INSERTED",
                        Integer.valueOf(nb_line_inserted_tMSSqlOutput_2));
                globalMap.put("tMSSqlOutput_2_NB_LINE_DELETED",
                        Integer.valueOf(nb_line_deleted_tMSSqlOutput_2));

                this.ok_Hash.put("tMSSqlOutput_2", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlOutput_2", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlCommit_2";

                this.ok_Hash.put("tMSSqlCommit_2", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlCommit_2", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

            if ((this.resumeEntryMethodName == null) || (this.globalResumeTicket)) {
                this.resumeUtil.addLog("CHECKPOINT",
                        "CONNECTION:SUBJOB_OK:tMSSqlInput_2:OnSubjobOk", "",
                        Thread.currentThread().getId(), "", "", "", "");
            }

            tMSSqlInput_3Process(globalMap);
        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tMSSqlInput_2_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tMSSqlInput_3Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tMSSqlInput_3_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                row4Struct row4 = new row4Struct();
                row6Struct row6 = new row6Struct();

                this.ok_Hash.put("tMSSqlCommit_3", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlCommit_3", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlCommit_3";

                int tos_count_tMSSqlCommit_3 = 0;

                this.ok_Hash.put("tMSSqlOutput_3", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlOutput_3", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlOutput_3";

                int tos_count_tMSSqlOutput_3 = 0;

                int nb_line_tMSSqlOutput_3 = 0;
                int nb_line_update_tMSSqlOutput_3 = 0;
                int nb_line_inserted_tMSSqlOutput_3 = 0;
                int nb_line_deleted_tMSSqlOutput_3 = 0;

                int deletedCount_tMSSqlOutput_3 = 0;
                int updatedCount_tMSSqlOutput_3 = 0;
                int insertedCount_tMSSqlOutput_3 = 0;
                String dbschema_tMSSqlOutput_3 = null;
                String tableName_tMSSqlOutput_3 = null;
                boolean whetherReject_tMSSqlOutput_3 = false;

                int updateKeyCount_tMSSqlOutput_3 = 1;
                if (updateKeyCount_tMSSqlOutput_3 < 1) {
                    throw new RuntimeException(
                            "For update, Schema must have a key");
                }

                dbschema_tMSSqlOutput_3 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlOutput_3 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                int batchSize_tMSSqlOutput_3 = 10000;
                int batchSizeCounter_tMSSqlOutput_3 = 0;

                if ((dbschema_tMSSqlOutput_3 == null) ||
                        (dbschema_tMSSqlOutput_3.trim().length() == 0))
                    tableName_tMSSqlOutput_3 = "t_department";
                else {
                    tableName_tMSSqlOutput_3 = dbschema_tMSSqlOutput_3 + "].[" +
                            "t_department";
                }
                String update_tMSSqlOutput_3 = "UPDATE [" +
                        tableName_tMSSqlOutput_3 +
                        "] SET [label] = ? WHERE [code] = ?";
                PreparedStatement pstmtUpdate_tMSSqlOutput_3 = conn_tMSSqlOutput_3
                        .prepareStatement(update_tMSSqlOutput_3);
                String insert_tMSSqlOutput_3 = "INSERT INTO [" +
                        tableName_tMSSqlOutput_3 +
                        "] ([code],[label]) VALUES (?,?)";
                PreparedStatement pstmtInsert_tMSSqlOutput_3 = conn_tMSSqlOutput_3
                        .prepareStatement(insert_tMSSqlOutput_3);

                this.ok_Hash.put("tMSSqlInput_3", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlInput_3", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlInput_3";

                int tos_count_tMSSqlInput_3 = 0;

                int nb_line_tMSSqlInput_3 = 0;
                String dbschema_tMSSqlInput_3 = "";

                dbschema_tMSSqlInput_3 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlInput_3 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                Statement stmt_tMSSqlInput_3 = conn_tMSSqlInput_3
                        .createStatement();

                ResultSet rs_tMSSqlInput_3 = stmt_tMSSqlInput_3
                        .executeQuery("SELECT distinct   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LPCode as code,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusinessUnit as label  FROM dbo." +
                                this.context.ArmDbSasRcpTable +
                                " where G1_LPCode is not null");
                ResultSetMetaData rsmd_tMSSqlInput_3 = rs_tMSSqlInput_3
                        .getMetaData();
                int colQtyInRs_tMSSqlInput_3 = rsmd_tMSSqlInput_3
                        .getColumnCount();
                globalMap.put("tMSSqlInput_3_QUERY", "SELECT distinct   dbo." +
                        this.context.ArmDbSasRcpTable +
                        ".G1_LPCode as code,   dbo." +
                        this.context.ArmDbSasRcpTable +
                        ".G1_BusinessUnit as label  FROM dbo." +
                        this.context.ArmDbSasRcpTable +
                        " where G1_LPCode is not null");

                String tmpContent_tMSSqlInput_3 = null;
                while (rs_tMSSqlInput_3.next()) {
                    nb_line_tMSSqlInput_3++;

                    if (colQtyInRs_tMSSqlInput_3 < 1) {
                        row4.code = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_3 = rs_tMSSqlInput_3
                                .getString(1);
                        if (tmpContent_tMSSqlInput_3 != null)
                            row4.code = tmpContent_tMSSqlInput_3;
                        else {
                            row4.code = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_3 < 2) {
                        row4.label = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_3 = rs_tMSSqlInput_3
                                .getString(2);
                        if (tmpContent_tMSSqlInput_3 != null)
                            row4.label = tmpContent_tMSSqlInput_3;
                        else {
                            row4.label = null;
                        }

                    }

                    currentComponent = "tMSSqlInput_3";

                    tos_count_tMSSqlInput_3++;

                    currentComponent = "tMSSqlOutput_3";

                    row6 = null;
                    whetherReject_tMSSqlOutput_3 = false;
                    int updateFlag_tMSSqlOutput_3 = 0;
                    if (row4.label == null)
                        pstmtUpdate_tMSSqlOutput_3.setNull(1,
                                12);
                    else {
                        pstmtUpdate_tMSSqlOutput_3.setString(1, row4.label);
                    }

                    if (row4.code == null)
                        pstmtUpdate_tMSSqlOutput_3.setNull(2,
                                12);
                    else {
                        pstmtUpdate_tMSSqlOutput_3.setString(2, row4.code);
                    }
                    try
                    {
                        updateFlag_tMSSqlOutput_3 = pstmtUpdate_tMSSqlOutput_3
                                .executeUpdate();

                        updatedCount_tMSSqlOutput_3 = updatedCount_tMSSqlOutput_3 +
                                updateFlag_tMSSqlOutput_3;
                    } catch (Exception e) {
                        whetherReject_tMSSqlOutput_3 = true;
                        System.err.println(e.getMessage());
                    }
                    if (updateFlag_tMSSqlOutput_3 == 0)
                    {
                        if (row4.code == null)
                            pstmtInsert_tMSSqlOutput_3.setNull(1,
                                    12);
                        else {
                            pstmtInsert_tMSSqlOutput_3.setString(1, row4.code);
                        }

                        if (row4.label == null)
                            pstmtInsert_tMSSqlOutput_3.setNull(2,
                                    12);
                        else {
                            pstmtInsert_tMSSqlOutput_3.setString(2, row4.label);
                        }

                        try
                        {
                            insertedCount_tMSSqlOutput_3 = insertedCount_tMSSqlOutput_3 +
                                    pstmtInsert_tMSSqlOutput_3
                                            .executeUpdate();
                        } catch (Exception e) {
                            whetherReject_tMSSqlOutput_3 = true;
                            System.err.println(e.getMessage());
                        }
                    }

                    nb_line_tMSSqlOutput_3++;
                    if (!whetherReject_tMSSqlOutput_3) {
                        row6 = new row6Struct();
                        row6.code = row4.code;
                        row6.label = row4.label;
                    }

                    tos_count_tMSSqlOutput_3++;

                    if (row6 != null)
                    {
                        currentComponent = "tMSSqlCommit_3";

                        Connection conn_tMSSqlCommit_3 =
                                (Connection)globalMap
                                        .get("conn_tMSSqlConnection_1");
                        if ((conn_tMSSqlCommit_3 != null) &&
                                (!conn_tMSSqlCommit_3.isClosed())) {
                            conn_tMSSqlCommit_3.commit();
                        }

                        tos_count_tMSSqlCommit_3++;
                    }

                    currentComponent = "tMSSqlInput_3";
                }

                stmt_tMSSqlInput_3.close();

                globalMap.put("tMSSqlInput_3_NB_LINE", Integer.valueOf(nb_line_tMSSqlInput_3));

                this.ok_Hash.put("tMSSqlInput_3", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlInput_3", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlOutput_3";

                if (pstmtUpdate_tMSSqlOutput_3 != null)
                {
                    pstmtUpdate_tMSSqlOutput_3.close();
                }

                if (pstmtInsert_tMSSqlOutput_3 != null)
                {
                    pstmtInsert_tMSSqlOutput_3.close();
                }

                nb_line_deleted_tMSSqlOutput_3 = nb_line_deleted_tMSSqlOutput_3 +
                        deletedCount_tMSSqlOutput_3;

                nb_line_update_tMSSqlOutput_3 = nb_line_update_tMSSqlOutput_3 +
                        updatedCount_tMSSqlOutput_3;

                nb_line_inserted_tMSSqlOutput_3 = nb_line_inserted_tMSSqlOutput_3 +
                        insertedCount_tMSSqlOutput_3;

                globalMap.put("tMSSqlOutput_3_NB_LINE", Integer.valueOf(nb_line_tMSSqlOutput_3));
                globalMap.put("tMSSqlOutput_3_NB_LINE_UPDATED",
                        Integer.valueOf(nb_line_update_tMSSqlOutput_3));
                globalMap.put("tMSSqlOutput_3_NB_LINE_INSERTED",
                        Integer.valueOf(nb_line_inserted_tMSSqlOutput_3));
                globalMap.put("tMSSqlOutput_3_NB_LINE_DELETED",
                        Integer.valueOf(nb_line_deleted_tMSSqlOutput_3));

                this.ok_Hash.put("tMSSqlOutput_3", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlOutput_3", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlCommit_3";

                this.ok_Hash.put("tMSSqlCommit_3", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlCommit_3", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

            if ((this.resumeEntryMethodName == null) || (this.globalResumeTicket)) {
                this.resumeUtil.addLog("CHECKPOINT",
                        "CONNECTION:SUBJOB_OK:tMSSqlInput_3:OnSubjobOk", "",
                        Thread.currentThread().getId(), "", "", "", "");
            }

            tMSSqlInput_6Process(globalMap);
        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tMSSqlInput_3_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tMSSqlInput_6Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tMSSqlInput_6_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                row1Struct row1 = new row1Struct();
                copyOffStruct copyOff = new copyOffStruct();

                this.ok_Hash.put("tMSSqlOutput_1", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlOutput_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlOutput_1";

                int tos_count_tMSSqlOutput_1 = 0;

                int nb_line_tMSSqlOutput_1 = 0;
                int nb_line_update_tMSSqlOutput_1 = 0;
                int nb_line_inserted_tMSSqlOutput_1 = 0;
                int nb_line_deleted_tMSSqlOutput_1 = 0;

                int deletedCount_tMSSqlOutput_1 = 0;
                int updatedCount_tMSSqlOutput_1 = 0;
                int insertedCount_tMSSqlOutput_1 = 0;
                String dbschema_tMSSqlOutput_1 = null;
                String tableName_tMSSqlOutput_1 = null;
                boolean whetherReject_tMSSqlOutput_1 = false;

                int updateKeyCount_tMSSqlOutput_1 = 1;
                if (updateKeyCount_tMSSqlOutput_1 < 1) {
                    throw new RuntimeException(
                            "For update, Schema must have a key");
                }

                dbschema_tMSSqlOutput_1 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlOutput_1 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                int batchSize_tMSSqlOutput_1 = 10000;
                int batchSizeCounter_tMSSqlOutput_1 = 0;

                if ((dbschema_tMSSqlOutput_1 == null) ||
                        (dbschema_tMSSqlOutput_1.trim().length() == 0))
                    tableName_tMSSqlOutput_1 = this.context.ArmDbRcpView;
                else {
                    tableName_tMSSqlOutput_1 = dbschema_tMSSqlOutput_1 + "].[" +
                            this.context.ArmDbRcpView;
                }
                String update_tMSSqlOutput_1 = "UPDATE [" +
                        tableName_tMSSqlOutput_1 +
                        "] SET [lastname] = ?,[firstname] = ?,[phone] = ?,[fax] = ?,[building] = ?,[address] = ?,[title] = ?,[mobile] = ?,[email] = ?,[room] = ?,[ut] = ?,[country] = ?,[statusEmployee] = ?,[esfCode] = ?,[esfName] = ?,[ubCode] = ?,[ubName] = ?,[entity] = ?,[teamManager] = ?,[entityAddress] = ?,[countryCode] = ?,[isCalyon] = ?,[isInternal] = ?,[isInternational] = ?,[isPresent] = ?,[tiersCode] = ?,[lec] = ?,[lecBackup] = ?,[lecSecondaries] = ?,[coseData] = ?,[coseDataPrevious] = ?,[validatorDelegationPool] = ?,[id_business_line] = ?,[id_department] = ?,[id_entity] = ?,[id_department_rcp] = ?,[id_business_line_rcp] = ? WHERE [ut] = ?";
                PreparedStatement pstmtUpdate_tMSSqlOutput_1 = conn_tMSSqlOutput_1
                        .prepareStatement(update_tMSSqlOutput_1);
                String insert_tMSSqlOutput_1 = "INSERT INTO [" +
                        tableName_tMSSqlOutput_1 +
                        "] ([lastname],[firstname],[phone],[fax],[building],[address],[title],[mobile],[email],[room],[ut],[country],[statusEmployee],[esfCode],[esfName],[ubCode],[ubName],[entity],[teamManager],[entityAddress],[countryCode],[isCalyon],[isInternal],[isInternational],[isPresent],[tiersCode],[lec],[lecBackup],[lecSecondaries],[coseData],[coseDataPrevious],[validatorDelegationPool],[id_business_line],[id_department],[id_entity],[id_department_rcp],[id_business_line_rcp]) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement pstmtInsert_tMSSqlOutput_1 = conn_tMSSqlOutput_1
                        .prepareStatement(insert_tMSSqlOutput_1);

                this.ok_Hash.put("tMap_1", Boolean.valueOf(false));
                this.start_Hash.put("tMap_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMap_1";

                int tos_count_tMap_1 = 0;

                copyOffStruct copyOff_tmp = new copyOffStruct();

                this.ok_Hash.put("tMSSqlInput_6", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlInput_6", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlInput_6";

                int tos_count_tMSSqlInput_6 = 0;

                int nb_line_tMSSqlInput_6 = 0;
                String dbschema_tMSSqlInput_6 = "";

                dbschema_tMSSqlInput_6 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlInput_6 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                Statement stmt_tMSSqlInput_6 = conn_tMSSqlInput_6
                        .createStatement();

                ResultSet rs_tMSSqlInput_6 = stmt_tMSSqlInput_6
                        .executeQuery("SELECT dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".item_last_action,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".item_last_action_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".item_creation_date,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ArrivalDate,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ArrivalDate_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ArrivalDate_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ArrivalDate_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BLec, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BLec_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BLec_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BLec_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusinessUnit,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusinessUnit_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusinessUnit_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusinessUnit_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDBuUT, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDBuUT_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDBuUT_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDBuUT_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDUT, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDUT_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDUT_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CIDUT_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_cn,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_cn_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_cn_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_cn_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorCompany,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorCompany_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorCompany_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorCompany_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorStatus,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorStatus_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorStatus_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ContractorStatus_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_coseDomain,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_coseDomain_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_coseDomain_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_coseDomain_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryCode2,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryCode2_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryCode2_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryCode2_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_CountryName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_DepartureDate,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_DepartureDate_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_DepartureDate_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_DepartureDate_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeNumber_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeNumber_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeNumber_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeType,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeType_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeType_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EmployeeType_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Entity, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Entity_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Entity_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Entity_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityPostalAddress,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityPostalAddress_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityPostalAddress_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityPostalAddress_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFCode, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFCode_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFShortName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFShortName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFShortName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ESFShortName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_FacsimileTelephoneNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_FacsimileTelephoneNumber_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_FacsimileTelephoneNumber_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_FacsimileTelephoneNumber_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Floor, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Floor_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Floor_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Floor_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDBuUT, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDBuUT_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDBuUT_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDBuUT_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDUT, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDUT_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDUT_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_GDDUT_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Givenname,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Givenname_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Givenname_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Givenname_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyon, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyon_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyon_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyon_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyonFR,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyonFR_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyonFR_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCalyonFR_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCM, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCM_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCM_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsCM_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsInternal,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsInternal_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsInternal_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_IsInternal_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_L,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_L_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_L_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_L_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level1OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level1OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level1OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level1OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level2OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level2OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level2OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level2OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level3OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level3OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level3OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level3OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level4OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level4OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level4OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level4OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level5OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level5OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level5OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level5OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level6OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level6OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level6OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level6OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level7OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level7OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level7OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level7OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level8OUId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level8OUId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level8OUId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Level8OUId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LocalityName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LocalityName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LocalityName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LocalityName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Localization,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Localization_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Localization_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Localization_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mail, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mail_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mail_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mail_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_MLec,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_MLec_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_MLec_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_MLec_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mobile,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mobile_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mobile_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Mobile_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_OrdGivenName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_OrdGivenName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_OrdGivenName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_OrdGivenName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_PostalAddress,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_PostalAddress_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_PostalAddress_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_PostalAddress_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Presence, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Presence_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Presence_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Presence_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_RoomNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_RoomNumber_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_RoomNumber_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_RoomNumber_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_SLec, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_SLec_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_SLec_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_SLec_prev_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_sn,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_sn_applyts, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_sn_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_sn_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_StatusCode,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_StatusCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_StatusCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_StatusCode_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerId,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerId_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerId_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerId_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamManagerName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSec, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSec_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSec_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSec_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSecTel,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSecTel_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSecTel_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TeamSecTel_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TelephoneNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TelephoneNumber_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TelephoneNumber_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TelephoneNumber_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Title, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Title_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Title_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Title_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TitleShort,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TitleShort_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TitleShort_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TitleShort_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBCode, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBCode_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBShortName,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBShortName_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBShortName_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_UBShortName_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Uid, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Uid_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Uid_prev, dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_Uid_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TEMLocalization,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TEMLocalization_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TEMLocalization_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TEMLocalization_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TiersCode,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TiersCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TiersCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_TiersCode_prev_applyts,    cose.id as domain,   cosePrev.id as prevDomain,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ValidatorUTNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ValidatorDelegationPool,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ApproverUTNumber,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_ApproverDelegationPool,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_DoubleValidation,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnit,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnit_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnit_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnit_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnitWrd,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnitWrd_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnitWrd_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_BusUnitWrd_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LPCode,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LPCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LPCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_LPCode_prev_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityCode,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityCode_applyts,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityCode_prev,   dbo." +
                                this.context.ArmDbSasRcpTable +
                                ".G1_EntityCode_prev_applyts,   isnull(u.id_business_line,bl.id_business_line),   isnull(u.id_department,dep.id_departement),   isnull(u.id_entity,entity.id),   isnull(dept.id_department,u.id_department_rcp),   isnull(bLine.id_businessLine,u.id_business_line_rcp)" +
                                " FROM dbo." +
                                this.context.ArmDbSasRcpTable +
                                "  left outer join t_cose cose on t_sas_rcp_import.G1_CoseDomain = cose.domain  left outer join t_cose cosePrev on t_sas_rcp_import.G1_coseDomain_prev = cosePrev.domain  left outer join t_irm_business_line bl on t_sas_rcp_import.G1_BusUnit = bl.code  left outer join t_irm_department dep on t_sas_rcp_import.G1_LPCode = dep.code  left outer join t_irm_entity entity on t_sas_rcp_import.G1_EntityCode = entity.code  left outer join t_department dept on t_sas_rcp_import.G1_LPCode = dept.code  left outer join t_businessLine bLine on t_sas_rcp_import.G1_BusUnit = bLine.code  left outer join t_user u on u.ut = dbo." +
                                this.context.ArmDbSasRcpTable + ".G1_Uid   ");
                ResultSetMetaData rsmd_tMSSqlInput_6 = rs_tMSSqlInput_6
                        .getMetaData();
                int colQtyInRs_tMSSqlInput_6 = rsmd_tMSSqlInput_6
                        .getColumnCount();
                globalMap
                        .put(
                                "tMSSqlInput_6_QUERY",
                                "SELECT dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".item_last_action,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".item_last_action_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".item_creation_date,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ArrivalDate,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ArrivalDate_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ArrivalDate_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ArrivalDate_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BLec, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BLec_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BLec_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BLec_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusinessUnit,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusinessUnit_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusinessUnit_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusinessUnit_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDBuUT, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDBuUT_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDBuUT_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDBuUT_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDUT, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDUT_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDUT_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CIDUT_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_cn,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_cn_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_cn_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_cn_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorCompany,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorCompany_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorCompany_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorCompany_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorStatus,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorStatus_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorStatus_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ContractorStatus_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_coseDomain,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_coseDomain_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_coseDomain_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_coseDomain_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryCode2,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryCode2_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryCode2_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryCode2_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_CountryName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_DepartureDate,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_DepartureDate_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_DepartureDate_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_DepartureDate_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeNumber_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeNumber_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeNumber_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeType,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeType_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeType_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EmployeeType_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Entity, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Entity_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Entity_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Entity_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityPostalAddress,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityPostalAddress_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityPostalAddress_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityPostalAddress_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFCode, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFCode_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFShortName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFShortName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFShortName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ESFShortName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_FacsimileTelephoneNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_FacsimileTelephoneNumber_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_FacsimileTelephoneNumber_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_FacsimileTelephoneNumber_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Floor, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Floor_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Floor_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Floor_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDBuUT, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDBuUT_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDBuUT_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDBuUT_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDUT, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDUT_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDUT_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_GDDUT_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Givenname,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Givenname_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Givenname_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Givenname_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyon, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyon_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyon_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyon_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyonFR,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyonFR_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyonFR_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCalyonFR_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCM, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCM_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCM_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsCM_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsInternal,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsInternal_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsInternal_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_IsInternal_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_L,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_L_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_L_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_L_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level1OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level1OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level1OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level1OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level2OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level2OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level2OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level2OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level3OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level3OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level3OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level3OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level4OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level4OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level4OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level4OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level5OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level5OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level5OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level5OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level6OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level6OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level6OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level6OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level7OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level7OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level7OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level7OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level8OUId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level8OUId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level8OUId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Level8OUId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LocalityName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LocalityName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LocalityName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LocalityName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Localization,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Localization_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Localization_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Localization_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mail, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mail_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mail_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mail_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_MLec,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_MLec_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_MLec_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_MLec_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mobile,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mobile_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mobile_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Mobile_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_OrdGivenName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_OrdGivenName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_OrdGivenName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_OrdGivenName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_PostalAddress,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_PostalAddress_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_PostalAddress_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_PostalAddress_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Presence, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Presence_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Presence_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Presence_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_RoomNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_RoomNumber_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_RoomNumber_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_RoomNumber_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_SLec, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_SLec_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_SLec_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_SLec_prev_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_sn,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_sn_applyts, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_sn_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_sn_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_StatusCode,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_StatusCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_StatusCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_StatusCode_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerId,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerId_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerId_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerId_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamManagerName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSec, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSec_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSec_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSec_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSecTel,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSecTel_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSecTel_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TeamSecTel_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TelephoneNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TelephoneNumber_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TelephoneNumber_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TelephoneNumber_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Title, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Title_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Title_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Title_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TitleShort,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TitleShort_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TitleShort_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TitleShort_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBCode, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBCode_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBShortName,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBShortName_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBShortName_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_UBShortName_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Uid, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Uid_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Uid_prev, dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Uid_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TEMLocalization,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TEMLocalization_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TEMLocalization_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TEMLocalization_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TiersCode,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TiersCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TiersCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_TiersCode_prev_applyts,    cose.id as domain,   cosePrev.id as prevDomain,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ValidatorUTNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ValidatorDelegationPool,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ApproverUTNumber,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_ApproverDelegationPool,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_DoubleValidation,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnit,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnit_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnit_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnit_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnitWrd,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnitWrd_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnitWrd_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_BusUnitWrd_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LPCode,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LPCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LPCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_LPCode_prev_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityCode,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityCode_applyts,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityCode_prev,   dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_EntityCode_prev_applyts,   isnull(u.id_business_line,bl.id_business_line),   isnull(u.id_department,dep.id_departement),   isnull(u.id_entity,entity.id),   isnull(dept.id_department,u.id_department_rcp),   isnull(bLine.id_businessLine,u.id_business_line_rcp)" +
                                        " FROM dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        "  left outer join t_cose cose on t_sas_rcp_import.G1_CoseDomain = cose.domain  left outer join t_cose cosePrev on t_sas_rcp_import.G1_coseDomain_prev = cosePrev.domain  left outer join t_irm_business_line bl on t_sas_rcp_import.G1_BusUnit = bl.code  left outer join t_irm_department dep on t_sas_rcp_import.G1_LPCode = dep.code  left outer join t_irm_entity entity on t_sas_rcp_import.G1_EntityCode = entity.code  left outer join t_department dept on t_sas_rcp_import.G1_LPCode = dept.code  left outer join t_businessLine bLine on t_sas_rcp_import.G1_BusUnit = bLine.code  left outer join t_user u on u.ut = dbo." +
                                        this.context.ArmDbSasRcpTable +
                                        ".G1_Uid   ");

                String tmpContent_tMSSqlInput_6 = null;
                while (rs_tMSSqlInput_6.next()) {
                    nb_line_tMSSqlInput_6++;

                    if (colQtyInRs_tMSSqlInput_6 < 1) {
                        row1.item_last_action = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(1);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.item_last_action = tmpContent_tMSSqlInput_6;
                        else {
                            row1.item_last_action = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 2) {
                        row1.item_last_action_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(2) != null)
                        row1.item_last_action_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(2).getTime());
                    else {
                        row1.item_last_action_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 3) {
                        row1.item_creation_date = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(3) != null)
                        row1.item_creation_date = new Date(
                                rs_tMSSqlInput_6.getTimestamp(3).getTime());
                    else {
                        row1.item_creation_date = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 4) {
                        row1.G1_ArrivalDate = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(4);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ArrivalDate = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ArrivalDate = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 5) {
                        row1.G1_ArrivalDate_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(5) != null)
                        row1.G1_ArrivalDate_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(5).getTime());
                    else {
                        row1.G1_ArrivalDate_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 6) {
                        row1.G1_ArrivalDate_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(6);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ArrivalDate_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ArrivalDate_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 7) {
                        row1.G1_ArrivalDate_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(7) != null)
                        row1.G1_ArrivalDate_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(7).getTime());
                    else {
                        row1.G1_ArrivalDate_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 8) {
                        row1.G1_BLec = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(8);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BLec = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BLec = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 9) {
                        row1.G1_BLec_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(9) != null)
                        row1.G1_BLec_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(9).getTime());
                    else {
                        row1.G1_BLec_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 10) {
                        row1.G1_BLec_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(10);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BLec_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BLec_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 11) {
                        row1.G1_BLec_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(11) != null)
                        row1.G1_BLec_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(11).getTime());
                    else {
                        row1.G1_BLec_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 12) {
                        row1.G1_BusinessUnit = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(12);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusinessUnit = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusinessUnit = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 13) {
                        row1.G1_BusinessUnit_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(13) != null)
                        row1.G1_BusinessUnit_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(13).getTime());
                    else {
                        row1.G1_BusinessUnit_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 14) {
                        row1.G1_BusinessUnit_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(14);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusinessUnit_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusinessUnit_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 15) {
                        row1.G1_BusinessUnit_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(15) != null)
                        row1.G1_BusinessUnit_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(15).getTime());
                    else {
                        row1.G1_BusinessUnit_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 16) {
                        row1.G1_CIDBuUT = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(16);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CIDBuUT = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CIDBuUT = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 17) {
                        row1.G1_CIDBuUT_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(17) != null)
                        row1.G1_CIDBuUT_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(17).getTime());
                    else {
                        row1.G1_CIDBuUT_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 18) {
                        row1.G1_CIDBuUT_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(18);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CIDBuUT_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CIDBuUT_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 19) {
                        row1.G1_CIDBuUT_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(19) != null)
                        row1.G1_CIDBuUT_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(19).getTime());
                    else {
                        row1.G1_CIDBuUT_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 20) {
                        row1.G1_CIDUT = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(20);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CIDUT = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CIDUT = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 21) {
                        row1.G1_CIDUT_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(21) != null)
                        row1.G1_CIDUT_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(21).getTime());
                    else {
                        row1.G1_CIDUT_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 22) {
                        row1.G1_CIDUT_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(22);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CIDUT_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CIDUT_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 23) {
                        row1.G1_CIDUT_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(23) != null)
                        row1.G1_CIDUT_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(23).getTime());
                    else {
                        row1.G1_CIDUT_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 24) {
                        row1.G1_cn = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(24);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_cn = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_cn = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 25) {
                        row1.G1_cn_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(25) != null)
                        row1.G1_cn_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(25).getTime());
                    else {
                        row1.G1_cn_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 26) {
                        row1.G1_cn_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(26);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_cn_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_cn_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 27) {
                        row1.G1_cn_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(27) != null)
                        row1.G1_cn_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(27).getTime());
                    else {
                        row1.G1_cn_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 28) {
                        row1.G1_ContractorCompany = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(28);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ContractorCompany = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ContractorCompany = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 29) {
                        row1.G1_ContractorCompany_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(29) != null)
                        row1.G1_ContractorCompany_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(29).getTime());
                    else {
                        row1.G1_ContractorCompany_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 30) {
                        row1.G1_ContractorCompany_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(30);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ContractorCompany_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ContractorCompany_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 31) {
                        row1.G1_ContractorCompany_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(31) != null)
                        row1.G1_ContractorCompany_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(31).getTime());
                    else {
                        row1.G1_ContractorCompany_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 32) {
                        row1.G1_ContractorStatus = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(32);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ContractorStatus = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ContractorStatus = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 33) {
                        row1.G1_ContractorStatus_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(33) != null)
                        row1.G1_ContractorStatus_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(33).getTime());
                    else {
                        row1.G1_ContractorStatus_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 34) {
                        row1.G1_ContractorStatus_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(34);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ContractorStatus_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ContractorStatus_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 35) {
                        row1.G1_ContractorStatus_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(35) != null)
                        row1.G1_ContractorStatus_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(35).getTime());
                    else {
                        row1.G1_ContractorStatus_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 36) {
                        row1.G1_coseDomain = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(36);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_coseDomain = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_coseDomain = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 37) {
                        row1.G1_coseDomain_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(37) != null)
                        row1.G1_coseDomain_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(37).getTime());
                    else {
                        row1.G1_coseDomain_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 38) {
                        row1.G1_coseDomain_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(38);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_coseDomain_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_coseDomain_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 39) {
                        row1.G1_coseDomain_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(39) != null)
                        row1.G1_coseDomain_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(39).getTime());
                    else {
                        row1.G1_coseDomain_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 40) {
                        row1.G1_CountryCode2 = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(40);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CountryCode2 = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CountryCode2 = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 41) {
                        row1.G1_CountryCode2_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(41) != null)
                        row1.G1_CountryCode2_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(41).getTime());
                    else {
                        row1.G1_CountryCode2_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 42) {
                        row1.G1_CountryCode2_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(42);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CountryCode2_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CountryCode2_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 43) {
                        row1.G1_CountryCode2_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(43) != null)
                        row1.G1_CountryCode2_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(43).getTime());
                    else {
                        row1.G1_CountryCode2_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 44) {
                        row1.G1_CountryName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(44);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CountryName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CountryName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 45) {
                        row1.G1_CountryName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(45) != null)
                        row1.G1_CountryName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(45).getTime());
                    else {
                        row1.G1_CountryName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 46) {
                        row1.G1_CountryName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(46);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_CountryName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_CountryName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 47) {
                        row1.G1_CountryName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(47) != null)
                        row1.G1_CountryName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(47).getTime());
                    else {
                        row1.G1_CountryName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 48) {
                        row1.G1_DepartureDate = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(48);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_DepartureDate = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_DepartureDate = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 49) {
                        row1.G1_DepartureDate_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(49) != null)
                        row1.G1_DepartureDate_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(49).getTime());
                    else {
                        row1.G1_DepartureDate_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 50) {
                        row1.G1_DepartureDate_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(50);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_DepartureDate_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_DepartureDate_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 51) {
                        row1.G1_DepartureDate_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(51) != null)
                        row1.G1_DepartureDate_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(51).getTime());
                    else {
                        row1.G1_DepartureDate_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 52) {
                        row1.G1_EmployeeNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(52);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EmployeeNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EmployeeNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 53) {
                        row1.G1_EmployeeNumber_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(53) != null)
                        row1.G1_EmployeeNumber_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(53).getTime());
                    else {
                        row1.G1_EmployeeNumber_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 54) {
                        row1.G1_EmployeeNumber_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(54);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EmployeeNumber_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EmployeeNumber_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 55) {
                        row1.G1_EmployeeNumber_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(55) != null)
                        row1.G1_EmployeeNumber_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(55).getTime());
                    else {
                        row1.G1_EmployeeNumber_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 56) {
                        row1.G1_EmployeeType = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(56);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EmployeeType = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EmployeeType = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 57) {
                        row1.G1_EmployeeType_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(57) != null)
                        row1.G1_EmployeeType_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(57).getTime());
                    else {
                        row1.G1_EmployeeType_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 58) {
                        row1.G1_EmployeeType_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(58);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EmployeeType_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EmployeeType_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 59) {
                        row1.G1_EmployeeType_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(59) != null)
                        row1.G1_EmployeeType_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(59).getTime());
                    else {
                        row1.G1_EmployeeType_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 60) {
                        row1.G1_Entity = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(60);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Entity = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Entity = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 61) {
                        row1.G1_Entity_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(61) != null)
                        row1.G1_Entity_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(61).getTime());
                    else {
                        row1.G1_Entity_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 62) {
                        row1.G1_Entity_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(62);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Entity_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Entity_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 63) {
                        row1.G1_Entity_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(63) != null)
                        row1.G1_Entity_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(63).getTime());
                    else {
                        row1.G1_Entity_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 64) {
                        row1.G1_EntityPostalAddress = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(64);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EntityPostalAddress = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EntityPostalAddress = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 65) {
                        row1.G1_EntityPostalAddress_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(65) != null)
                        row1.G1_EntityPostalAddress_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(65).getTime());
                    else {
                        row1.G1_EntityPostalAddress_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 66) {
                        row1.G1_EntityPostalAddress_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(66);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EntityPostalAddress_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EntityPostalAddress_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 67) {
                        row1.G1_EntityPostalAddress_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(67) != null)
                        row1.G1_EntityPostalAddress_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(67).getTime());
                    else {
                        row1.G1_EntityPostalAddress_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 68) {
                        row1.G1_ESFCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(68);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ESFCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ESFCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 69) {
                        row1.G1_ESFCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(69) != null)
                        row1.G1_ESFCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(69).getTime());
                    else {
                        row1.G1_ESFCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 70) {
                        row1.G1_ESFCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(70);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ESFCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ESFCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 71) {
                        row1.G1_ESFCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(71) != null)
                        row1.G1_ESFCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(71).getTime());
                    else {
                        row1.G1_ESFCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 72) {
                        row1.G1_ESFShortName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(72);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ESFShortName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ESFShortName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 73) {
                        row1.G1_ESFShortName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(73) != null)
                        row1.G1_ESFShortName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(73).getTime());
                    else {
                        row1.G1_ESFShortName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 74) {
                        row1.G1_ESFShortName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(74);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ESFShortName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ESFShortName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 75) {
                        row1.G1_ESFShortName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(75) != null)
                        row1.G1_ESFShortName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(75).getTime());
                    else {
                        row1.G1_ESFShortName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 76) {
                        row1.G1_FacsimileTelephoneNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(76);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_FacsimileTelephoneNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_FacsimileTelephoneNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 77) {
                        row1.G1_FacsimileTelephoneNumber_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(77) != null)
                        row1.G1_FacsimileTelephoneNumber_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(77).getTime());
                    else {
                        row1.G1_FacsimileTelephoneNumber_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 78) {
                        row1.G1_FacsimileTelephoneNumber_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(78);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_FacsimileTelephoneNumber_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_FacsimileTelephoneNumber_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 79) {
                        row1.G1_FacsimileTelephoneNumber_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(79) != null)
                        row1.G1_FacsimileTelephoneNumber_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(79).getTime());
                    else {
                        row1.G1_FacsimileTelephoneNumber_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 80) {
                        row1.G1_Floor = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(80);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Floor = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Floor = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 81) {
                        row1.G1_Floor_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(81) != null)
                        row1.G1_Floor_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(81).getTime());
                    else {
                        row1.G1_Floor_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 82) {
                        row1.G1_Floor_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(82);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Floor_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Floor_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 83) {
                        row1.G1_Floor_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(83) != null)
                        row1.G1_Floor_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(83).getTime());
                    else {
                        row1.G1_Floor_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 84) {
                        row1.G1_GDDBuUT = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(84);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_GDDBuUT = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_GDDBuUT = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 85) {
                        row1.G1_GDDBuUT_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(85) != null)
                        row1.G1_GDDBuUT_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(85).getTime());
                    else {
                        row1.G1_GDDBuUT_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 86) {
                        row1.G1_GDDBuUT_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(86);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_GDDBuUT_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_GDDBuUT_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 87) {
                        row1.G1_GDDBuUT_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(87) != null)
                        row1.G1_GDDBuUT_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(87).getTime());
                    else {
                        row1.G1_GDDBuUT_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 88) {
                        row1.G1_GDDUT = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(88);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_GDDUT = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_GDDUT = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 89) {
                        row1.G1_GDDUT_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(89) != null)
                        row1.G1_GDDUT_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(89).getTime());
                    else {
                        row1.G1_GDDUT_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 90) {
                        row1.G1_GDDUT_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(90);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_GDDUT_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_GDDUT_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 91) {
                        row1.G1_GDDUT_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(91) != null)
                        row1.G1_GDDUT_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(91).getTime());
                    else {
                        row1.G1_GDDUT_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 92) {
                        row1.G1_Givenname = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(92);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Givenname = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Givenname = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 93) {
                        row1.G1_Givenname_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(93) != null)
                        row1.G1_Givenname_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(93).getTime());
                    else {
                        row1.G1_Givenname_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 94) {
                        row1.G1_Givenname_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(94);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Givenname_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Givenname_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 95) {
                        row1.G1_Givenname_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(95) != null)
                        row1.G1_Givenname_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(95).getTime());
                    else {
                        row1.G1_Givenname_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 96) {
                        row1.G1_IsCalyon = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(96);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCalyon = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCalyon = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 97) {
                        row1.G1_IsCalyon_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(97) != null)
                        row1.G1_IsCalyon_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(97).getTime());
                    else {
                        row1.G1_IsCalyon_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 98) {
                        row1.G1_IsCalyon_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(98);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCalyon_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCalyon_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 99) {
                        row1.G1_IsCalyon_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(99) != null)
                        row1.G1_IsCalyon_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(99).getTime());
                    else {
                        row1.G1_IsCalyon_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 100) {
                        row1.G1_IsCalyonFR = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(100);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCalyonFR = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCalyonFR = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 101) {
                        row1.G1_IsCalyonFR_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(101) != null)
                        row1.G1_IsCalyonFR_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(101)
                                        .getTime());
                    else {
                        row1.G1_IsCalyonFR_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 102) {
                        row1.G1_IsCalyonFR_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(102);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCalyonFR_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCalyonFR_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 103) {
                        row1.G1_IsCalyonFR_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(103) != null)
                        row1.G1_IsCalyonFR_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(103)
                                        .getTime());
                    else {
                        row1.G1_IsCalyonFR_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 104) {
                        row1.G1_IsCM = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(104);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCM = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCM = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 105) {
                        row1.G1_IsCM_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(105) != null)
                        row1.G1_IsCM_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(105)
                                        .getTime());
                    else {
                        row1.G1_IsCM_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 106) {
                        row1.G1_IsCM_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(106);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsCM_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsCM_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 107) {
                        row1.G1_IsCM_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(107) != null)
                        row1.G1_IsCM_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(107)
                                        .getTime());
                    else {
                        row1.G1_IsCM_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 108) {
                        row1.G1_IsInternal = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(108);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsInternal = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsInternal = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 109) {
                        row1.G1_IsInternal_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(109) != null)
                        row1.G1_IsInternal_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(109)
                                        .getTime());
                    else {
                        row1.G1_IsInternal_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 110) {
                        row1.G1_IsInternal_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(110);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_IsInternal_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_IsInternal_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 111) {
                        row1.G1_IsInternal_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(111) != null)
                        row1.G1_IsInternal_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(111)
                                        .getTime());
                    else {
                        row1.G1_IsInternal_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 112) {
                        row1.G1_L = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(112);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_L = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_L = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 113) {
                        row1.G1_L_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(113) != null)
                        row1.G1_L_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(113)
                                        .getTime());
                    else {
                        row1.G1_L_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 114) {
                        row1.G1_L_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(114);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_L_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_L_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 115) {
                        row1.G1_L_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(115) != null)
                        row1.G1_L_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(115)
                                        .getTime());
                    else {
                        row1.G1_L_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 116) {
                        row1.G1_Level1OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(116);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level1OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level1OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 117) {
                        row1.G1_Level1OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(117) != null)
                        row1.G1_Level1OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(117)
                                        .getTime());
                    else {
                        row1.G1_Level1OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 118) {
                        row1.G1_Level1OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(118);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level1OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level1OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 119) {
                        row1.G1_Level1OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(119) != null)
                        row1.G1_Level1OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(119)
                                        .getTime());
                    else {
                        row1.G1_Level1OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 120) {
                        row1.G1_Level2OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(120);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level2OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level2OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 121) {
                        row1.G1_Level2OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(121) != null)
                        row1.G1_Level2OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(121)
                                        .getTime());
                    else {
                        row1.G1_Level2OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 122) {
                        row1.G1_Level2OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(122);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level2OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level2OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 123) {
                        row1.G1_Level2OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(123) != null)
                        row1.G1_Level2OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(123)
                                        .getTime());
                    else {
                        row1.G1_Level2OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 124) {
                        row1.G1_Level3OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(124);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level3OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level3OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 125) {
                        row1.G1_Level3OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(125) != null)
                        row1.G1_Level3OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(125)
                                        .getTime());
                    else {
                        row1.G1_Level3OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 126) {
                        row1.G1_Level3OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(126);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level3OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level3OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 127) {
                        row1.G1_Level3OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(127) != null)
                        row1.G1_Level3OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(127)
                                        .getTime());
                    else {
                        row1.G1_Level3OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 128) {
                        row1.G1_Level4OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(128);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level4OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level4OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 129) {
                        row1.G1_Level4OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(129) != null)
                        row1.G1_Level4OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(129)
                                        .getTime());
                    else {
                        row1.G1_Level4OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 130) {
                        row1.G1_Level4OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(130);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level4OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level4OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 131) {
                        row1.G1_Level4OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(131) != null)
                        row1.G1_Level4OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(131)
                                        .getTime());
                    else {
                        row1.G1_Level4OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 132) {
                        row1.G1_Level5OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(132);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level5OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level5OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 133) {
                        row1.G1_Level5OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(133) != null)
                        row1.G1_Level5OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(133)
                                        .getTime());
                    else {
                        row1.G1_Level5OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 134) {
                        row1.G1_Level5OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(134);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level5OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level5OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 135) {
                        row1.G1_Level5OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(135) != null)
                        row1.G1_Level5OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(135)
                                        .getTime());
                    else {
                        row1.G1_Level5OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 136) {
                        row1.G1_Level6OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(136);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level6OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level6OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 137) {
                        row1.G1_Level6OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(137) != null)
                        row1.G1_Level6OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(137)
                                        .getTime());
                    else {
                        row1.G1_Level6OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 138) {
                        row1.G1_Level6OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(138);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level6OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level6OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 139) {
                        row1.G1_Level6OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(139) != null)
                        row1.G1_Level6OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(139)
                                        .getTime());
                    else {
                        row1.G1_Level6OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 140) {
                        row1.G1_Level7OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(140);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level7OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level7OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 141) {
                        row1.G1_Level7OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(141) != null)
                        row1.G1_Level7OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(141)
                                        .getTime());
                    else {
                        row1.G1_Level7OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 142) {
                        row1.G1_Level7OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(142);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level7OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level7OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 143) {
                        row1.G1_Level7OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(143) != null)
                        row1.G1_Level7OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(143)
                                        .getTime());
                    else {
                        row1.G1_Level7OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 144) {
                        row1.G1_Level8OUId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(144);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level8OUId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level8OUId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 145) {
                        row1.G1_Level8OUId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(145) != null)
                        row1.G1_Level8OUId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(145)
                                        .getTime());
                    else {
                        row1.G1_Level8OUId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 146) {
                        row1.G1_Level8OUId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(146);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Level8OUId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Level8OUId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 147) {
                        row1.G1_Level8OUId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(147) != null)
                        row1.G1_Level8OUId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(147)
                                        .getTime());
                    else {
                        row1.G1_Level8OUId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 148) {
                        row1.G1_LocalityName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(148);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_LocalityName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_LocalityName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 149) {
                        row1.G1_LocalityName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(149) != null)
                        row1.G1_LocalityName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(149)
                                        .getTime());
                    else {
                        row1.G1_LocalityName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 150) {
                        row1.G1_LocalityName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(150);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_LocalityName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_LocalityName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 151) {
                        row1.G1_LocalityName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(151) != null)
                        row1.G1_LocalityName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(151)
                                        .getTime());
                    else {
                        row1.G1_LocalityName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 152) {
                        row1.G1_Localization = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(152);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Localization = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Localization = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 153) {
                        row1.G1_Localization_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(153) != null)
                        row1.G1_Localization_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(153)
                                        .getTime());
                    else {
                        row1.G1_Localization_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 154) {
                        row1.G1_Localization_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(154);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Localization_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Localization_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 155) {
                        row1.G1_Localization_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(155) != null)
                        row1.G1_Localization_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(155)
                                        .getTime());
                    else {
                        row1.G1_Localization_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 156) {
                        row1.G1_Mail = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(156);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Mail = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Mail = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 157) {
                        row1.G1_Mail_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(157) != null)
                        row1.G1_Mail_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(157)
                                        .getTime());
                    else {
                        row1.G1_Mail_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 158) {
                        row1.G1_Mail_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(158);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Mail_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Mail_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 159) {
                        row1.G1_Mail_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(159) != null)
                        row1.G1_Mail_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(159)
                                        .getTime());
                    else {
                        row1.G1_Mail_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 160) {
                        row1.G1_MLec = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(160);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_MLec = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_MLec = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 161) {
                        row1.G1_MLec_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(161) != null)
                        row1.G1_MLec_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(161)
                                        .getTime());
                    else {
                        row1.G1_MLec_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 162) {
                        row1.G1_MLec_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(162);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_MLec_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_MLec_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 163) {
                        row1.G1_MLec_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(163) != null)
                        row1.G1_MLec_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(163)
                                        .getTime());
                    else {
                        row1.G1_MLec_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 164) {
                        row1.G1_Mobile = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(164);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Mobile = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Mobile = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 165) {
                        row1.G1_Mobile_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(165) != null)
                        row1.G1_Mobile_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(165)
                                        .getTime());
                    else {
                        row1.G1_Mobile_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 166) {
                        row1.G1_Mobile_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(166);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Mobile_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Mobile_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 167) {
                        row1.G1_Mobile_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(167) != null)
                        row1.G1_Mobile_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(167)
                                        .getTime());
                    else {
                        row1.G1_Mobile_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 168) {
                        row1.G1_OrdGivenName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(168);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_OrdGivenName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_OrdGivenName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 169) {
                        row1.G1_OrdGivenName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(169) != null)
                        row1.G1_OrdGivenName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(169)
                                        .getTime());
                    else {
                        row1.G1_OrdGivenName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 170) {
                        row1.G1_OrdGivenName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(170);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_OrdGivenName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_OrdGivenName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 171) {
                        row1.G1_OrdGivenName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(171) != null)
                        row1.G1_OrdGivenName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(171)
                                        .getTime());
                    else {
                        row1.G1_OrdGivenName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 172) {
                        row1.G1_PostalAddress = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(172);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_PostalAddress = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_PostalAddress = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 173) {
                        row1.G1_PostalAddress_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(173) != null)
                        row1.G1_PostalAddress_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(173)
                                        .getTime());
                    else {
                        row1.G1_PostalAddress_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 174) {
                        row1.G1_PostalAddress_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(174);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_PostalAddress_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_PostalAddress_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 175) {
                        row1.G1_PostalAddress_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(175) != null)
                        row1.G1_PostalAddress_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(175)
                                        .getTime());
                    else {
                        row1.G1_PostalAddress_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 176) {
                        row1.G1_Presence = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(176);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Presence = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Presence = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 177) {
                        row1.G1_Presence_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(177) != null)
                        row1.G1_Presence_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(177)
                                        .getTime());
                    else {
                        row1.G1_Presence_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 178) {
                        row1.G1_Presence_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(178);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Presence_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Presence_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 179) {
                        row1.G1_Presence_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(179) != null)
                        row1.G1_Presence_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(179)
                                        .getTime());
                    else {
                        row1.G1_Presence_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 180) {
                        row1.G1_RoomNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(180);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_RoomNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_RoomNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 181) {
                        row1.G1_RoomNumber_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(181) != null)
                        row1.G1_RoomNumber_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(181)
                                        .getTime());
                    else {
                        row1.G1_RoomNumber_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 182) {
                        row1.G1_RoomNumber_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(182);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_RoomNumber_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_RoomNumber_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 183) {
                        row1.G1_RoomNumber_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(183) != null)
                        row1.G1_RoomNumber_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(183)
                                        .getTime());
                    else {
                        row1.G1_RoomNumber_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 184) {
                        row1.G1_SLec = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(184);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_SLec = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_SLec = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 185) {
                        row1.G1_SLec_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(185) != null)
                        row1.G1_SLec_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(185)
                                        .getTime());
                    else {
                        row1.G1_SLec_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 186) {
                        row1.G1_SLec_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(186);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_SLec_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_SLec_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 187) {
                        row1.G1_SLec_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(187) != null)
                        row1.G1_SLec_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(187)
                                        .getTime());
                    else {
                        row1.G1_SLec_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 188) {
                        row1.G1_sn = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(188);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_sn = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_sn = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 189) {
                        row1.G1_sn_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(189) != null)
                        row1.G1_sn_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(189)
                                        .getTime());
                    else {
                        row1.G1_sn_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 190) {
                        row1.G1_sn_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(190);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_sn_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_sn_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 191) {
                        row1.G1_sn_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(191) != null)
                        row1.G1_sn_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(191)
                                        .getTime());
                    else {
                        row1.G1_sn_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 192) {
                        row1.G1_StatusCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(192);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_StatusCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_StatusCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 193) {
                        row1.G1_StatusCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(193) != null)
                        row1.G1_StatusCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(193)
                                        .getTime());
                    else {
                        row1.G1_StatusCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 194) {
                        row1.G1_StatusCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(194);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_StatusCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_StatusCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 195) {
                        row1.G1_StatusCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(195) != null)
                        row1.G1_StatusCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(195)
                                        .getTime());
                    else {
                        row1.G1_StatusCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 196) {
                        row1.G1_TeamManagerId = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(196);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamManagerId = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamManagerId = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 197) {
                        row1.G1_TeamManagerId_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(197) != null)
                        row1.G1_TeamManagerId_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(197)
                                        .getTime());
                    else {
                        row1.G1_TeamManagerId_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 198) {
                        row1.G1_TeamManagerId_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(198);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamManagerId_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamManagerId_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 199) {
                        row1.G1_TeamManagerId_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(199) != null)
                        row1.G1_TeamManagerId_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(199)
                                        .getTime());
                    else {
                        row1.G1_TeamManagerId_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 200) {
                        row1.G1_TeamManagerName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(200);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamManagerName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamManagerName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 201) {
                        row1.G1_TeamManagerName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(201) != null)
                        row1.G1_TeamManagerName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(201)
                                        .getTime());
                    else {
                        row1.G1_TeamManagerName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 202) {
                        row1.G1_TeamManagerName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(202);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamManagerName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamManagerName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 203) {
                        row1.G1_TeamManagerName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(203) != null)
                        row1.G1_TeamManagerName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(203)
                                        .getTime());
                    else {
                        row1.G1_TeamManagerName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 204) {
                        row1.G1_TeamSec = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(204);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamSec = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamSec = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 205) {
                        row1.G1_TeamSec_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(205) != null)
                        row1.G1_TeamSec_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(205)
                                        .getTime());
                    else {
                        row1.G1_TeamSec_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 206) {
                        row1.G1_TeamSec_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(206);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamSec_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamSec_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 207) {
                        row1.G1_TeamSec_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(207) != null)
                        row1.G1_TeamSec_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(207)
                                        .getTime());
                    else {
                        row1.G1_TeamSec_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 208) {
                        row1.G1_TeamSecTel = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(208);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamSecTel = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamSecTel = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 209) {
                        row1.G1_TeamSecTel_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(209) != null)
                        row1.G1_TeamSecTel_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(209)
                                        .getTime());
                    else {
                        row1.G1_TeamSecTel_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 210) {
                        row1.G1_TeamSecTel_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(210);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TeamSecTel_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TeamSecTel_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 211) {
                        row1.G1_TeamSecTel_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(211) != null)
                        row1.G1_TeamSecTel_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(211)
                                        .getTime());
                    else {
                        row1.G1_TeamSecTel_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 212) {
                        row1.G1_TelephoneNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(212);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TelephoneNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TelephoneNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 213) {
                        row1.G1_TelephoneNumber_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(213) != null)
                        row1.G1_TelephoneNumber_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(213)
                                        .getTime());
                    else {
                        row1.G1_TelephoneNumber_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 214) {
                        row1.G1_TelephoneNumber_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(214);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TelephoneNumber_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TelephoneNumber_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 215) {
                        row1.G1_TelephoneNumber_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(215) != null)
                        row1.G1_TelephoneNumber_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(215)
                                        .getTime());
                    else {
                        row1.G1_TelephoneNumber_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 216) {
                        row1.G1_Title = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(216);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Title = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Title = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 217) {
                        row1.G1_Title_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(217) != null)
                        row1.G1_Title_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(217)
                                        .getTime());
                    else {
                        row1.G1_Title_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 218) {
                        row1.G1_Title_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(218);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Title_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Title_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 219) {
                        row1.G1_Title_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(219) != null)
                        row1.G1_Title_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(219)
                                        .getTime());
                    else {
                        row1.G1_Title_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 220) {
                        row1.G1_TitleShort = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(220);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TitleShort = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TitleShort = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 221) {
                        row1.G1_TitleShort_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(221) != null)
                        row1.G1_TitleShort_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(221)
                                        .getTime());
                    else {
                        row1.G1_TitleShort_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 222) {
                        row1.G1_TitleShort_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(222);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TitleShort_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TitleShort_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 223) {
                        row1.G1_TitleShort_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(223) != null)
                        row1.G1_TitleShort_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(223)
                                        .getTime());
                    else {
                        row1.G1_TitleShort_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 224) {
                        row1.G1_UBCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(224);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_UBCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_UBCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 225) {
                        row1.G1_UBCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(225) != null)
                        row1.G1_UBCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(225)
                                        .getTime());
                    else {
                        row1.G1_UBCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 226) {
                        row1.G1_UBCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(226);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_UBCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_UBCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 227) {
                        row1.G1_UBCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(227) != null)
                        row1.G1_UBCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(227)
                                        .getTime());
                    else {
                        row1.G1_UBCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 228) {
                        row1.G1_UBShortName = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(228);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_UBShortName = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_UBShortName = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 229) {
                        row1.G1_UBShortName_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(229) != null)
                        row1.G1_UBShortName_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(229)
                                        .getTime());
                    else {
                        row1.G1_UBShortName_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 230) {
                        row1.G1_UBShortName_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(230);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_UBShortName_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_UBShortName_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 231) {
                        row1.G1_UBShortName_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(231) != null)
                        row1.G1_UBShortName_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(231)
                                        .getTime());
                    else {
                        row1.G1_UBShortName_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 232) {
                        row1.G1_Uid = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(232);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Uid = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Uid = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 233) {
                        row1.G1_Uid_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(233) != null)
                        row1.G1_Uid_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(233)
                                        .getTime());
                    else {
                        row1.G1_Uid_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 234) {
                        row1.G1_Uid_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(234);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_Uid_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_Uid_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 235) {
                        row1.G1_Uid_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(235) != null)
                        row1.G1_Uid_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(235)
                                        .getTime());
                    else {
                        row1.G1_Uid_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 236) {
                        row1.G1_TEMLocalization = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(236);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TEMLocalization = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TEMLocalization = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 237) {
                        row1.G1_TEMLocalization_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(237) != null)
                        row1.G1_TEMLocalization_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(237)
                                        .getTime());
                    else {
                        row1.G1_TEMLocalization_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 238) {
                        row1.G1_TEMLocalization_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(238);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TEMLocalization_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TEMLocalization_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 239) {
                        row1.G1_TEMLocalization_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(239) != null)
                        row1.G1_TEMLocalization_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(239)
                                        .getTime());
                    else {
                        row1.G1_TEMLocalization_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 240) {
                        row1.G1_TiersCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(240);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TiersCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TiersCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 241) {
                        row1.G1_TiersCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(241) != null)
                        row1.G1_TiersCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(241)
                                        .getTime());
                    else {
                        row1.G1_TiersCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 242) {
                        row1.G1_TiersCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(242);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_TiersCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_TiersCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 243) {
                        row1.G1_TiersCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(243) != null)
                        row1.G1_TiersCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(243)
                                        .getTime());
                    else {
                        row1.G1_TiersCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 244) {
                        row1.domain = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(244) != null) {
                        row1.domain = Integer.valueOf(rs_tMSSqlInput_6.getInt(244));
                    }
                    else {
                        row1.domain = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 245) {
                        row1.prevDomain = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(245) != null) {
                        row1.prevDomain = Integer.valueOf(rs_tMSSqlInput_6.getInt(245));
                    }
                    else {
                        row1.prevDomain = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 246) {
                        row1.G1_ValidatorUTNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(246);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ValidatorUTNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ValidatorUTNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 247) {
                        row1.G1_ValidatorDelegationPool = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(247);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ValidatorDelegationPool = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ValidatorDelegationPool = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 248) {
                        row1.G1_ApproverUTNumber = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(248);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ApproverUTNumber = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ApproverUTNumber = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 249) {
                        row1.G1_ApproverDelegationPool = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(249);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_ApproverDelegationPool = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_ApproverDelegationPool = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 250) {
                        row1.G1_DoubleValidation = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(250);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_DoubleValidation = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_DoubleValidation = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 251) {
                        row1.G1_BusUnit = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(251);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusUnit = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusUnit = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 252) {
                        row1.G1_BusUnit_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(252) != null)
                        row1.G1_BusUnit_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(252)
                                        .getTime());
                    else {
                        row1.G1_BusUnit_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 253) {
                        row1.G1_BusUnit_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(253);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusUnit_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusUnit_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 254) {
                        row1.G1_BusUnit_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(254) != null)
                        row1.G1_BusUnit_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(254)
                                        .getTime());
                    else {
                        row1.G1_BusUnit_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 255) {
                        row1.G1_BusUnitWrd = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(255);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusUnitWrd = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusUnitWrd = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 256) {
                        row1.G1_BusUnitWrd_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(256) != null)
                        row1.G1_BusUnitWrd_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(256)
                                        .getTime());
                    else {
                        row1.G1_BusUnitWrd_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 257) {
                        row1.G1_BusUnitWrd_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(257);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_BusUnitWrd_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_BusUnitWrd_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 258) {
                        row1.G1_BusUnitWrd_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(258) != null)
                        row1.G1_BusUnitWrd_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(258)
                                        .getTime());
                    else {
                        row1.G1_BusUnitWrd_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 259) {
                        row1.G1_LPCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(259);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_LPCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_LPCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 260) {
                        row1.G1_LPCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(260) != null)
                        row1.G1_LPCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(260)
                                        .getTime());
                    else {
                        row1.G1_LPCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 261) {
                        row1.G1_LPCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(261);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_LPCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_LPCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 262) {
                        row1.G1_LPCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(262) != null)
                        row1.G1_LPCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(262)
                                        .getTime());
                    else {
                        row1.G1_LPCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 263) {
                        row1.G1_EntityCode = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(263);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EntityCode = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EntityCode = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 264) {
                        row1.G1_EntityCode_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(264) != null)
                        row1.G1_EntityCode_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(264)
                                        .getTime());
                    else {
                        row1.G1_EntityCode_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 265) {
                        row1.G1_EntityCode_prev = null;
                    }
                    else {
                        tmpContent_tMSSqlInput_6 = rs_tMSSqlInput_6
                                .getString(265);
                        if (tmpContent_tMSSqlInput_6 != null)
                            row1.G1_EntityCode_prev = tmpContent_tMSSqlInput_6;
                        else {
                            row1.G1_EntityCode_prev = null;
                        }

                    }

                    if (colQtyInRs_tMSSqlInput_6 < 266) {
                        row1.G1_EntityCode_prev_applyts = null;
                    }
                    else if (rs_tMSSqlInput_6.getTimestamp(266) != null)
                        row1.G1_EntityCode_prev_applyts = new Date(
                                rs_tMSSqlInput_6.getTimestamp(266)
                                        .getTime());
                    else {
                        row1.G1_EntityCode_prev_applyts = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 267) {
                        row1.BusinessLine_id = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(267) != null) {
                        row1.BusinessLine_id = Integer.valueOf(rs_tMSSqlInput_6.getInt(267));
                    }
                    else {
                        row1.BusinessLine_id = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 268) {
                        row1.Department_id = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(268) != null) {
                        row1.Department_id = Integer.valueOf(rs_tMSSqlInput_6.getInt(268));
                    }
                    else {
                        row1.Department_id = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 269) {
                        row1.Entity_id = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(269) != null) {
                        row1.Entity_id = Integer.valueOf(rs_tMSSqlInput_6.getInt(269));
                    }
                    else {
                        row1.Entity_id = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 270) {
                        row1.department_id_rcp = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(270) != null) {
                        row1.department_id_rcp =
                                Integer.valueOf(rs_tMSSqlInput_6
                                        .getInt(270));
                    }
                    else {
                        row1.department_id_rcp = null;
                    }

                    if (colQtyInRs_tMSSqlInput_6 < 271) {
                        row1.businessLine_id_rcp = null;
                    }
                    else if (rs_tMSSqlInput_6.getObject(271) != null) {
                        row1.businessLine_id_rcp =
                                Integer.valueOf(rs_tMSSqlInput_6
                                        .getInt(271));
                    }
                    else {
                        row1.businessLine_id_rcp = null;
                    }

                    currentComponent = "tMSSqlInput_6";

                    tos_count_tMSSqlInput_6++;

                    currentComponent = "tMap_1";

                    boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

                    boolean rejectedInnerJoin_tMap_1 = false;
                    boolean mainRowRejected_tMap_1 = false;

                    copyOff = null;

                    copyOff_tmp.lastname = StringUtils.getNull(row1.G1_sn);
                    copyOff_tmp.firstname =
                            StringUtils.getNull(row1.G1_Givenname);
                    copyOff_tmp.phone =
                            StringUtils.getNull(row1.G1_TelephoneNumber);
                    copyOff_tmp.fax =
                            StringUtils.getNull(row1.G1_FacsimileTelephoneNumber);
                    copyOff_tmp.building = StringUtils.getNull(row1.G1_L);
                    copyOff_tmp.address =
                            StringUtils.getNull(row1.G1_PostalAddress);
                    copyOff_tmp.title = StringUtils.getNull(row1.G1_Title);
                    copyOff_tmp.mobile =
                            StringUtils.getNull(row1.G1_Mobile);
                    copyOff_tmp.email = StringUtils.getNull(row1.G1_Mail);
                    copyOff_tmp.room =
                            StringUtils.getNull(row1.G1_RoomNumber);
                    copyOff_tmp.ut = StringUtils.getNull(row1.G1_Uid
                            .toUpperCase());
                    copyOff_tmp.country =
                            StringUtils.getNull(row1.G1_CountryName);
                    copyOff_tmp.statusEmployee =
                            StringUtils.getNull(row1.G1_StatusCode);
                    copyOff_tmp.esfCode =
                            StringUtils.getNull(row1.G1_ESFCode);
                    copyOff_tmp.esfName =
                            StringUtils.getNull(row1.G1_ESFShortName);
                    copyOff_tmp.ubCode =
                            StringUtils.getNull(row1.G1_UBCode);
                    copyOff_tmp.ubName =
                            StringUtils.getNull(row1.G1_UBShortName);
                    copyOff_tmp.entity =
                            StringUtils.getNull(row1.G1_Entity);
                    copyOff_tmp.teamManager =
                            ((Relational.ISNULL(row1.G1_TeamManagerId)) ||
                                    (row1.G1_TeamManagerId
                                            .trim().length() < 6) ? null :
                                    row1.G1_TeamManagerId.trim().substring(0, 6));
                    copyOff_tmp.entityAddress =
                            StringUtils.getNull(row1.G1_EntityPostalAddress);
                    copyOff_tmp.countryCode =
                            StringUtils.getNull(row1.G1_CountryCode2);
                    copyOff_tmp.isCalyon =
                            (row1.G1_IsCalyon.trim()
                                    .toUpperCase().equals("O"));
                    copyOff_tmp.isInternal =
                            (row1.G1_IsInternal.trim()
                                    .toUpperCase().equals("O"));
                    copyOff_tmp.isInternational =
                            (row1.G1_IsCalyonFR.trim()
                                    .toUpperCase().equals("O"));
                    copyOff_tmp.isPresent =
                            (row1.G1_Presence.trim()
                                    .toUpperCase().equals("O"));
                    copyOff_tmp.tiersCode = null;
                    copyOff_tmp.lec = StringUtils.getNull(row1.G1_MLec);
                    copyOff_tmp.lecBackup =
                            StringUtils.getNull(row1.G1_BLec);
                    copyOff_tmp.lecSecondaries =
                            StringUtils.getNull(row1.G1_SLec);
                    copyOff_tmp.coseData = row1.domain;
                    copyOff_tmp.coseDataPrevious = row1.prevDomain;
                    copyOff_tmp.validatorDelegationPool = null;
                    copyOff_tmp.id_business_line = row1.BusinessLine_id;
                    copyOff_tmp.id_department = row1.Department_id;
                    copyOff_tmp.id_entity = row1.Entity_id;
                    copyOff_tmp.id_department_rcp = row1.department_id_rcp;
                    copyOff_tmp.id_business_line_rcp = row1.businessLine_id_rcp;
                    copyOff = copyOff_tmp;

                    rejectedInnerJoin_tMap_1 = false;

                    tos_count_tMap_1++;

                    if (copyOff != null)
                    {
                        currentComponent = "tMSSqlOutput_1";

                        whetherReject_tMSSqlOutput_1 = false;
                        int updateFlag_tMSSqlOutput_1 = 0;
                        if (copyOff.lastname == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(1,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(1,
                                    copyOff.lastname);
                        }

                        if (copyOff.firstname == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(2,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(2,
                                    copyOff.firstname);
                        }

                        if (copyOff.phone == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(3,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(3,
                                    copyOff.phone);
                        }

                        if (copyOff.fax == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(4,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1
                                    .setString(4, copyOff.fax);
                        }

                        if (copyOff.building == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(5,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(5,
                                    copyOff.building);
                        }

                        if (copyOff.address == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(6,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(6,
                                    copyOff.address);
                        }

                        if (copyOff.title == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(7,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(7,
                                    copyOff.title);
                        }

                        if (copyOff.mobile == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(8,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(8,
                                    copyOff.mobile);
                        }

                        if (copyOff.email == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(9,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(9,
                                    copyOff.email);
                        }

                        if (copyOff.room == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(10,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(10,
                                    copyOff.room);
                        }

                        if (copyOff.ut == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(11,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1
                                    .setString(11, copyOff.ut);
                        }

                        if (copyOff.country == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(12,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(12,
                                    copyOff.country);
                        }

                        if (copyOff.statusEmployee == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(13,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(13,
                                    copyOff.statusEmployee);
                        }

                        if (copyOff.esfCode == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(14,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(14,
                                    copyOff.esfCode);
                        }

                        if (copyOff.esfName == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(15,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(15,
                                    copyOff.esfName);
                        }

                        if (copyOff.ubCode == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(16,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(16,
                                    copyOff.ubCode);
                        }

                        if (copyOff.ubName == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(17,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(17,
                                    copyOff.ubName);
                        }

                        if (copyOff.entity == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(18,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(18,
                                    copyOff.entity);
                        }

                        if (copyOff.teamManager == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(19,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(19,
                                    copyOff.teamManager);
                        }

                        if (copyOff.entityAddress == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(20,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(20,
                                    copyOff.entityAddress);
                        }

                        if (copyOff.countryCode == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(21,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(21,
                                    copyOff.countryCode);
                        }

                        pstmtUpdate_tMSSqlOutput_1.setBoolean(22,
                                copyOff.isCalyon);

                        pstmtUpdate_tMSSqlOutput_1.setBoolean(23,
                                copyOff.isInternal);

                        pstmtUpdate_tMSSqlOutput_1.setBoolean(24,
                                copyOff.isInternational);

                        pstmtUpdate_tMSSqlOutput_1.setBoolean(25,
                                copyOff.isPresent);

                        if (copyOff.tiersCode == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(26,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(26,
                                    copyOff.tiersCode);
                        }

                        if (copyOff.lec == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(27,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(27,
                                    copyOff.lec);
                        }

                        if (copyOff.lecBackup == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(28,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(28,
                                    copyOff.lecBackup);
                        }

                        if (copyOff.lecSecondaries == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(29,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setString(29,
                                    copyOff.lecSecondaries);
                        }

                        if (copyOff.coseData == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(30,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(30,
                                    copyOff.coseData.intValue());
                        }

                        if (copyOff.coseDataPrevious == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(31,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(31,
                                    copyOff.coseDataPrevious.intValue());
                        }

                        if (copyOff.validatorDelegationPool == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(32,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(32,
                                    copyOff.validatorDelegationPool.intValue());
                        }

                        if (copyOff.id_business_line == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(33,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(33,
                                    copyOff.id_business_line.intValue());
                        }

                        if (copyOff.id_department == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(34,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(34,
                                    copyOff.id_department.intValue());
                        }

                        if (copyOff.id_entity == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(35,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(35,
                                    copyOff.id_entity.intValue());
                        }

                        if (copyOff.id_department_rcp == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(36,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(36,
                                    copyOff.id_department_rcp.intValue());
                        }

                        if (copyOff.id_business_line_rcp == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(37,
                                    4);
                        else {
                            pstmtUpdate_tMSSqlOutput_1.setInt(37,
                                    copyOff.id_business_line_rcp.intValue());
                        }

                        if (copyOff.ut == null)
                            pstmtUpdate_tMSSqlOutput_1.setNull(38,
                                    12);
                        else {
                            pstmtUpdate_tMSSqlOutput_1
                                    .setString(38, copyOff.ut);
                        }
                        try
                        {
                            updateFlag_tMSSqlOutput_1 = pstmtUpdate_tMSSqlOutput_1
                                    .executeUpdate();

                            updatedCount_tMSSqlOutput_1 = updatedCount_tMSSqlOutput_1 +
                                    updateFlag_tMSSqlOutput_1;
                        } catch (Exception e) {
                            whetherReject_tMSSqlOutput_1 = true;
                            System.err.println(e.getMessage());
                        }
                        if (updateFlag_tMSSqlOutput_1 == 0)
                        {
                            if (copyOff.lastname == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(1,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(1,
                                        copyOff.lastname);
                            }

                            if (copyOff.firstname == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(2,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(2,
                                        copyOff.firstname);
                            }

                            if (copyOff.phone == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(3,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(3,
                                        copyOff.phone);
                            }

                            if (copyOff.fax == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(4,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(4,
                                        copyOff.fax);
                            }

                            if (copyOff.building == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(5,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(5,
                                        copyOff.building);
                            }

                            if (copyOff.address == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(6,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(6,
                                        copyOff.address);
                            }

                            if (copyOff.title == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(7,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(7,
                                        copyOff.title);
                            }

                            if (copyOff.mobile == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(8,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(8,
                                        copyOff.mobile);
                            }

                            if (copyOff.email == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(9,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(9,
                                        copyOff.email);
                            }

                            if (copyOff.room == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(10,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(10,
                                        copyOff.room);
                            }

                            if (copyOff.ut == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(11,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(11,
                                        copyOff.ut);
                            }

                            if (copyOff.country == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(12,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(12,
                                        copyOff.country);
                            }

                            if (copyOff.statusEmployee == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(13,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(13,
                                        copyOff.statusEmployee);
                            }

                            if (copyOff.esfCode == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(14,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(14,
                                        copyOff.esfCode);
                            }

                            if (copyOff.esfName == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(15,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(15,
                                        copyOff.esfName);
                            }

                            if (copyOff.ubCode == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(16,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(16,
                                        copyOff.ubCode);
                            }

                            if (copyOff.ubName == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(17,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(17,
                                        copyOff.ubName);
                            }

                            if (copyOff.entity == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(18,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(18,
                                        copyOff.entity);
                            }

                            if (copyOff.teamManager == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(19,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(19,
                                        copyOff.teamManager);
                            }

                            if (copyOff.entityAddress == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(20,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(20,
                                        copyOff.entityAddress);
                            }

                            if (copyOff.countryCode == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(21,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(21,
                                        copyOff.countryCode);
                            }

                            pstmtInsert_tMSSqlOutput_1.setBoolean(22,
                                    copyOff.isCalyon);

                            pstmtInsert_tMSSqlOutput_1.setBoolean(23,
                                    copyOff.isInternal);

                            pstmtInsert_tMSSqlOutput_1.setBoolean(24,
                                    copyOff.isInternational);

                            pstmtInsert_tMSSqlOutput_1.setBoolean(25,
                                    copyOff.isPresent);

                            if (copyOff.tiersCode == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(26,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(26,
                                        copyOff.tiersCode);
                            }

                            if (copyOff.lec == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(27,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(27,
                                        copyOff.lec);
                            }

                            if (copyOff.lecBackup == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(28,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(28,
                                        copyOff.lecBackup);
                            }

                            if (copyOff.lecSecondaries == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(29,
                                        12);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setString(29,
                                        copyOff.lecSecondaries);
                            }

                            if (copyOff.coseData == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(30,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(30,
                                        copyOff.coseData.intValue());
                            }

                            if (copyOff.coseDataPrevious == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(31,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(31,
                                        copyOff.coseDataPrevious.intValue());
                            }

                            if (copyOff.validatorDelegationPool == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(32,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(32,
                                        copyOff.validatorDelegationPool.intValue());
                            }

                            if (copyOff.id_business_line == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(33,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(33,
                                        copyOff.id_business_line.intValue());
                            }

                            if (copyOff.id_department == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(34,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(34,
                                        copyOff.id_department.intValue());
                            }

                            if (copyOff.id_entity == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(35,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(35,
                                        copyOff.id_entity.intValue());
                            }

                            if (copyOff.id_department_rcp == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(36,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(36,
                                        copyOff.id_department_rcp.intValue());
                            }

                            if (copyOff.id_business_line_rcp == null)
                                pstmtInsert_tMSSqlOutput_1.setNull(37,
                                        4);
                            else {
                                pstmtInsert_tMSSqlOutput_1.setInt(37,
                                        copyOff.id_business_line_rcp.intValue());
                            }

                            try
                            {
                                insertedCount_tMSSqlOutput_1 = insertedCount_tMSSqlOutput_1 +
                                        pstmtInsert_tMSSqlOutput_1
                                                .executeUpdate();
                            } catch (Exception e) {
                                whetherReject_tMSSqlOutput_1 = true;
                                System.err.println(e.getMessage());
                            }
                        }

                        nb_line_tMSSqlOutput_1++;

                        tos_count_tMSSqlOutput_1++;
                    }

                    currentComponent = "tMSSqlInput_6";
                }

                stmt_tMSSqlInput_6.close();

                globalMap.put("tMSSqlInput_6_NB_LINE", Integer.valueOf(nb_line_tMSSqlInput_6));

                this.ok_Hash.put("tMSSqlInput_6", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlInput_6", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMap_1";

                this.ok_Hash.put("tMap_1", Boolean.valueOf(true));
                this.end_Hash.put("tMap_1", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlOutput_1";

                if (pstmtUpdate_tMSSqlOutput_1 != null)
                {
                    pstmtUpdate_tMSSqlOutput_1.close();
                }

                if (pstmtInsert_tMSSqlOutput_1 != null)
                {
                    pstmtInsert_tMSSqlOutput_1.close();
                }

                nb_line_deleted_tMSSqlOutput_1 = nb_line_deleted_tMSSqlOutput_1 +
                        deletedCount_tMSSqlOutput_1;

                nb_line_update_tMSSqlOutput_1 = nb_line_update_tMSSqlOutput_1 +
                        updatedCount_tMSSqlOutput_1;

                nb_line_inserted_tMSSqlOutput_1 = nb_line_inserted_tMSSqlOutput_1 +
                        insertedCount_tMSSqlOutput_1;

                globalMap.put("tMSSqlOutput_1_NB_LINE", Integer.valueOf(nb_line_tMSSqlOutput_1));
                globalMap.put("tMSSqlOutput_1_NB_LINE_UPDATED",
                        Integer.valueOf(nb_line_update_tMSSqlOutput_1));
                globalMap.put("tMSSqlOutput_1_NB_LINE_INSERTED",
                        Integer.valueOf(nb_line_inserted_tMSSqlOutput_1));
                globalMap.put("tMSSqlOutput_1_NB_LINE_DELETED",
                        Integer.valueOf(nb_line_deleted_tMSSqlOutput_1));

                this.ok_Hash.put("tMSSqlOutput_1", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlOutput_1", Long.valueOf(System.currentTimeMillis()));

                tWarn_1Process(globalMap);

                this.globalResumeTicket = true;
            }

            if ((this.resumeEntryMethodName == null) || (this.globalResumeTicket)) {
                this.resumeUtil.addLog("CHECKPOINT",
                        "CONNECTION:SUBJOB_OK:tMSSqlInput_6:OnSubjobOk", "",
                        Thread.currentThread().getId(), "", "", "", "");
            }

            tMSSqlCommit_1Process(globalMap);
        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tMSSqlInput_6_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tWarn_1Process(Map<String, Object> globalMap) throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tWarn_1_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                this.ok_Hash.put("tWarn_1", Boolean.valueOf(false));
                this.start_Hash.put("tWarn_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tWarn_1";

                int tos_count_tWarn_1 = 0;

                currentComponent = "tWarn_1";

                this.resumeUtil.addLog("USER_DEF_LOG", "NODE:tWarn_1", "",
                        Thread.currentThread().getId(),
                        "INFO", "", "CopyRcpDataToArm - Data imported into " +
                                this.context.ArmDbRcpView + " successfully.", "");
                this.tLogCatcher_1.addMessage("tWarn", "tWarn_1", 3, "CopyRcpDataToArm - Data imported into " +
                        this.context.ArmDbRcpView +
                        " successfully.", 0);
                tLogCatcher_1Process(globalMap);

                tos_count_tWarn_1++;

                currentComponent = "tWarn_1";

                this.ok_Hash.put("tWarn_1", Boolean.valueOf(true));
                this.end_Hash.put("tWarn_1", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tWarn_1_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tMSSqlCommit_1Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tMSSqlCommit_1_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                this.ok_Hash.put("tMSSqlCommit_1", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlCommit_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlCommit_1";

                int tos_count_tMSSqlCommit_1 = 0;

                currentComponent = "tMSSqlCommit_1";

                Connection conn_tMSSqlCommit_1 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");
                if ((conn_tMSSqlCommit_1 != null) &&
                        (!conn_tMSSqlCommit_1.isClosed())) {
                    conn_tMSSqlCommit_1.commit();
                }

                tos_count_tMSSqlCommit_1++;

                currentComponent = "tMSSqlCommit_1";

                this.ok_Hash.put("tMSSqlCommit_1", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlCommit_1", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

            if ((this.resumeEntryMethodName == null) || (this.globalResumeTicket)) {
                this.resumeUtil.addLog("CHECKPOINT",
                        "CONNECTION:SUBJOB_OK:tMSSqlCommit_1:OnSubjobOk", "",
                        Thread.currentThread().getId(), "", "", "", "");
            }

            tFileInputDelimited_1Process(globalMap);
        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tMSSqlCommit_1_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tFileInputDelimited_1Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                row7Struct row7 = new row7Struct();
                rcpFile2InputStruct rcpFile2Input = new rcpFile2InputStruct();
                row8Struct row8 = new row8Struct();

                this.ok_Hash.put("tMSSqlCommit_4", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlCommit_4", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlCommit_4";

                int tos_count_tMSSqlCommit_4 = 0;

                this.ok_Hash.put("tMSSqlRow_1", Boolean.valueOf(false));
                this.start_Hash.put("tMSSqlRow_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMSSqlRow_1";

                int tos_count_tMSSqlRow_1 = 0;

                String dbschema_tMSSqlRow_1 = "";

                dbschema_tMSSqlRow_1 =
                        (String)globalMap
                                .get("dbschema_tMSSqlConnection_1");
                Connection conn_tMSSqlRow_1 =
                        (Connection)globalMap
                                .get("conn_tMSSqlConnection_1");

                Statement stmt_tMSSqlRow_1 = conn_tMSSqlRow_1
                        .createStatement();
                String query_tMSSqlRow_1 = "";
                boolean whetherReject_tMSSqlRow_1 = false;

                this.ok_Hash.put("tMap_2", Boolean.valueOf(false));
                this.start_Hash.put("tMap_2", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tMap_2";

                int tos_count_tMap_2 = 0;

                rcpFile2InputStruct rcpFile2Input_tmp = new rcpFile2InputStruct();

                this.ok_Hash.put("tFileInputDelimited_1", Boolean.valueOf(false));
                this.start_Hash.put("tFileInputDelimited_1",
                        Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tFileInputDelimited_1";

                int tos_count_tFileInputDelimited_1 = 0;

                FileInputDelimited fid_tFileInputDelimited_1 = new FileInputDelimited(
                        this.context.RcpManagerFile, "ISO-8859-15", "|", "\n", true,
                        1, 0, -1, -1, false);
                while (fid_tFileInputDelimited_1.nextRecord()) {
                    row7 = null;
                    boolean whetherReject_tFileInputDelimited_1 = false;
                    row7 = new row7Struct();
                    try
                    {
                        row7.utCreationDate = fid_tFileInputDelimited_1.get(0);
                        row7.utLastModifiedDate = fid_tFileInputDelimited_1
                                .get(1);
                        row7.utCode = fid_tFileInputDelimited_1.get(2);
                        row7.utcodeStatus = fid_tFileInputDelimited_1.get(3);
                        row7.thirdParty = fid_tFileInputDelimited_1.get(4);
                        row7.thirdPartyStatus = fid_tFileInputDelimited_1
                                .get(5);
                        row7.MercureCode = fid_tFileInputDelimited_1.get(6);
                        row7.presenceFlag = fid_tFileInputDelimited_1.get(7);
                        row7.personStatus = fid_tFileInputDelimited_1.get(8);
                        row7.utInMercure = fid_tFileInputDelimited_1.get(9);
                        row7.utInAddrBook = fid_tFileInputDelimited_1.get(10);
                        row7.utInPhoneBook = fid_tFileInputDelimited_1.get(11);
                        row7.coseLastname = fid_tFileInputDelimited_1.get(12);
                        row7.hrLastname = fid_tFileInputDelimited_1.get(13);
                        row7.maddrBkLastname = fid_tFileInputDelimited_1
                                .get(14);
                        row7.ipbLastName = fid_tFileInputDelimited_1.get(15);
                        row7.expLastname = fid_tFileInputDelimited_1.get(16);
                        row7.coseFirstname = fid_tFileInputDelimited_1.get(17);
                        row7.hrFirstName = fid_tFileInputDelimited_1.get(18);
                        row7.maddrbkFirstname = fid_tFileInputDelimited_1
                                .get(19);
                        row7.ipbFirstname = fid_tFileInputDelimited_1.get(20);
                        row7.expFirstname = fid_tFileInputDelimited_1.get(21);
                        row7.coseTitle = fid_tFileInputDelimited_1.get(22);
                        row7.hrTitle = fid_tFileInputDelimited_1.get(23);
                        row7.maddrbkTitle = fid_tFileInputDelimited_1.get(24);
                        row7.ipbTitle = fid_tFileInputDelimited_1.get(25);
                        row7.rcpTitle = fid_tFileInputDelimited_1.get(26);
                        row7.mailAddr = fid_tFileInputDelimited_1.get(27);
                        row7.mailAddrIpb = fid_tFileInputDelimited_1.get(28);
                        row7.phoneNumber = fid_tFileInputDelimited_1.get(29);
                        row7.faxNumber = fid_tFileInputDelimited_1.get(30);
                        row7.email = fid_tFileInputDelimited_1.get(31);
                        row7.esfCode = fid_tFileInputDelimited_1.get(32);
                        row7.esfWording = fid_tFileInputDelimited_1.get(33);
                        row7.coseDomain = fid_tFileInputDelimited_1.get(34);
                        row7.domainName = fid_tFileInputDelimited_1.get(35);
                        row7.entityName = fid_tFileInputDelimited_1.get(36);
                        row7.coseMain = fid_tFileInputDelimited_1.get(37);
                        row7.coseBackup = fid_tFileInputDelimited_1.get(38);
                        row7.mgrUt = fid_tFileInputDelimited_1.get(39);
                        row7.mgrFullname = fid_tFileInputDelimited_1.get(40);
                        row7.mngStmtStatus = fid_tFileInputDelimited_1.get(41);
                        row7.mngStVisa = fid_tFileInputDelimited_1.get(42);
                        row7.codeLigne = fid_tFileInputDelimited_1.get(43);
                        row7.libelleLigne = fid_tFileInputDelimited_1.get(44);
                        row7.batiment = fid_tFileInputDelimited_1.get(45);
                        row7.codelignMetier = fid_tFileInputDelimited_1.get(46);
                        row7.typeAnoMng = fid_tFileInputDelimited_1.get(47);
                    }
                    catch (Exception e) {
                        whetherReject_tFileInputDelimited_1 = true;
                        System.err.println(e.getMessage());
                        row7 = null;
                    }

                    currentComponent = "tFileInputDelimited_1";

                    tos_count_tFileInputDelimited_1++;

                    if (row7 != null)
                    {
                        currentComponent = "tMap_2";

                        boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;

                        boolean rejectedInnerJoin_tMap_2 = false;
                        boolean mainRowRejected_tMap_2 = false;

                        rcpFile2Input = null;

                        rcpFile2Input_tmp.utCode = row7.utCode;
                        rcpFile2Input_tmp.mngStatus =
                                (row7.mngStmtStatus
                                        .trim().equals("") ? null :
                                        row7.mngStmtStatus.trim());
                        rcpFile2Input = rcpFile2Input_tmp;

                        rejectedInnerJoin_tMap_2 = false;

                        tos_count_tMap_2++;

                        if (rcpFile2Input != null)
                        {
                            currentComponent = "tMSSqlRow_1";

                            row8 = null;

                            whetherReject_tMSSqlRow_1 = false;
                            query_tMSSqlRow_1 = "  DECLARE @utCode nvarchar(6);  DECLARE @mngStatus nvarchar(50);    SET @utCode = '" +
                                    rcpFile2Input.utCode +
                                    "';  SET @utCode=case @utCode  when 'null' then null else @utCode end;    SET @mngStatus = '" +
                                    rcpFile2Input.mngStatus +
                                    "';  SET @mngStatus=case @mngStatus  when 'null' then null else @mngStatus end;    update t_user set managerStatus=@mngStatus where ut=@utCode;    ";
                            globalMap.put("tMSSqlRow_1_QUERY",
                                    query_tMSSqlRow_1);
                            try {
                                stmt_tMSSqlRow_1.execute(query_tMSSqlRow_1);
                            }
                            catch (Exception e) {
                                whetherReject_tMSSqlRow_1 = true;
                                System.err.print(e.getMessage());
                            }

                            if (!whetherReject_tMSSqlRow_1) {
                                row8 = new row8Struct();
                                row8.utCode = rcpFile2Input.utCode;
                                row8.mngStatus = rcpFile2Input.mngStatus;
                            }

                            tos_count_tMSSqlRow_1++;

                            if (row8 != null)
                            {
                                currentComponent = "tMSSqlCommit_4";

                                Connection conn_tMSSqlCommit_4 =
                                        (Connection)globalMap
                                                .get("conn_tMSSqlConnection_1");
                                if ((conn_tMSSqlCommit_4 != null) &&
                                        (!conn_tMSSqlCommit_4.isClosed())) {
                                    conn_tMSSqlCommit_4.commit();
                                }

                                tos_count_tMSSqlCommit_4++;
                            }

                        }

                    }

                    currentComponent = "tFileInputDelimited_1";
                }

                if (!(this.context.RcpManagerFile instanceof InputStream)) {
                    fid_tFileInputDelimited_1.close();
                }
                globalMap.put("tFileInputDelimited_1_NB_LINE",
                        Integer.valueOf(fid_tFileInputDelimited_1.getRowNumber()));

                this.ok_Hash.put("tFileInputDelimited_1", Boolean.valueOf(true));
                this.end_Hash.put("tFileInputDelimited_1",
                        Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMap_2";

                this.ok_Hash.put("tMap_2", Boolean.valueOf(true));
                this.end_Hash.put("tMap_2", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlRow_1";

                stmt_tMSSqlRow_1.close();

                this.ok_Hash.put("tMSSqlRow_1", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlRow_1", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tMSSqlCommit_4";

                this.ok_Hash.put("tMSSqlCommit_4", Boolean.valueOf(true));
                this.end_Hash.put("tMSSqlCommit_4", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

            if ((this.resumeEntryMethodName == null) || (this.globalResumeTicket)) {
                this.resumeUtil
                        .addLog(
                                "CHECKPOINT",
                                "CONNECTION:SUBJOB_OK:tFileInputDelimited_1:OnSubjobOk",
                                "", Thread.currentThread().getId(), "",
                                "", "", "");
            }

            tWarn_2Process(globalMap);
        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tWarn_2Process(Map<String, Object> globalMap) throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tWarn_2_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                this.ok_Hash.put("tWarn_2", Boolean.valueOf(false));
                this.start_Hash.put("tWarn_2", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tWarn_2";

                int tos_count_tWarn_2 = 0;

                currentComponent = "tWarn_2";

                this.resumeUtil
                        .addLog(
                                "USER_DEF_LOG",
                                "NODE:tWarn_2",
                                "",
                                Thread.currentThread().getId(),
                                "WARN",
                                "",
                                "CopyRcpDataToArm - Updated managerStatus from RCP file successfully.",
                                "");
                this.tLogCatcher_1
                        .addMessage(
                                "tWarn",
                                "tWarn_2",
                                4,
                                "CopyRcpDataToArm - Updated managerStatus from RCP file successfully.",
                                0);
                tLogCatcher_1Process(globalMap);

                tos_count_tWarn_2++;

                currentComponent = "tWarn_2";

                this.ok_Hash.put("tWarn_2", Boolean.valueOf(true));
                this.end_Hash.put("tWarn_2", Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tWarn_2_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public void tLogCatcher_1Process(Map<String, Object> globalMap)
            throws CopyRcpDataToArm.TalendException
    {
        globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", Integer.valueOf(0));

        String currentComponent = "";
        try
        {
            String currentMethodName = new Exception().getStackTrace()[0]
                    .getMethodName();
            boolean resumeIt = currentMethodName.equals(this.resumeEntryMethodName);
            if ((this.resumeEntryMethodName == null) || (resumeIt) || (this.globalResumeTicket))
            {
                row2Struct row2 = new row2Struct();

                this.ok_Hash.put("tFileOutputDelimited_1", Boolean.valueOf(false));
                this.start_Hash.put("tFileOutputDelimited_1",
                        Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tFileOutputDelimited_1";

                int tos_count_tFileOutputDelimited_1 = 0;

                String fileName_tFileOutputDelimited_1 = new File(
                        this.context.LogFile).getAbsolutePath().replace("\\", "/");
                String fullName_tFileOutputDelimited_1 = null;
                String extension_tFileOutputDelimited_1 = null;
                String directory_tFileOutputDelimited_1 = null;
                if (fileName_tFileOutputDelimited_1.indexOf("/") != -1)
                {
                    if (fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1
                            .lastIndexOf("/")) {
                        fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
                        extension_tFileOutputDelimited_1 = "";
                    } else {
                        fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
                                .substring(0, fileName_tFileOutputDelimited_1
                                        .lastIndexOf("."));
                        extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
                                .substring(fileName_tFileOutputDelimited_1
                                        .lastIndexOf("."));
                    }
                    directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
                            .substring(0, fileName_tFileOutputDelimited_1
                                    .lastIndexOf("/"));
                } else {
                    if (fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
                        fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
                                .substring(0, fileName_tFileOutputDelimited_1
                                        .lastIndexOf("."));
                        extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1
                                .substring(fileName_tFileOutputDelimited_1
                                        .lastIndexOf("."));
                    } else {
                        fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
                        extension_tFileOutputDelimited_1 = "";
                    }
                    directory_tFileOutputDelimited_1 = "";
                }

                int nb_line_tFileOutputDelimited_1 = 0;
                int splitEvery_tFileOutputDelimited_1 = 1000;
                int splitedFileNo_tFileOutputDelimited_1 = 0;
                int currentRow_tFileOutputDelimited_1 = 0;

                String OUT_DELIM_tFileOutputDelimited_1 =
                        ";";

                String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 =
                        "\n";

                if ((directory_tFileOutputDelimited_1 != null) &&
                        (directory_tFileOutputDelimited_1.trim().length() != 0)) {
                    File dir_tFileOutputDelimited_1 = new File(
                            directory_tFileOutputDelimited_1);
                    if (!dir_tFileOutputDelimited_1.exists()) {
                        dir_tFileOutputDelimited_1.mkdirs();
                    }

                }

                Writer outtFileOutputDelimited_1 = new BufferedWriter(
                        new OutputStreamWriter(
                                new FileOutputStream(
                                        fileName_tFileOutputDelimited_1, true),
                                "ISO-8859-15"));
                File filetFileOutputDelimited_1 = new File(
                        fileName_tFileOutputDelimited_1);

                if (filetFileOutputDelimited_1.length() == 0L)
                {
                    outtFileOutputDelimited_1.write("moment");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("pid");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("root_pid");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("father_pid");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("project");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("job");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("context");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("priority");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("type");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("origin");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("message");

                    outtFileOutputDelimited_1
                            .write(";");

                    outtFileOutputDelimited_1.write("code");

                    outtFileOutputDelimited_1
                            .write("\n");
                }

                this.ok_Hash.put("tLogCatcher_1", Boolean.valueOf(false));
                this.start_Hash.put("tLogCatcher_1", Long.valueOf(System.currentTimeMillis()));
                currentComponent = "tLogCatcher_1";

                int tos_count_tLogCatcher_1 = 0;

                Iterator localIterator = this.tLogCatcher_1
                        .getMessages().iterator();

                while (localIterator.hasNext()) {
                    LogCatcherUtils.LogCatcherMessage lcm = (LogCatcherUtils.LogCatcherMessage)localIterator.next();
                    row2.type = lcm.getType();
                    row2.origin = ((lcm.getOrigin() == null) ||
                            (lcm.getOrigin().length() < 1) ? null : lcm
                            .getOrigin());
                    row2.priority = Integer.valueOf(lcm.getPriority());
                    row2.message = lcm.getMessage();
                    row2.code = Integer.valueOf(lcm.getCode());

                    row2.moment = Calendar.getInstance().getTime();

                    row2.pid = this.pid;
                    row2.root_pid = this.rootPid;
                    row2.father_pid = this.fatherPid;

                    row2.project = "ARMBATCH";
                    row2.job = "CopyRcpDataToArm";
                    row2.context = this.contextStr;

                    currentComponent = "tLogCatcher_1";

                    tos_count_tLogCatcher_1++;

                    currentComponent = "tFileOutputDelimited_1";

                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();

                    if (row2.moment != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                FormatterUtils.format_Date(row2.moment,
                                        "yyyy-MM-dd HH:mm:ss"));
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.pid != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.pid);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.root_pid != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.root_pid);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.father_pid != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.father_pid);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.project != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.project);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.job != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.job);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.context != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.context);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.priority != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.priority);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.type != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.type);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.origin != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.origin);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.message != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.message);
                    }

                    sb_tFileOutputDelimited_1
                            .append(";");

                    if (row2.code != null)
                    {
                        sb_tFileOutputDelimited_1.append(
                                row2.code);
                    }

                    sb_tFileOutputDelimited_1
                            .append("\n");

                    nb_line_tFileOutputDelimited_1++;

                    outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1
                            .toString());

                    tos_count_tFileOutputDelimited_1++;

                    currentComponent = "tLogCatcher_1";
                }

                this.ok_Hash.put("tLogCatcher_1", Boolean.valueOf(true));
                this.end_Hash.put("tLogCatcher_1", Long.valueOf(System.currentTimeMillis()));

                currentComponent = "tFileOutputDelimited_1";

                outtFileOutputDelimited_1.close();
                globalMap.put("tFileOutputDelimited_1_NB_LINE",
                        Integer.valueOf(nb_line_tFileOutputDelimited_1));

                this.ok_Hash.put("tFileOutputDelimited_1", Boolean.valueOf(true));
                this.end_Hash.put("tFileOutputDelimited_1",
                        Long.valueOf(System.currentTimeMillis()));

                this.globalResumeTicket = true;
            }

        }
        catch (Exception e)
        {
            throw new TalendException(e, currentComponent, globalMap, null);
        }

        globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", Integer.valueOf(1));
    }

    public static void main(String[] args)
    {
        CopyRcpDataToArm CopyRcpDataToArmClass = new CopyRcpDataToArm();

        int exitCode = CopyRcpDataToArmClass.runJobInTOS(args);

        System.exit(exitCode);
    }

    public String[][] runJob(String[] args)
    {
        int exitCode = runJobInTOS(args);
        String[][] bufferValue = { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public int runJobInTOS(String[] args)
    {
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }

        if (this.clientHost == null) {
            this.clientHost = this.defaultClientHost;
        }

        if ((this.pid == null) || ("0".equals(this.pid))) {
            this.pid = TalendString.getAsciiRandomString(6);
        }

        if (this.rootPid == null) {
            this.rootPid = this.pid;
        }
        if (this.fatherPid == null)
            this.fatherPid = this.pid;
        else {
            this.isChildJob = true;
        }

        this.resumeEntryMethodName =
                ResumeUtil.getResumeEntryMethodName(this.resuming_checkpoint_path);
        this.resumeUtil = new ResumeUtil(this.resuming_logs_dir_path, this.isChildJob, this.rootPid);
        this.resumeUtil.initCommonInfo(this.pid, this.rootPid, this.fatherPid, "ARMBATCH",
                "CopyRcpDataToArm", this.contextStr, "1.0");

        this.resumeUtil.addLog("JOB_STARTED", "JOB:CopyRcpDataToArm",
                this.parent_part_launcher, Thread.currentThread().getId(), "",
                "", "", "");
        try
        {
            InputStream inContext = CopyRcpDataToArm.class
                    .getClassLoader()
                    .getResourceAsStream(
                            "armbatch/copyrcpdatatoarm_1_0/contexts/Default.properties");
            if (inContext != null) {
                this.defaultProps.load(inContext);
                inContext.close();
                this.context = new ContextProperties(this.defaultProps);
            }

            if (this.contextStr.compareTo("Default") != 0) {
                inContext = CopyRcpDataToArm.class.getClassLoader()
                        .getResourceAsStream(
                                "armbatch/copyrcpdatatoarm_1_0/contexts/" +
                                        this.contextStr + ".properties");
                if (inContext != null) {
                    this.context.load(inContext);
                    inContext.close();
                }
            }

            if (!this.context_param.isEmpty()) {
                this.context.putAll(this.context_param);
            }

            this.context.ArmDbHost = this.context.getProperty("ArmDbHost");

            this.context.ArmDbName = this.context.getProperty("ArmDbName");

            this.context.ArmDbParams = this.context.getProperty("ArmDbParams");

            this.context.ArmDbPassword = this.context
                    .getProperty("ArmDbPassword");

            this.context.ArmDbPort = this.context.getProperty("ArmDbPort");

            this.context.ArmDbRcpView = this.context.getProperty("ArmDbRcpView");

            this.context.ArmDbSasRcpTable = this.context
                    .getProperty("ArmDbSasRcpTable");

            this.context.ArmDbUser = this.context.getProperty("ArmDbUser");

            this.context.LogFile = this.context.getProperty("LogFile");

            this.context.RcpManagerFile = this.context
                    .getProperty("RcpManagerFile");
        }
        catch (IOException ie) {
            System.err.println("Could not load context " + this.contextStr);
            ie.printStackTrace();
        }

        long startUsedMemory = Runtime.getRuntime().totalMemory() -
                Runtime.getRuntime().freeMemory();
        long endUsedMemory = 0L;
        long end = 0L;

        this.startTime = System.currentTimeMillis();

        this.globalResumeTicket = true;

        this.globalResumeTicket = false;
        try
        {
            this.errorCode = null;
            tMSSqlConnection_1Process(this.globalMap);
            this.status = "end";
        } catch (TalendException e_tMSSqlConnection_1) {
            this.status = "failure";
            e_tMSSqlConnection_1.printStackTrace();
            this.globalMap.put("tMSSqlConnection_1_SUBPROCESS_STATE", Integer.valueOf(-1));
        }

        this.globalResumeTicket = true;

        end = System.currentTimeMillis();

        if (this.watch) {
            System.out.println(end - this.startTime + " milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() -
                Runtime.getRuntime().freeMemory();

        this.resumeUtil.addLog("JOB_ENDED", "JOB:CopyRcpDataToArm", this.parent_part_launcher,
                Thread.currentThread().getId(), "", "", "", "");

        if (this.errorCode == null) {
            return (this.status != null) && (this.status.equals("failure")) ? 1 : 0;
        }
        return this.errorCode.intValue();
    }

    private void evalParam(String arg)
    {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            this.resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            this.resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            this.parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            this.watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            this.portStats = Integer.parseInt(arg.substring(12));
        } else if (arg.startsWith("--trace_port=")) {
            this.portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            this.clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            this.contextStr = arg.substring(10);
        } else if (arg.startsWith("--father_pid=")) {
            this.fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            this.rootPid = arg.substring(11);
        } else if (arg.startsWith("--pid=")) {
            this.pid = arg.substring(6);
        } else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if ((keyValue != null) && ((index = keyValue.indexOf('=')) > -1))
                this.context_param.put(keyValue.substring(0, index), keyValue
                        .substring(index + 1));
        }
    }

    public Integer getErrorCode()
    {
        return this.errorCode;
    }

    public String getStatus() {
        return this.status;
    }

    private class ContextProperties extends Properties
    {
        public String ArmDbHost;
        public String ArmDbName;
        public String ArmDbParams;
        public String ArmDbPassword;
        public String ArmDbPort;
        public String ArmDbRcpView;
        public String ArmDbSasRcpTable;
        public String ArmDbUser;
        public String LogFile;
        public String RcpManagerFile;

        public ContextProperties(Properties properties)
        {
            super();
        }

        public ContextProperties()
        {
        }

        public void synchronizeContext()
        {
            if (this.ArmDbHost != null)
            {
                setProperty("ArmDbHost", this.ArmDbHost.toString());
            }

            if (this.ArmDbName != null)
            {
                setProperty("ArmDbName", this.ArmDbName.toString());
            }

            if (this.ArmDbParams != null)
            {
                setProperty("ArmDbParams", this.ArmDbParams.toString());
            }

            if (this.ArmDbPassword != null)
            {
                setProperty("ArmDbPassword", this.ArmDbPassword.toString());
            }

            if (this.ArmDbPort != null)
            {
                setProperty("ArmDbPort", this.ArmDbPort.toString());
            }

            if (this.ArmDbRcpView != null)
            {
                setProperty("ArmDbRcpView", this.ArmDbRcpView.toString());
            }

            if (this.ArmDbSasRcpTable != null)
            {
                setProperty("ArmDbSasRcpTable", this.ArmDbSasRcpTable
                        .toString());
            }

            if (this.ArmDbUser != null)
            {
                setProperty("ArmDbUser", this.ArmDbUser.toString());
            }

            if (this.LogFile != null)
            {
                setProperty("LogFile", this.LogFile.toString());
            }

            if (this.RcpManagerFile != null)
            {
                setProperty("RcpManagerFile", this.RcpManagerFile.toString());
            }
        }
    }

    private class TalendException extends Exception
    {
        private Map<String, Object> globalMap = null;
        private Exception e = null;
        private String currentComponent = null;

        private TalendException(String e, Map<String, Object> errorComponent)
        {
            this.currentComponent = errorComponent;
            this.globalMap = globalMap;
            this.e = e;
        }

        public void printStackTrace()
        {
            if ((!(this.e instanceof TalendException)) && (!(this.e instanceof TDieException))) {
                this.globalMap.put(this.currentComponent + "_ERROR_MESSAGE", this.e
                        .getMessage());
                System.err
                        .println("Exception in component " + this.currentComponent);
            }
            if (!(this.e instanceof TDieException)) {
                if ((this.e instanceof TalendException)) {
                    this.e.printStackTrace();
                } else {
                    this.e.printStackTrace();
                    this.e.printStackTrace(CopyRcpDataToArm.this.errorMessagePS);
                }
            }
            if (!(this.e instanceof TalendException))
                try
                {
                    Method[] arrayOfMethod;
                    int j = (arrayOfMethod = getClass()
                            .getEnclosingClass().getMethods()).length; for (int i = 0; i < j; i++) {
                    Method m = arrayOfMethod[i];
                    if (m.getName().compareTo(this.currentComponent + "_error") == 0) {
                        m.invoke(CopyRcpDataToArm.this, new Object[] { this.e,
                                this.currentComponent, this.globalMap });
                        break;
                    }
                }

                    if (!(this.e instanceof TDieException)) {
                        CopyRcpDataToArm.this.tLogCatcher_1.addMessage("Java Exception",
                                this.currentComponent, 6, this.e.getClass().getName() +
                                        ":" + this.e.getMessage(), 1);
                        CopyRcpDataToArm.this.tLogCatcher_1Process(this.globalMap);
                    }
                } catch (SecurityException e) {
                    this.e.printStackTrace();
                } catch (IllegalArgumentException e) {
                    this.e.printStackTrace();
                } catch (IllegalAccessException e) {
                    this.e.printStackTrace();
                } catch (InvocationTargetException e) {
                    this.e.printStackTrace();
                }
                catch (TalendException localTalendException)
                {
                }
        }
    }

    public static class copyOffStruct
            implements IPersistableRow<copyOffStruct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public String lastname;
        public String firstname;
        public String phone;
        public String fax;
        public String building;
        public String address;
        public String title;
        public String mobile;
        public String email;
        public String room;
        public String ut;
        public String country;
        public String statusEmployee;
        public String esfCode;
        public String esfName;
        public String ubCode;
        public String ubName;
        public String entity;
        public String teamManager;
        public String entityAddress;
        public String countryCode;
        public boolean isCalyon;
        public boolean isInternal;
        public boolean isInternational;
        public boolean isPresent;
        public String tiersCode;
        public String lec;
        public String lecBackup;
        public String lecSecondaries;
        public Integer coseData;
        public Integer coseDataPrevious;
        public Integer validatorDelegationPool;
        public Integer id_business_line;
        public Integer id_department;
        public Integer id_entity;
        public Integer id_department_rcp;
        public Integer id_business_line_rcp;

        public String getLastname()
        {
            return this.lastname;
        }

        public String getFirstname()
        {
            return this.firstname;
        }

        public String getPhone()
        {
            return this.phone;
        }

        public String getFax()
        {
            return this.fax;
        }

        public String getBuilding()
        {
            return this.building;
        }

        public String getAddress()
        {
            return this.address;
        }

        public String getTitle()
        {
            return this.title;
        }

        public String getMobile()
        {
            return this.mobile;
        }

        public String getEmail()
        {
            return this.email;
        }

        public String getRoom()
        {
            return this.room;
        }

        public String getUt()
        {
            return this.ut;
        }

        public String getCountry()
        {
            return this.country;
        }

        public String getStatusEmployee()
        {
            return this.statusEmployee;
        }

        public String getEsfCode()
        {
            return this.esfCode;
        }

        public String getEsfName()
        {
            return this.esfName;
        }

        public String getUbCode()
        {
            return this.ubCode;
        }

        public String getUbName()
        {
            return this.ubName;
        }

        public String getEntity()
        {
            return this.entity;
        }

        public String getTeamManager()
        {
            return this.teamManager;
        }

        public String getEntityAddress()
        {
            return this.entityAddress;
        }

        public String getCountryCode()
        {
            return this.countryCode;
        }

        public boolean getIsCalyon()
        {
            return this.isCalyon;
        }

        public boolean getIsInternal()
        {
            return this.isInternal;
        }

        public boolean getIsInternational()
        {
            return this.isInternational;
        }

        public boolean getIsPresent()
        {
            return this.isPresent;
        }

        public String getTiersCode()
        {
            return this.tiersCode;
        }

        public String getLec()
        {
            return this.lec;
        }

        public String getLecBackup()
        {
            return this.lecBackup;
        }

        public String getLecSecondaries()
        {
            return this.lecSecondaries;
        }

        public Integer getCoseData()
        {
            return this.coseData;
        }

        public Integer getCoseDataPrevious()
        {
            return this.coseDataPrevious;
        }

        public Integer getValidatorDelegationPool()
        {
            return this.validatorDelegationPool;
        }

        public Integer getId_business_line()
        {
            return this.id_business_line;
        }

        public Integer getId_department()
        {
            return this.id_department;
        }

        public Integer getId_entity()
        {
            return this.id_entity;
        }

        public Integer getId_department_rcp()
        {
            return this.id_department_rcp;
        }

        public Integer getId_business_line_rcp()
        {
            return this.id_business_line_rcp;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.lastname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.lastname = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.firstname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.firstname = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.phone = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.phone = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.fax = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.fax = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.building = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.building = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.address = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.address = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.title = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.title = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mobile = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mobile = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.email = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.email = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.room = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.room = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ut = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ut = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.country = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.country = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.statusEmployee = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.statusEmployee = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.esfCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.esfCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.esfName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.esfName = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ubCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ubCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ubName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ubName = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.entity = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.entity = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.teamManager = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.teamManager = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.entityAddress = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.entityAddress = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.countryCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.countryCode = new String(commonByteArray, 0,
                                length);
                    }

                    this.isCalyon = dis.readBoolean();

                    this.isInternal = dis.readBoolean();

                    this.isInternational = dis.readBoolean();

                    this.isPresent = dis.readBoolean();

                    length = dis.readInt();
                    if (length == -1) {
                        this.tiersCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.tiersCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.lec = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.lec = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.lecBackup = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.lecBackup = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.lecSecondaries = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.lecSecondaries = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.coseData = null;
                    else {
                        this.coseData = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.coseDataPrevious = null;
                    else {
                        this.coseDataPrevious = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.validatorDelegationPool = null;
                    else {
                        this.validatorDelegationPool = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.id_business_line = null;
                    else {
                        this.id_business_line = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.id_department = null;
                    else {
                        this.id_department = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.id_entity = null;
                    else {
                        this.id_entity = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.id_department_rcp = null;
                    else {
                        this.id_department_rcp = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.id_business_line_rcp = null;
                    else
                        this.id_business_line_rcp = Integer.valueOf(dis.readInt());
                }
                catch (IOException e)
                {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.lastname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.lastname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.firstname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.firstname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.phone == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.phone.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.fax == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.fax.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.building == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.building.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.address == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.address.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.title == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.title.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mobile == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mobile.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.email == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.email.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.room == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.room.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ut == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ut.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.country == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.country.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.statusEmployee == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.statusEmployee.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.esfCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.esfCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.esfName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.esfName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ubCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ubCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ubName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ubName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.entity == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.entity.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.teamManager == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.teamManager.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.entityAddress == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.entityAddress.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.countryCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.countryCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                dos.writeBoolean(this.isCalyon);

                dos.writeBoolean(this.isInternal);

                dos.writeBoolean(this.isInternational);

                dos.writeBoolean(this.isPresent);

                if (this.tiersCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.tiersCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.lec == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.lec.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.lecBackup == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.lecBackup.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.lecSecondaries == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.lecSecondaries.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseData == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.coseData.intValue());
                }

                if (this.coseDataPrevious == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.coseDataPrevious.intValue());
                }

                if (this.validatorDelegationPool == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.validatorDelegationPool.intValue());
                }

                if (this.id_business_line == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.id_business_line.intValue());
                }

                if (this.id_department == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.id_department.intValue());
                }

                if (this.id_entity == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.id_entity.intValue());
                }

                if (this.id_department_rcp == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.id_department_rcp.intValue());
                }

                if (this.id_business_line_rcp == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.id_business_line_rcp.intValue());
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("lastname");
            sb.append("=");
            sb.append(String.valueOf(this.lastname));

            sb.append(", ");

            sb.append("firstname");
            sb.append("=");
            sb.append(String.valueOf(this.firstname));

            sb.append(", ");

            sb.append("phone");
            sb.append("=");
            sb.append(String.valueOf(this.phone));

            sb.append(", ");

            sb.append("fax");
            sb.append("=");
            sb.append(String.valueOf(this.fax));

            sb.append(", ");

            sb.append("building");
            sb.append("=");
            sb.append(String.valueOf(this.building));

            sb.append(", ");

            sb.append("address");
            sb.append("=");
            sb.append(String.valueOf(this.address));

            sb.append(", ");

            sb.append("title");
            sb.append("=");
            sb.append(String.valueOf(this.title));

            sb.append(", ");

            sb.append("mobile");
            sb.append("=");
            sb.append(String.valueOf(this.mobile));

            sb.append(", ");

            sb.append("email");
            sb.append("=");
            sb.append(String.valueOf(this.email));

            sb.append(", ");

            sb.append("room");
            sb.append("=");
            sb.append(String.valueOf(this.room));

            sb.append(", ");

            sb.append("ut");
            sb.append("=");
            sb.append(String.valueOf(this.ut));

            sb.append(", ");

            sb.append("country");
            sb.append("=");
            sb.append(String.valueOf(this.country));

            sb.append(", ");

            sb.append("statusEmployee");
            sb.append("=");
            sb.append(String.valueOf(this.statusEmployee));

            sb.append(", ");

            sb.append("esfCode");
            sb.append("=");
            sb.append(String.valueOf(this.esfCode));

            sb.append(", ");

            sb.append("esfName");
            sb.append("=");
            sb.append(String.valueOf(this.esfName));

            sb.append(", ");

            sb.append("ubCode");
            sb.append("=");
            sb.append(String.valueOf(this.ubCode));

            sb.append(", ");

            sb.append("ubName");
            sb.append("=");
            sb.append(String.valueOf(this.ubName));

            sb.append(", ");

            sb.append("entity");
            sb.append("=");
            sb.append(String.valueOf(this.entity));

            sb.append(", ");

            sb.append("teamManager");
            sb.append("=");
            sb.append(String.valueOf(this.teamManager));

            sb.append(", ");

            sb.append("entityAddress");
            sb.append("=");
            sb.append(String.valueOf(this.entityAddress));

            sb.append(", ");

            sb.append("countryCode");
            sb.append("=");
            sb.append(String.valueOf(this.countryCode));

            sb.append(", ");

            sb.append("isCalyon");
            sb.append("=");
            sb.append(String.valueOf(this.isCalyon));

            sb.append(", ");

            sb.append("isInternal");
            sb.append("=");
            sb.append(String.valueOf(this.isInternal));

            sb.append(", ");

            sb.append("isInternational");
            sb.append("=");
            sb.append(String.valueOf(this.isInternational));

            sb.append(", ");

            sb.append("isPresent");
            sb.append("=");
            sb.append(String.valueOf(this.isPresent));

            sb.append(", ");

            sb.append("tiersCode");
            sb.append("=");
            sb.append(String.valueOf(this.tiersCode));

            sb.append(", ");

            sb.append("lec");
            sb.append("=");
            sb.append(String.valueOf(this.lec));

            sb.append(", ");

            sb.append("lecBackup");
            sb.append("=");
            sb.append(String.valueOf(this.lecBackup));

            sb.append(", ");

            sb.append("lecSecondaries");
            sb.append("=");
            sb.append(String.valueOf(this.lecSecondaries));

            sb.append(", ");

            sb.append("coseData");
            sb.append("=");
            sb.append(String.valueOf(this.coseData));

            sb.append(", ");

            sb.append("coseDataPrevious");
            sb.append("=");
            sb.append(String.valueOf(this.coseDataPrevious));

            sb.append(", ");

            sb.append("validatorDelegationPool");
            sb.append("=");
            sb.append(String.valueOf(this.validatorDelegationPool));

            sb.append(", ");

            sb.append("id_business_line");
            sb.append("=");
            sb.append(String.valueOf(this.id_business_line));

            sb.append(", ");

            sb.append("id_department");
            sb.append("=");
            sb.append(String.valueOf(this.id_department));

            sb.append(", ");

            sb.append("id_entity");
            sb.append("=");
            sb.append(String.valueOf(this.id_entity));

            sb.append(", ");

            sb.append("id_department_rcp");
            sb.append("=");
            sb.append(String.valueOf(this.id_department_rcp));

            sb.append(", ");

            sb.append("id_business_line_rcp");
            sb.append("=");
            sb.append(String.valueOf(this.id_business_line_rcp));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(copyOffStruct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class rcpFile2InputStruct
            implements IPersistableRow<rcpFile2InputStruct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public String utCode;
        public String mngStatus;

        public String getUtCode()
        {
            return this.utCode;
        }

        public String getMngStatus()
        {
            return this.mngStatus;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.utCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mngStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mngStatus = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.utCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mngStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mngStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("utCode");
            sb.append("=");
            sb.append(String.valueOf(this.utCode));

            sb.append(", ");

            sb.append("mngStatus");
            sb.append("=");
            sb.append(String.valueOf(this.mngStatus));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(rcpFile2InputStruct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row1Struct
            implements IPersistableRow<row1Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public String item_last_action;
        public Date item_last_action_applyts;
        public Date item_creation_date;
        public String G1_ArrivalDate;
        public Date G1_ArrivalDate_applyts;
        public String G1_ArrivalDate_prev;
        public Date G1_ArrivalDate_prev_applyts;
        public String G1_BLec;
        public Date G1_BLec_applyts;
        public String G1_BLec_prev;
        public Date G1_BLec_prev_applyts;
        public String G1_BusinessUnit;
        public Date G1_BusinessUnit_applyts;
        public String G1_BusinessUnit_prev;
        public Date G1_BusinessUnit_prev_applyts;
        public String G1_CIDBuUT;
        public Date G1_CIDBuUT_applyts;
        public String G1_CIDBuUT_prev;
        public Date G1_CIDBuUT_prev_applyts;
        public String G1_CIDUT;
        public Date G1_CIDUT_applyts;
        public String G1_CIDUT_prev;
        public Date G1_CIDUT_prev_applyts;
        public String G1_cn;
        public Date G1_cn_applyts;
        public String G1_cn_prev;
        public Date G1_cn_prev_applyts;
        public String G1_ContractorCompany;
        public Date G1_ContractorCompany_applyts;
        public String G1_ContractorCompany_prev;
        public Date G1_ContractorCompany_prev_applyts;
        public String G1_ContractorStatus;
        public Date G1_ContractorStatus_applyts;
        public String G1_ContractorStatus_prev;
        public Date G1_ContractorStatus_prev_applyts;
        public String G1_coseDomain;
        public Date G1_coseDomain_applyts;
        public String G1_coseDomain_prev;
        public Date G1_coseDomain_prev_applyts;
        public String G1_CountryCode2;
        public Date G1_CountryCode2_applyts;
        public String G1_CountryCode2_prev;
        public Date G1_CountryCode2_prev_applyts;
        public String G1_CountryName;
        public Date G1_CountryName_applyts;
        public String G1_CountryName_prev;
        public Date G1_CountryName_prev_applyts;
        public String G1_DepartureDate;
        public Date G1_DepartureDate_applyts;
        public String G1_DepartureDate_prev;
        public Date G1_DepartureDate_prev_applyts;
        public String G1_EmployeeNumber;
        public Date G1_EmployeeNumber_applyts;
        public String G1_EmployeeNumber_prev;
        public Date G1_EmployeeNumber_prev_applyts;
        public String G1_EmployeeType;
        public Date G1_EmployeeType_applyts;
        public String G1_EmployeeType_prev;
        public Date G1_EmployeeType_prev_applyts;
        public String G1_Entity;
        public Date G1_Entity_applyts;
        public String G1_Entity_prev;
        public Date G1_Entity_prev_applyts;
        public String G1_EntityPostalAddress;
        public Date G1_EntityPostalAddress_applyts;
        public String G1_EntityPostalAddress_prev;
        public Date G1_EntityPostalAddress_prev_applyts;
        public String G1_ESFCode;
        public Date G1_ESFCode_applyts;
        public String G1_ESFCode_prev;
        public Date G1_ESFCode_prev_applyts;
        public String G1_ESFShortName;
        public Date G1_ESFShortName_applyts;
        public String G1_ESFShortName_prev;
        public Date G1_ESFShortName_prev_applyts;
        public String G1_FacsimileTelephoneNumber;
        public Date G1_FacsimileTelephoneNumber_applyts;
        public String G1_FacsimileTelephoneNumber_prev;
        public Date G1_FacsimileTelephoneNumber_prev_applyts;
        public String G1_Floor;
        public Date G1_Floor_applyts;
        public String G1_Floor_prev;
        public Date G1_Floor_prev_applyts;
        public String G1_GDDBuUT;
        public Date G1_GDDBuUT_applyts;
        public String G1_GDDBuUT_prev;
        public Date G1_GDDBuUT_prev_applyts;
        public String G1_GDDUT;
        public Date G1_GDDUT_applyts;
        public String G1_GDDUT_prev;
        public Date G1_GDDUT_prev_applyts;
        public String G1_Givenname;
        public Date G1_Givenname_applyts;
        public String G1_Givenname_prev;
        public Date G1_Givenname_prev_applyts;
        public String G1_IsCalyon;
        public Date G1_IsCalyon_applyts;
        public String G1_IsCalyon_prev;
        public Date G1_IsCalyon_prev_applyts;
        public String G1_IsCalyonFR;
        public Date G1_IsCalyonFR_applyts;
        public String G1_IsCalyonFR_prev;
        public Date G1_IsCalyonFR_prev_applyts;
        public String G1_IsCM;
        public Date G1_IsCM_applyts;
        public String G1_IsCM_prev;
        public Date G1_IsCM_prev_applyts;
        public String G1_IsInternal;
        public Date G1_IsInternal_applyts;
        public String G1_IsInternal_prev;
        public Date G1_IsInternal_prev_applyts;
        public String G1_L;
        public Date G1_L_applyts;
        public String G1_L_prev;
        public Date G1_L_prev_applyts;
        public String G1_Level1OUId;
        public Date G1_Level1OUId_applyts;
        public String G1_Level1OUId_prev;
        public Date G1_Level1OUId_prev_applyts;
        public String G1_Level2OUId;
        public Date G1_Level2OUId_applyts;
        public String G1_Level2OUId_prev;
        public Date G1_Level2OUId_prev_applyts;
        public String G1_Level3OUId;
        public Date G1_Level3OUId_applyts;
        public String G1_Level3OUId_prev;
        public Date G1_Level3OUId_prev_applyts;
        public String G1_Level4OUId;
        public Date G1_Level4OUId_applyts;
        public String G1_Level4OUId_prev;
        public Date G1_Level4OUId_prev_applyts;
        public String G1_Level5OUId;
        public Date G1_Level5OUId_applyts;
        public String G1_Level5OUId_prev;
        public Date G1_Level5OUId_prev_applyts;
        public String G1_Level6OUId;
        public Date G1_Level6OUId_applyts;
        public String G1_Level6OUId_prev;
        public Date G1_Level6OUId_prev_applyts;
        public String G1_Level7OUId;
        public Date G1_Level7OUId_applyts;
        public String G1_Level7OUId_prev;
        public Date G1_Level7OUId_prev_applyts;
        public String G1_Level8OUId;
        public Date G1_Level8OUId_applyts;
        public String G1_Level8OUId_prev;
        public Date G1_Level8OUId_prev_applyts;
        public String G1_LocalityName;
        public Date G1_LocalityName_applyts;
        public String G1_LocalityName_prev;
        public Date G1_LocalityName_prev_applyts;
        public String G1_Localization;
        public Date G1_Localization_applyts;
        public String G1_Localization_prev;
        public Date G1_Localization_prev_applyts;
        public String G1_Mail;
        public Date G1_Mail_applyts;
        public String G1_Mail_prev;
        public Date G1_Mail_prev_applyts;
        public String G1_MLec;
        public Date G1_MLec_applyts;
        public String G1_MLec_prev;
        public Date G1_MLec_prev_applyts;
        public String G1_Mobile;
        public Date G1_Mobile_applyts;
        public String G1_Mobile_prev;
        public Date G1_Mobile_prev_applyts;
        public String G1_OrdGivenName;
        public Date G1_OrdGivenName_applyts;
        public String G1_OrdGivenName_prev;
        public Date G1_OrdGivenName_prev_applyts;
        public String G1_PostalAddress;
        public Date G1_PostalAddress_applyts;
        public String G1_PostalAddress_prev;
        public Date G1_PostalAddress_prev_applyts;
        public String G1_Presence;
        public Date G1_Presence_applyts;
        public String G1_Presence_prev;
        public Date G1_Presence_prev_applyts;
        public String G1_RoomNumber;
        public Date G1_RoomNumber_applyts;
        public String G1_RoomNumber_prev;
        public Date G1_RoomNumber_prev_applyts;
        public String G1_SLec;
        public Date G1_SLec_applyts;
        public String G1_SLec_prev;
        public Date G1_SLec_prev_applyts;
        public String G1_sn;
        public Date G1_sn_applyts;
        public String G1_sn_prev;
        public Date G1_sn_prev_applyts;
        public String G1_StatusCode;
        public Date G1_StatusCode_applyts;
        public String G1_StatusCode_prev;
        public Date G1_StatusCode_prev_applyts;
        public String G1_TeamManagerId;
        public Date G1_TeamManagerId_applyts;
        public String G1_TeamManagerId_prev;
        public Date G1_TeamManagerId_prev_applyts;
        public String G1_TeamManagerName;
        public Date G1_TeamManagerName_applyts;
        public String G1_TeamManagerName_prev;
        public Date G1_TeamManagerName_prev_applyts;
        public String G1_TeamSec;
        public Date G1_TeamSec_applyts;
        public String G1_TeamSec_prev;
        public Date G1_TeamSec_prev_applyts;
        public String G1_TeamSecTel;
        public Date G1_TeamSecTel_applyts;
        public String G1_TeamSecTel_prev;
        public Date G1_TeamSecTel_prev_applyts;
        public String G1_TelephoneNumber;
        public Date G1_TelephoneNumber_applyts;
        public String G1_TelephoneNumber_prev;
        public Date G1_TelephoneNumber_prev_applyts;
        public String G1_Title;
        public Date G1_Title_applyts;
        public String G1_Title_prev;
        public Date G1_Title_prev_applyts;
        public String G1_TitleShort;
        public Date G1_TitleShort_applyts;
        public String G1_TitleShort_prev;
        public Date G1_TitleShort_prev_applyts;
        public String G1_UBCode;
        public Date G1_UBCode_applyts;
        public String G1_UBCode_prev;
        public Date G1_UBCode_prev_applyts;
        public String G1_UBShortName;
        public Date G1_UBShortName_applyts;
        public String G1_UBShortName_prev;
        public Date G1_UBShortName_prev_applyts;
        public String G1_Uid;
        public Date G1_Uid_applyts;
        public String G1_Uid_prev;
        public Date G1_Uid_prev_applyts;
        public String G1_TEMLocalization;
        public Date G1_TEMLocalization_applyts;
        public String G1_TEMLocalization_prev;
        public Date G1_TEMLocalization_prev_applyts;
        public String G1_TiersCode;
        public Date G1_TiersCode_applyts;
        public String G1_TiersCode_prev;
        public Date G1_TiersCode_prev_applyts;
        public Integer domain;
        public Integer prevDomain;
        public String G1_ValidatorUTNumber;
        public String G1_ValidatorDelegationPool;
        public String G1_ApproverUTNumber;
        public String G1_ApproverDelegationPool;
        public String G1_DoubleValidation;
        public String G1_BusUnit;
        public Date G1_BusUnit_applyts;
        public String G1_BusUnit_prev;
        public Date G1_BusUnit_prev_applyts;
        public String G1_BusUnitWrd;
        public Date G1_BusUnitWrd_applyts;
        public String G1_BusUnitWrd_prev;
        public Date G1_BusUnitWrd_prev_applyts;
        public String G1_LPCode;
        public Date G1_LPCode_applyts;
        public String G1_LPCode_prev;
        public Date G1_LPCode_prev_applyts;
        public String G1_EntityCode;
        public Date G1_EntityCode_applyts;
        public String G1_EntityCode_prev;
        public Date G1_EntityCode_prev_applyts;
        public Integer BusinessLine_id;
        public Integer Department_id;
        public Integer Entity_id;
        public Integer department_id_rcp;
        public Integer businessLine_id_rcp;

        public String getItem_last_action()
        {
            return this.item_last_action;
        }

        public Date getItem_last_action_applyts()
        {
            return this.item_last_action_applyts;
        }

        public Date getItem_creation_date()
        {
            return this.item_creation_date;
        }

        public String getG1_ArrivalDate()
        {
            return this.G1_ArrivalDate;
        }

        public Date getG1_ArrivalDate_applyts()
        {
            return this.G1_ArrivalDate_applyts;
        }

        public String getG1_ArrivalDate_prev()
        {
            return this.G1_ArrivalDate_prev;
        }

        public Date getG1_ArrivalDate_prev_applyts()
        {
            return this.G1_ArrivalDate_prev_applyts;
        }

        public String getG1_BLec()
        {
            return this.G1_BLec;
        }

        public Date getG1_BLec_applyts()
        {
            return this.G1_BLec_applyts;
        }

        public String getG1_BLec_prev()
        {
            return this.G1_BLec_prev;
        }

        public Date getG1_BLec_prev_applyts()
        {
            return this.G1_BLec_prev_applyts;
        }

        public String getG1_BusinessUnit()
        {
            return this.G1_BusinessUnit;
        }

        public Date getG1_BusinessUnit_applyts()
        {
            return this.G1_BusinessUnit_applyts;
        }

        public String getG1_BusinessUnit_prev()
        {
            return this.G1_BusinessUnit_prev;
        }

        public Date getG1_BusinessUnit_prev_applyts()
        {
            return this.G1_BusinessUnit_prev_applyts;
        }

        public String getG1_CIDBuUT()
        {
            return this.G1_CIDBuUT;
        }

        public Date getG1_CIDBuUT_applyts()
        {
            return this.G1_CIDBuUT_applyts;
        }

        public String getG1_CIDBuUT_prev()
        {
            return this.G1_CIDBuUT_prev;
        }

        public Date getG1_CIDBuUT_prev_applyts()
        {
            return this.G1_CIDBuUT_prev_applyts;
        }

        public String getG1_CIDUT()
        {
            return this.G1_CIDUT;
        }

        public Date getG1_CIDUT_applyts()
        {
            return this.G1_CIDUT_applyts;
        }

        public String getG1_CIDUT_prev()
        {
            return this.G1_CIDUT_prev;
        }

        public Date getG1_CIDUT_prev_applyts()
        {
            return this.G1_CIDUT_prev_applyts;
        }

        public String getG1_cn()
        {
            return this.G1_cn;
        }

        public Date getG1_cn_applyts()
        {
            return this.G1_cn_applyts;
        }

        public String getG1_cn_prev()
        {
            return this.G1_cn_prev;
        }

        public Date getG1_cn_prev_applyts()
        {
            return this.G1_cn_prev_applyts;
        }

        public String getG1_ContractorCompany()
        {
            return this.G1_ContractorCompany;
        }

        public Date getG1_ContractorCompany_applyts()
        {
            return this.G1_ContractorCompany_applyts;
        }

        public String getG1_ContractorCompany_prev()
        {
            return this.G1_ContractorCompany_prev;
        }

        public Date getG1_ContractorCompany_prev_applyts()
        {
            return this.G1_ContractorCompany_prev_applyts;
        }

        public String getG1_ContractorStatus()
        {
            return this.G1_ContractorStatus;
        }

        public Date getG1_ContractorStatus_applyts()
        {
            return this.G1_ContractorStatus_applyts;
        }

        public String getG1_ContractorStatus_prev()
        {
            return this.G1_ContractorStatus_prev;
        }

        public Date getG1_ContractorStatus_prev_applyts()
        {
            return this.G1_ContractorStatus_prev_applyts;
        }

        public String getG1_coseDomain()
        {
            return this.G1_coseDomain;
        }

        public Date getG1_coseDomain_applyts()
        {
            return this.G1_coseDomain_applyts;
        }

        public String getG1_coseDomain_prev()
        {
            return this.G1_coseDomain_prev;
        }

        public Date getG1_coseDomain_prev_applyts()
        {
            return this.G1_coseDomain_prev_applyts;
        }

        public String getG1_CountryCode2()
        {
            return this.G1_CountryCode2;
        }

        public Date getG1_CountryCode2_applyts()
        {
            return this.G1_CountryCode2_applyts;
        }

        public String getG1_CountryCode2_prev()
        {
            return this.G1_CountryCode2_prev;
        }

        public Date getG1_CountryCode2_prev_applyts()
        {
            return this.G1_CountryCode2_prev_applyts;
        }

        public String getG1_CountryName()
        {
            return this.G1_CountryName;
        }

        public Date getG1_CountryName_applyts()
        {
            return this.G1_CountryName_applyts;
        }

        public String getG1_CountryName_prev()
        {
            return this.G1_CountryName_prev;
        }

        public Date getG1_CountryName_prev_applyts()
        {
            return this.G1_CountryName_prev_applyts;
        }

        public String getG1_DepartureDate()
        {
            return this.G1_DepartureDate;
        }

        public Date getG1_DepartureDate_applyts()
        {
            return this.G1_DepartureDate_applyts;
        }

        public String getG1_DepartureDate_prev()
        {
            return this.G1_DepartureDate_prev;
        }

        public Date getG1_DepartureDate_prev_applyts()
        {
            return this.G1_DepartureDate_prev_applyts;
        }

        public String getG1_EmployeeNumber()
        {
            return this.G1_EmployeeNumber;
        }

        public Date getG1_EmployeeNumber_applyts()
        {
            return this.G1_EmployeeNumber_applyts;
        }

        public String getG1_EmployeeNumber_prev()
        {
            return this.G1_EmployeeNumber_prev;
        }

        public Date getG1_EmployeeNumber_prev_applyts()
        {
            return this.G1_EmployeeNumber_prev_applyts;
        }

        public String getG1_EmployeeType()
        {
            return this.G1_EmployeeType;
        }

        public Date getG1_EmployeeType_applyts()
        {
            return this.G1_EmployeeType_applyts;
        }

        public String getG1_EmployeeType_prev()
        {
            return this.G1_EmployeeType_prev;
        }

        public Date getG1_EmployeeType_prev_applyts()
        {
            return this.G1_EmployeeType_prev_applyts;
        }

        public String getG1_Entity()
        {
            return this.G1_Entity;
        }

        public Date getG1_Entity_applyts()
        {
            return this.G1_Entity_applyts;
        }

        public String getG1_Entity_prev()
        {
            return this.G1_Entity_prev;
        }

        public Date getG1_Entity_prev_applyts()
        {
            return this.G1_Entity_prev_applyts;
        }

        public String getG1_EntityPostalAddress()
        {
            return this.G1_EntityPostalAddress;
        }

        public Date getG1_EntityPostalAddress_applyts()
        {
            return this.G1_EntityPostalAddress_applyts;
        }

        public String getG1_EntityPostalAddress_prev()
        {
            return this.G1_EntityPostalAddress_prev;
        }

        public Date getG1_EntityPostalAddress_prev_applyts()
        {
            return this.G1_EntityPostalAddress_prev_applyts;
        }

        public String getG1_ESFCode()
        {
            return this.G1_ESFCode;
        }

        public Date getG1_ESFCode_applyts()
        {
            return this.G1_ESFCode_applyts;
        }

        public String getG1_ESFCode_prev()
        {
            return this.G1_ESFCode_prev;
        }

        public Date getG1_ESFCode_prev_applyts()
        {
            return this.G1_ESFCode_prev_applyts;
        }

        public String getG1_ESFShortName()
        {
            return this.G1_ESFShortName;
        }

        public Date getG1_ESFShortName_applyts()
        {
            return this.G1_ESFShortName_applyts;
        }

        public String getG1_ESFShortName_prev()
        {
            return this.G1_ESFShortName_prev;
        }

        public Date getG1_ESFShortName_prev_applyts()
        {
            return this.G1_ESFShortName_prev_applyts;
        }

        public String getG1_FacsimileTelephoneNumber()
        {
            return this.G1_FacsimileTelephoneNumber;
        }

        public Date getG1_FacsimileTelephoneNumber_applyts()
        {
            return this.G1_FacsimileTelephoneNumber_applyts;
        }

        public String getG1_FacsimileTelephoneNumber_prev()
        {
            return this.G1_FacsimileTelephoneNumber_prev;
        }

        public Date getG1_FacsimileTelephoneNumber_prev_applyts()
        {
            return this.G1_FacsimileTelephoneNumber_prev_applyts;
        }

        public String getG1_Floor()
        {
            return this.G1_Floor;
        }

        public Date getG1_Floor_applyts()
        {
            return this.G1_Floor_applyts;
        }

        public String getG1_Floor_prev()
        {
            return this.G1_Floor_prev;
        }

        public Date getG1_Floor_prev_applyts()
        {
            return this.G1_Floor_prev_applyts;
        }

        public String getG1_GDDBuUT()
        {
            return this.G1_GDDBuUT;
        }

        public Date getG1_GDDBuUT_applyts()
        {
            return this.G1_GDDBuUT_applyts;
        }

        public String getG1_GDDBuUT_prev()
        {
            return this.G1_GDDBuUT_prev;
        }

        public Date getG1_GDDBuUT_prev_applyts()
        {
            return this.G1_GDDBuUT_prev_applyts;
        }

        public String getG1_GDDUT()
        {
            return this.G1_GDDUT;
        }

        public Date getG1_GDDUT_applyts()
        {
            return this.G1_GDDUT_applyts;
        }

        public String getG1_GDDUT_prev()
        {
            return this.G1_GDDUT_prev;
        }

        public Date getG1_GDDUT_prev_applyts()
        {
            return this.G1_GDDUT_prev_applyts;
        }

        public String getG1_Givenname()
        {
            return this.G1_Givenname;
        }

        public Date getG1_Givenname_applyts()
        {
            return this.G1_Givenname_applyts;
        }

        public String getG1_Givenname_prev()
        {
            return this.G1_Givenname_prev;
        }

        public Date getG1_Givenname_prev_applyts()
        {
            return this.G1_Givenname_prev_applyts;
        }

        public String getG1_IsCalyon()
        {
            return this.G1_IsCalyon;
        }

        public Date getG1_IsCalyon_applyts()
        {
            return this.G1_IsCalyon_applyts;
        }

        public String getG1_IsCalyon_prev()
        {
            return this.G1_IsCalyon_prev;
        }

        public Date getG1_IsCalyon_prev_applyts()
        {
            return this.G1_IsCalyon_prev_applyts;
        }

        public String getG1_IsCalyonFR()
        {
            return this.G1_IsCalyonFR;
        }

        public Date getG1_IsCalyonFR_applyts()
        {
            return this.G1_IsCalyonFR_applyts;
        }

        public String getG1_IsCalyonFR_prev()
        {
            return this.G1_IsCalyonFR_prev;
        }

        public Date getG1_IsCalyonFR_prev_applyts()
        {
            return this.G1_IsCalyonFR_prev_applyts;
        }

        public String getG1_IsCM()
        {
            return this.G1_IsCM;
        }

        public Date getG1_IsCM_applyts()
        {
            return this.G1_IsCM_applyts;
        }

        public String getG1_IsCM_prev()
        {
            return this.G1_IsCM_prev;
        }

        public Date getG1_IsCM_prev_applyts()
        {
            return this.G1_IsCM_prev_applyts;
        }

        public String getG1_IsInternal()
        {
            return this.G1_IsInternal;
        }

        public Date getG1_IsInternal_applyts()
        {
            return this.G1_IsInternal_applyts;
        }

        public String getG1_IsInternal_prev()
        {
            return this.G1_IsInternal_prev;
        }

        public Date getG1_IsInternal_prev_applyts()
        {
            return this.G1_IsInternal_prev_applyts;
        }

        public String getG1_L()
        {
            return this.G1_L;
        }

        public Date getG1_L_applyts()
        {
            return this.G1_L_applyts;
        }

        public String getG1_L_prev()
        {
            return this.G1_L_prev;
        }

        public Date getG1_L_prev_applyts()
        {
            return this.G1_L_prev_applyts;
        }

        public String getG1_Level1OUId()
        {
            return this.G1_Level1OUId;
        }

        public Date getG1_Level1OUId_applyts()
        {
            return this.G1_Level1OUId_applyts;
        }

        public String getG1_Level1OUId_prev()
        {
            return this.G1_Level1OUId_prev;
        }

        public Date getG1_Level1OUId_prev_applyts()
        {
            return this.G1_Level1OUId_prev_applyts;
        }

        public String getG1_Level2OUId()
        {
            return this.G1_Level2OUId;
        }

        public Date getG1_Level2OUId_applyts()
        {
            return this.G1_Level2OUId_applyts;
        }

        public String getG1_Level2OUId_prev()
        {
            return this.G1_Level2OUId_prev;
        }

        public Date getG1_Level2OUId_prev_applyts()
        {
            return this.G1_Level2OUId_prev_applyts;
        }

        public String getG1_Level3OUId()
        {
            return this.G1_Level3OUId;
        }

        public Date getG1_Level3OUId_applyts()
        {
            return this.G1_Level3OUId_applyts;
        }

        public String getG1_Level3OUId_prev()
        {
            return this.G1_Level3OUId_prev;
        }

        public Date getG1_Level3OUId_prev_applyts()
        {
            return this.G1_Level3OUId_prev_applyts;
        }

        public String getG1_Level4OUId()
        {
            return this.G1_Level4OUId;
        }

        public Date getG1_Level4OUId_applyts()
        {
            return this.G1_Level4OUId_applyts;
        }

        public String getG1_Level4OUId_prev()
        {
            return this.G1_Level4OUId_prev;
        }

        public Date getG1_Level4OUId_prev_applyts()
        {
            return this.G1_Level4OUId_prev_applyts;
        }

        public String getG1_Level5OUId()
        {
            return this.G1_Level5OUId;
        }

        public Date getG1_Level5OUId_applyts()
        {
            return this.G1_Level5OUId_applyts;
        }

        public String getG1_Level5OUId_prev()
        {
            return this.G1_Level5OUId_prev;
        }

        public Date getG1_Level5OUId_prev_applyts()
        {
            return this.G1_Level5OUId_prev_applyts;
        }

        public String getG1_Level6OUId()
        {
            return this.G1_Level6OUId;
        }

        public Date getG1_Level6OUId_applyts()
        {
            return this.G1_Level6OUId_applyts;
        }

        public String getG1_Level6OUId_prev()
        {
            return this.G1_Level6OUId_prev;
        }

        public Date getG1_Level6OUId_prev_applyts()
        {
            return this.G1_Level6OUId_prev_applyts;
        }

        public String getG1_Level7OUId()
        {
            return this.G1_Level7OUId;
        }

        public Date getG1_Level7OUId_applyts()
        {
            return this.G1_Level7OUId_applyts;
        }

        public String getG1_Level7OUId_prev()
        {
            return this.G1_Level7OUId_prev;
        }

        public Date getG1_Level7OUId_prev_applyts()
        {
            return this.G1_Level7OUId_prev_applyts;
        }

        public String getG1_Level8OUId()
        {
            return this.G1_Level8OUId;
        }

        public Date getG1_Level8OUId_applyts()
        {
            return this.G1_Level8OUId_applyts;
        }

        public String getG1_Level8OUId_prev()
        {
            return this.G1_Level8OUId_prev;
        }

        public Date getG1_Level8OUId_prev_applyts()
        {
            return this.G1_Level8OUId_prev_applyts;
        }

        public String getG1_LocalityName()
        {
            return this.G1_LocalityName;
        }

        public Date getG1_LocalityName_applyts()
        {
            return this.G1_LocalityName_applyts;
        }

        public String getG1_LocalityName_prev()
        {
            return this.G1_LocalityName_prev;
        }

        public Date getG1_LocalityName_prev_applyts()
        {
            return this.G1_LocalityName_prev_applyts;
        }

        public String getG1_Localization()
        {
            return this.G1_Localization;
        }

        public Date getG1_Localization_applyts()
        {
            return this.G1_Localization_applyts;
        }

        public String getG1_Localization_prev()
        {
            return this.G1_Localization_prev;
        }

        public Date getG1_Localization_prev_applyts()
        {
            return this.G1_Localization_prev_applyts;
        }

        public String getG1_Mail()
        {
            return this.G1_Mail;
        }

        public Date getG1_Mail_applyts()
        {
            return this.G1_Mail_applyts;
        }

        public String getG1_Mail_prev()
        {
            return this.G1_Mail_prev;
        }

        public Date getG1_Mail_prev_applyts()
        {
            return this.G1_Mail_prev_applyts;
        }

        public String getG1_MLec()
        {
            return this.G1_MLec;
        }

        public Date getG1_MLec_applyts()
        {
            return this.G1_MLec_applyts;
        }

        public String getG1_MLec_prev()
        {
            return this.G1_MLec_prev;
        }

        public Date getG1_MLec_prev_applyts()
        {
            return this.G1_MLec_prev_applyts;
        }

        public String getG1_Mobile()
        {
            return this.G1_Mobile;
        }

        public Date getG1_Mobile_applyts()
        {
            return this.G1_Mobile_applyts;
        }

        public String getG1_Mobile_prev()
        {
            return this.G1_Mobile_prev;
        }

        public Date getG1_Mobile_prev_applyts()
        {
            return this.G1_Mobile_prev_applyts;
        }

        public String getG1_OrdGivenName()
        {
            return this.G1_OrdGivenName;
        }

        public Date getG1_OrdGivenName_applyts()
        {
            return this.G1_OrdGivenName_applyts;
        }

        public String getG1_OrdGivenName_prev()
        {
            return this.G1_OrdGivenName_prev;
        }

        public Date getG1_OrdGivenName_prev_applyts()
        {
            return this.G1_OrdGivenName_prev_applyts;
        }

        public String getG1_PostalAddress()
        {
            return this.G1_PostalAddress;
        }

        public Date getG1_PostalAddress_applyts()
        {
            return this.G1_PostalAddress_applyts;
        }

        public String getG1_PostalAddress_prev()
        {
            return this.G1_PostalAddress_prev;
        }

        public Date getG1_PostalAddress_prev_applyts()
        {
            return this.G1_PostalAddress_prev_applyts;
        }

        public String getG1_Presence()
        {
            return this.G1_Presence;
        }

        public Date getG1_Presence_applyts()
        {
            return this.G1_Presence_applyts;
        }

        public String getG1_Presence_prev()
        {
            return this.G1_Presence_prev;
        }

        public Date getG1_Presence_prev_applyts()
        {
            return this.G1_Presence_prev_applyts;
        }

        public String getG1_RoomNumber()
        {
            return this.G1_RoomNumber;
        }

        public Date getG1_RoomNumber_applyts()
        {
            return this.G1_RoomNumber_applyts;
        }

        public String getG1_RoomNumber_prev()
        {
            return this.G1_RoomNumber_prev;
        }

        public Date getG1_RoomNumber_prev_applyts()
        {
            return this.G1_RoomNumber_prev_applyts;
        }

        public String getG1_SLec()
        {
            return this.G1_SLec;
        }

        public Date getG1_SLec_applyts()
        {
            return this.G1_SLec_applyts;
        }

        public String getG1_SLec_prev()
        {
            return this.G1_SLec_prev;
        }

        public Date getG1_SLec_prev_applyts()
        {
            return this.G1_SLec_prev_applyts;
        }

        public String getG1_sn()
        {
            return this.G1_sn;
        }

        public Date getG1_sn_applyts()
        {
            return this.G1_sn_applyts;
        }

        public String getG1_sn_prev()
        {
            return this.G1_sn_prev;
        }

        public Date getG1_sn_prev_applyts()
        {
            return this.G1_sn_prev_applyts;
        }

        public String getG1_StatusCode()
        {
            return this.G1_StatusCode;
        }

        public Date getG1_StatusCode_applyts()
        {
            return this.G1_StatusCode_applyts;
        }

        public String getG1_StatusCode_prev()
        {
            return this.G1_StatusCode_prev;
        }

        public Date getG1_StatusCode_prev_applyts()
        {
            return this.G1_StatusCode_prev_applyts;
        }

        public String getG1_TeamManagerId()
        {
            return this.G1_TeamManagerId;
        }

        public Date getG1_TeamManagerId_applyts()
        {
            return this.G1_TeamManagerId_applyts;
        }

        public String getG1_TeamManagerId_prev()
        {
            return this.G1_TeamManagerId_prev;
        }

        public Date getG1_TeamManagerId_prev_applyts()
        {
            return this.G1_TeamManagerId_prev_applyts;
        }

        public String getG1_TeamManagerName()
        {
            return this.G1_TeamManagerName;
        }

        public Date getG1_TeamManagerName_applyts()
        {
            return this.G1_TeamManagerName_applyts;
        }

        public String getG1_TeamManagerName_prev()
        {
            return this.G1_TeamManagerName_prev;
        }

        public Date getG1_TeamManagerName_prev_applyts()
        {
            return this.G1_TeamManagerName_prev_applyts;
        }

        public String getG1_TeamSec()
        {
            return this.G1_TeamSec;
        }

        public Date getG1_TeamSec_applyts()
        {
            return this.G1_TeamSec_applyts;
        }

        public String getG1_TeamSec_prev()
        {
            return this.G1_TeamSec_prev;
        }

        public Date getG1_TeamSec_prev_applyts()
        {
            return this.G1_TeamSec_prev_applyts;
        }

        public String getG1_TeamSecTel()
        {
            return this.G1_TeamSecTel;
        }

        public Date getG1_TeamSecTel_applyts()
        {
            return this.G1_TeamSecTel_applyts;
        }

        public String getG1_TeamSecTel_prev()
        {
            return this.G1_TeamSecTel_prev;
        }

        public Date getG1_TeamSecTel_prev_applyts()
        {
            return this.G1_TeamSecTel_prev_applyts;
        }

        public String getG1_TelephoneNumber()
        {
            return this.G1_TelephoneNumber;
        }

        public Date getG1_TelephoneNumber_applyts()
        {
            return this.G1_TelephoneNumber_applyts;
        }

        public String getG1_TelephoneNumber_prev()
        {
            return this.G1_TelephoneNumber_prev;
        }

        public Date getG1_TelephoneNumber_prev_applyts()
        {
            return this.G1_TelephoneNumber_prev_applyts;
        }

        public String getG1_Title()
        {
            return this.G1_Title;
        }

        public Date getG1_Title_applyts()
        {
            return this.G1_Title_applyts;
        }

        public String getG1_Title_prev()
        {
            return this.G1_Title_prev;
        }

        public Date getG1_Title_prev_applyts()
        {
            return this.G1_Title_prev_applyts;
        }

        public String getG1_TitleShort()
        {
            return this.G1_TitleShort;
        }

        public Date getG1_TitleShort_applyts()
        {
            return this.G1_TitleShort_applyts;
        }

        public String getG1_TitleShort_prev()
        {
            return this.G1_TitleShort_prev;
        }

        public Date getG1_TitleShort_prev_applyts()
        {
            return this.G1_TitleShort_prev_applyts;
        }

        public String getG1_UBCode()
        {
            return this.G1_UBCode;
        }

        public Date getG1_UBCode_applyts()
        {
            return this.G1_UBCode_applyts;
        }

        public String getG1_UBCode_prev()
        {
            return this.G1_UBCode_prev;
        }

        public Date getG1_UBCode_prev_applyts()
        {
            return this.G1_UBCode_prev_applyts;
        }

        public String getG1_UBShortName()
        {
            return this.G1_UBShortName;
        }

        public Date getG1_UBShortName_applyts()
        {
            return this.G1_UBShortName_applyts;
        }

        public String getG1_UBShortName_prev()
        {
            return this.G1_UBShortName_prev;
        }

        public Date getG1_UBShortName_prev_applyts()
        {
            return this.G1_UBShortName_prev_applyts;
        }

        public String getG1_Uid()
        {
            return this.G1_Uid;
        }

        public Date getG1_Uid_applyts()
        {
            return this.G1_Uid_applyts;
        }

        public String getG1_Uid_prev()
        {
            return this.G1_Uid_prev;
        }

        public Date getG1_Uid_prev_applyts()
        {
            return this.G1_Uid_prev_applyts;
        }

        public String getG1_TEMLocalization()
        {
            return this.G1_TEMLocalization;
        }

        public Date getG1_TEMLocalization_applyts()
        {
            return this.G1_TEMLocalization_applyts;
        }

        public String getG1_TEMLocalization_prev()
        {
            return this.G1_TEMLocalization_prev;
        }

        public Date getG1_TEMLocalization_prev_applyts()
        {
            return this.G1_TEMLocalization_prev_applyts;
        }

        public String getG1_TiersCode()
        {
            return this.G1_TiersCode;
        }

        public Date getG1_TiersCode_applyts()
        {
            return this.G1_TiersCode_applyts;
        }

        public String getG1_TiersCode_prev()
        {
            return this.G1_TiersCode_prev;
        }

        public Date getG1_TiersCode_prev_applyts()
        {
            return this.G1_TiersCode_prev_applyts;
        }

        public Integer getDomain()
        {
            return this.domain;
        }

        public Integer getPrevDomain()
        {
            return this.prevDomain;
        }

        public String getG1_ValidatorUTNumber()
        {
            return this.G1_ValidatorUTNumber;
        }

        public String getG1_ValidatorDelegationPool()
        {
            return this.G1_ValidatorDelegationPool;
        }

        public String getG1_ApproverUTNumber()
        {
            return this.G1_ApproverUTNumber;
        }

        public String getG1_ApproverDelegationPool()
        {
            return this.G1_ApproverDelegationPool;
        }

        public String getG1_DoubleValidation()
        {
            return this.G1_DoubleValidation;
        }

        public String getG1_BusUnit()
        {
            return this.G1_BusUnit;
        }

        public Date getG1_BusUnit_applyts()
        {
            return this.G1_BusUnit_applyts;
        }

        public String getG1_BusUnit_prev()
        {
            return this.G1_BusUnit_prev;
        }

        public Date getG1_BusUnit_prev_applyts()
        {
            return this.G1_BusUnit_prev_applyts;
        }

        public String getG1_BusUnitWrd()
        {
            return this.G1_BusUnitWrd;
        }

        public Date getG1_BusUnitWrd_applyts()
        {
            return this.G1_BusUnitWrd_applyts;
        }

        public String getG1_BusUnitWrd_prev()
        {
            return this.G1_BusUnitWrd_prev;
        }

        public Date getG1_BusUnitWrd_prev_applyts()
        {
            return this.G1_BusUnitWrd_prev_applyts;
        }

        public String getG1_LPCode()
        {
            return this.G1_LPCode;
        }

        public Date getG1_LPCode_applyts()
        {
            return this.G1_LPCode_applyts;
        }

        public String getG1_LPCode_prev()
        {
            return this.G1_LPCode_prev;
        }

        public Date getG1_LPCode_prev_applyts()
        {
            return this.G1_LPCode_prev_applyts;
        }

        public String getG1_EntityCode()
        {
            return this.G1_EntityCode;
        }

        public Date getG1_EntityCode_applyts()
        {
            return this.G1_EntityCode_applyts;
        }

        public String getG1_EntityCode_prev()
        {
            return this.G1_EntityCode_prev;
        }

        public Date getG1_EntityCode_prev_applyts()
        {
            return this.G1_EntityCode_prev_applyts;
        }

        public Integer getBusinessLine_id()
        {
            return this.BusinessLine_id;
        }

        public Integer getDepartment_id()
        {
            return this.Department_id;
        }

        public Integer getEntity_id()
        {
            return this.Entity_id;
        }

        public Integer getDepartment_id_rcp()
        {
            return this.department_id_rcp;
        }

        public Integer getBusinessLine_id_rcp()
        {
            return this.businessLine_id_rcp;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.item_last_action = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.item_last_action = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.item_last_action_applyts = null;
                    else {
                        this.item_last_action_applyts = new Date(dis.readLong());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.item_creation_date = null;
                    else {
                        this.item_creation_date = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ArrivalDate = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ArrivalDate = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ArrivalDate_applyts = null;
                    else {
                        this.G1_ArrivalDate_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ArrivalDate_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ArrivalDate_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ArrivalDate_prev_applyts = null;
                    else {
                        this.G1_ArrivalDate_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BLec = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BLec = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BLec_applyts = null;
                    else {
                        this.G1_BLec_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BLec_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BLec_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BLec_prev_applyts = null;
                    else {
                        this.G1_BLec_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusinessUnit = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusinessUnit = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusinessUnit_applyts = null;
                    else {
                        this.G1_BusinessUnit_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusinessUnit_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusinessUnit_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusinessUnit_prev_applyts = null;
                    else {
                        this.G1_BusinessUnit_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CIDBuUT = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CIDBuUT = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CIDBuUT_applyts = null;
                    else {
                        this.G1_CIDBuUT_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CIDBuUT_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CIDBuUT_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CIDBuUT_prev_applyts = null;
                    else {
                        this.G1_CIDBuUT_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CIDUT = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CIDUT = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CIDUT_applyts = null;
                    else {
                        this.G1_CIDUT_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CIDUT_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CIDUT_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CIDUT_prev_applyts = null;
                    else {
                        this.G1_CIDUT_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_cn = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_cn = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_cn_applyts = null;
                    else {
                        this.G1_cn_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_cn_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_cn_prev = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_cn_prev_applyts = null;
                    else {
                        this.G1_cn_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ContractorCompany = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ContractorCompany = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ContractorCompany_applyts = null;
                    else {
                        this.G1_ContractorCompany_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ContractorCompany_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ContractorCompany_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ContractorCompany_prev_applyts = null;
                    else {
                        this.G1_ContractorCompany_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ContractorStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ContractorStatus = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ContractorStatus_applyts = null;
                    else {
                        this.G1_ContractorStatus_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ContractorStatus_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ContractorStatus_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ContractorStatus_prev_applyts = null;
                    else {
                        this.G1_ContractorStatus_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_coseDomain = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_coseDomain = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_coseDomain_applyts = null;
                    else {
                        this.G1_coseDomain_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_coseDomain_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_coseDomain_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_coseDomain_prev_applyts = null;
                    else {
                        this.G1_coseDomain_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CountryCode2 = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CountryCode2 = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CountryCode2_applyts = null;
                    else {
                        this.G1_CountryCode2_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CountryCode2_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CountryCode2_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CountryCode2_prev_applyts = null;
                    else {
                        this.G1_CountryCode2_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CountryName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CountryName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CountryName_applyts = null;
                    else {
                        this.G1_CountryName_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_CountryName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_CountryName_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_CountryName_prev_applyts = null;
                    else {
                        this.G1_CountryName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_DepartureDate = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_DepartureDate = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_DepartureDate_applyts = null;
                    else {
                        this.G1_DepartureDate_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_DepartureDate_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_DepartureDate_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_DepartureDate_prev_applyts = null;
                    else {
                        this.G1_DepartureDate_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EmployeeNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EmployeeNumber = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EmployeeNumber_applyts = null;
                    else {
                        this.G1_EmployeeNumber_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EmployeeNumber_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EmployeeNumber_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EmployeeNumber_prev_applyts = null;
                    else {
                        this.G1_EmployeeNumber_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EmployeeType = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EmployeeType = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EmployeeType_applyts = null;
                    else {
                        this.G1_EmployeeType_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EmployeeType_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EmployeeType_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EmployeeType_prev_applyts = null;
                    else {
                        this.G1_EmployeeType_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Entity = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Entity = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Entity_applyts = null;
                    else {
                        this.G1_Entity_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Entity_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Entity_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Entity_prev_applyts = null;
                    else {
                        this.G1_Entity_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EntityPostalAddress = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EntityPostalAddress = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EntityPostalAddress_applyts = null;
                    else {
                        this.G1_EntityPostalAddress_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EntityPostalAddress_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EntityPostalAddress_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EntityPostalAddress_prev_applyts = null;
                    else {
                        this.G1_EntityPostalAddress_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ESFCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ESFCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ESFCode_applyts = null;
                    else {
                        this.G1_ESFCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ESFCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ESFCode_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ESFCode_prev_applyts = null;
                    else {
                        this.G1_ESFCode_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ESFShortName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ESFShortName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ESFShortName_applyts = null;
                    else {
                        this.G1_ESFShortName_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ESFShortName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ESFShortName_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_ESFShortName_prev_applyts = null;
                    else {
                        this.G1_ESFShortName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_FacsimileTelephoneNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_FacsimileTelephoneNumber = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_FacsimileTelephoneNumber_applyts = null;
                    else {
                        this.G1_FacsimileTelephoneNumber_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_FacsimileTelephoneNumber_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_FacsimileTelephoneNumber_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_FacsimileTelephoneNumber_prev_applyts = null;
                    else {
                        this.G1_FacsimileTelephoneNumber_prev_applyts = new Date(
                                dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Floor = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Floor = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Floor_applyts = null;
                    else {
                        this.G1_Floor_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Floor_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Floor_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Floor_prev_applyts = null;
                    else {
                        this.G1_Floor_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_GDDBuUT = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_GDDBuUT = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_GDDBuUT_applyts = null;
                    else {
                        this.G1_GDDBuUT_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_GDDBuUT_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_GDDBuUT_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_GDDBuUT_prev_applyts = null;
                    else {
                        this.G1_GDDBuUT_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_GDDUT = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_GDDUT = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_GDDUT_applyts = null;
                    else {
                        this.G1_GDDUT_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_GDDUT_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_GDDUT_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_GDDUT_prev_applyts = null;
                    else {
                        this.G1_GDDUT_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Givenname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Givenname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Givenname_applyts = null;
                    else {
                        this.G1_Givenname_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Givenname_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Givenname_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Givenname_prev_applyts = null;
                    else {
                        this.G1_Givenname_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCalyon = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCalyon = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCalyon_applyts = null;
                    else {
                        this.G1_IsCalyon_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCalyon_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCalyon_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCalyon_prev_applyts = null;
                    else {
                        this.G1_IsCalyon_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCalyonFR = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCalyonFR = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCalyonFR_applyts = null;
                    else {
                        this.G1_IsCalyonFR_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCalyonFR_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCalyonFR_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCalyonFR_prev_applyts = null;
                    else {
                        this.G1_IsCalyonFR_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCM = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCM = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCM_applyts = null;
                    else {
                        this.G1_IsCM_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsCM_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsCM_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsCM_prev_applyts = null;
                    else {
                        this.G1_IsCM_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsInternal = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsInternal = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsInternal_applyts = null;
                    else {
                        this.G1_IsInternal_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_IsInternal_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_IsInternal_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_IsInternal_prev_applyts = null;
                    else {
                        this.G1_IsInternal_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_L = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_L = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_L_applyts = null;
                    else {
                        this.G1_L_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_L_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_L_prev = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_L_prev_applyts = null;
                    else {
                        this.G1_L_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level1OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level1OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level1OUId_applyts = null;
                    else {
                        this.G1_Level1OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level1OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level1OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level1OUId_prev_applyts = null;
                    else {
                        this.G1_Level1OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level2OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level2OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level2OUId_applyts = null;
                    else {
                        this.G1_Level2OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level2OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level2OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level2OUId_prev_applyts = null;
                    else {
                        this.G1_Level2OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level3OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level3OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level3OUId_applyts = null;
                    else {
                        this.G1_Level3OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level3OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level3OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level3OUId_prev_applyts = null;
                    else {
                        this.G1_Level3OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level4OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level4OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level4OUId_applyts = null;
                    else {
                        this.G1_Level4OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level4OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level4OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level4OUId_prev_applyts = null;
                    else {
                        this.G1_Level4OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level5OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level5OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level5OUId_applyts = null;
                    else {
                        this.G1_Level5OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level5OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level5OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level5OUId_prev_applyts = null;
                    else {
                        this.G1_Level5OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level6OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level6OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level6OUId_applyts = null;
                    else {
                        this.G1_Level6OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level6OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level6OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level6OUId_prev_applyts = null;
                    else {
                        this.G1_Level6OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level7OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level7OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level7OUId_applyts = null;
                    else {
                        this.G1_Level7OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level7OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level7OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level7OUId_prev_applyts = null;
                    else {
                        this.G1_Level7OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level8OUId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level8OUId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level8OUId_applyts = null;
                    else {
                        this.G1_Level8OUId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Level8OUId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Level8OUId_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Level8OUId_prev_applyts = null;
                    else {
                        this.G1_Level8OUId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_LocalityName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_LocalityName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_LocalityName_applyts = null;
                    else {
                        this.G1_LocalityName_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_LocalityName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_LocalityName_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_LocalityName_prev_applyts = null;
                    else {
                        this.G1_LocalityName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Localization = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Localization = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Localization_applyts = null;
                    else {
                        this.G1_Localization_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Localization_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Localization_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Localization_prev_applyts = null;
                    else {
                        this.G1_Localization_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Mail = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Mail = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Mail_applyts = null;
                    else {
                        this.G1_Mail_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Mail_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Mail_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Mail_prev_applyts = null;
                    else {
                        this.G1_Mail_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_MLec = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_MLec = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_MLec_applyts = null;
                    else {
                        this.G1_MLec_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_MLec_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_MLec_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_MLec_prev_applyts = null;
                    else {
                        this.G1_MLec_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Mobile = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Mobile = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Mobile_applyts = null;
                    else {
                        this.G1_Mobile_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Mobile_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Mobile_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Mobile_prev_applyts = null;
                    else {
                        this.G1_Mobile_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_OrdGivenName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_OrdGivenName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_OrdGivenName_applyts = null;
                    else {
                        this.G1_OrdGivenName_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_OrdGivenName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_OrdGivenName_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_OrdGivenName_prev_applyts = null;
                    else {
                        this.G1_OrdGivenName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_PostalAddress = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_PostalAddress = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_PostalAddress_applyts = null;
                    else {
                        this.G1_PostalAddress_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_PostalAddress_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_PostalAddress_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_PostalAddress_prev_applyts = null;
                    else {
                        this.G1_PostalAddress_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Presence = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Presence = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Presence_applyts = null;
                    else {
                        this.G1_Presence_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Presence_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Presence_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Presence_prev_applyts = null;
                    else {
                        this.G1_Presence_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_RoomNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_RoomNumber = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_RoomNumber_applyts = null;
                    else {
                        this.G1_RoomNumber_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_RoomNumber_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_RoomNumber_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_RoomNumber_prev_applyts = null;
                    else {
                        this.G1_RoomNumber_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_SLec = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_SLec = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_SLec_applyts = null;
                    else {
                        this.G1_SLec_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_SLec_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_SLec_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_SLec_prev_applyts = null;
                    else {
                        this.G1_SLec_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_sn = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_sn = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_sn_applyts = null;
                    else {
                        this.G1_sn_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_sn_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_sn_prev = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_sn_prev_applyts = null;
                    else {
                        this.G1_sn_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_StatusCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_StatusCode = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_StatusCode_applyts = null;
                    else {
                        this.G1_StatusCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_StatusCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_StatusCode_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_StatusCode_prev_applyts = null;
                    else {
                        this.G1_StatusCode_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamManagerId = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamManagerId = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamManagerId_applyts = null;
                    else {
                        this.G1_TeamManagerId_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamManagerId_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamManagerId_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamManagerId_prev_applyts = null;
                    else {
                        this.G1_TeamManagerId_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamManagerName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamManagerName = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamManagerName_applyts = null;
                    else {
                        this.G1_TeamManagerName_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamManagerName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamManagerName_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamManagerName_prev_applyts = null;
                    else {
                        this.G1_TeamManagerName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamSec = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamSec = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamSec_applyts = null;
                    else {
                        this.G1_TeamSec_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamSec_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamSec_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamSec_prev_applyts = null;
                    else {
                        this.G1_TeamSec_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamSecTel = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamSecTel = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamSecTel_applyts = null;
                    else {
                        this.G1_TeamSecTel_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TeamSecTel_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TeamSecTel_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TeamSecTel_prev_applyts = null;
                    else {
                        this.G1_TeamSecTel_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TelephoneNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TelephoneNumber = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TelephoneNumber_applyts = null;
                    else {
                        this.G1_TelephoneNumber_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TelephoneNumber_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TelephoneNumber_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TelephoneNumber_prev_applyts = null;
                    else {
                        this.G1_TelephoneNumber_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Title = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Title = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Title_applyts = null;
                    else {
                        this.G1_Title_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Title_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Title_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Title_prev_applyts = null;
                    else {
                        this.G1_Title_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TitleShort = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TitleShort = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TitleShort_applyts = null;
                    else {
                        this.G1_TitleShort_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TitleShort_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TitleShort_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TitleShort_prev_applyts = null;
                    else {
                        this.G1_TitleShort_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_UBCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_UBCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_UBCode_applyts = null;
                    else {
                        this.G1_UBCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_UBCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_UBCode_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_UBCode_prev_applyts = null;
                    else {
                        this.G1_UBCode_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_UBShortName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_UBShortName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_UBShortName_applyts = null;
                    else {
                        this.G1_UBShortName_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_UBShortName_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_UBShortName_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_UBShortName_prev_applyts = null;
                    else {
                        this.G1_UBShortName_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Uid = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Uid = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Uid_applyts = null;
                    else {
                        this.G1_Uid_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_Uid_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_Uid_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_Uid_prev_applyts = null;
                    else {
                        this.G1_Uid_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TEMLocalization = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TEMLocalization = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TEMLocalization_applyts = null;
                    else {
                        this.G1_TEMLocalization_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TEMLocalization_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TEMLocalization_prev = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TEMLocalization_prev_applyts = null;
                    else {
                        this.G1_TEMLocalization_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TiersCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TiersCode = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TiersCode_applyts = null;
                    else {
                        this.G1_TiersCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_TiersCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_TiersCode_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_TiersCode_prev_applyts = null;
                    else {
                        this.G1_TiersCode_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.domain = null;
                    else {
                        this.domain = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.prevDomain = null;
                    else {
                        this.prevDomain = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ValidatorUTNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ValidatorUTNumber = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ValidatorDelegationPool = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ValidatorDelegationPool = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ApproverUTNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ApproverUTNumber = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_ApproverDelegationPool = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_ApproverDelegationPool = new String(
                                commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_DoubleValidation = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_DoubleValidation = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusUnit = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusUnit = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusUnit_applyts = null;
                    else {
                        this.G1_BusUnit_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusUnit_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusUnit_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusUnit_prev_applyts = null;
                    else {
                        this.G1_BusUnit_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusUnitWrd = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusUnitWrd = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusUnitWrd_applyts = null;
                    else {
                        this.G1_BusUnitWrd_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_BusUnitWrd_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_BusUnitWrd_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_BusUnitWrd_prev_applyts = null;
                    else {
                        this.G1_BusUnitWrd_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_LPCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_LPCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_LPCode_applyts = null;
                    else {
                        this.G1_LPCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_LPCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_LPCode_prev = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_LPCode_prev_applyts = null;
                    else {
                        this.G1_LPCode_prev_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EntityCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EntityCode = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EntityCode_applyts = null;
                    else {
                        this.G1_EntityCode_applyts = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.G1_EntityCode_prev = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.G1_EntityCode_prev = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.G1_EntityCode_prev_applyts = null;
                    else {
                        this.G1_EntityCode_prev_applyts = new Date(dis
                                .readLong());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.BusinessLine_id = null;
                    else {
                        this.BusinessLine_id = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.Department_id = null;
                    else {
                        this.Department_id = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.Entity_id = null;
                    else {
                        this.Entity_id = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.department_id_rcp = null;
                    else {
                        this.department_id_rcp = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.businessLine_id_rcp = null;
                    else
                        this.businessLine_id_rcp = Integer.valueOf(dis.readInt());
                }
                catch (IOException e)
                {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.item_last_action == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.item_last_action.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.item_last_action_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.item_last_action_applyts.getTime());
                }

                if (this.item_creation_date == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.item_creation_date.getTime());
                }

                if (this.G1_ArrivalDate == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ArrivalDate.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ArrivalDate_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ArrivalDate_applyts.getTime());
                }

                if (this.G1_ArrivalDate_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ArrivalDate_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ArrivalDate_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ArrivalDate_prev_applyts.getTime());
                }

                if (this.G1_BLec == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BLec.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BLec_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BLec_applyts.getTime());
                }

                if (this.G1_BLec_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BLec_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BLec_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BLec_prev_applyts.getTime());
                }

                if (this.G1_BusinessUnit == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusinessUnit.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusinessUnit_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusinessUnit_applyts.getTime());
                }

                if (this.G1_BusinessUnit_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusinessUnit_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusinessUnit_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusinessUnit_prev_applyts.getTime());
                }

                if (this.G1_CIDBuUT == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CIDBuUT.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CIDBuUT_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CIDBuUT_applyts.getTime());
                }

                if (this.G1_CIDBuUT_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CIDBuUT_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CIDBuUT_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CIDBuUT_prev_applyts.getTime());
                }

                if (this.G1_CIDUT == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CIDUT.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CIDUT_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CIDUT_applyts.getTime());
                }

                if (this.G1_CIDUT_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CIDUT_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CIDUT_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CIDUT_prev_applyts.getTime());
                }

                if (this.G1_cn == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_cn.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_cn_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_cn_applyts.getTime());
                }

                if (this.G1_cn_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_cn_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_cn_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_cn_prev_applyts.getTime());
                }

                if (this.G1_ContractorCompany == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ContractorCompany.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ContractorCompany_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ContractorCompany_applyts.getTime());
                }

                if (this.G1_ContractorCompany_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ContractorCompany_prev
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ContractorCompany_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ContractorCompany_prev_applyts
                            .getTime());
                }

                if (this.G1_ContractorStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ContractorStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ContractorStatus_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ContractorStatus_applyts.getTime());
                }

                if (this.G1_ContractorStatus_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ContractorStatus_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ContractorStatus_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ContractorStatus_prev_applyts
                            .getTime());
                }

                if (this.G1_coseDomain == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_coseDomain.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_coseDomain_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_coseDomain_applyts.getTime());
                }

                if (this.G1_coseDomain_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_coseDomain_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_coseDomain_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_coseDomain_prev_applyts.getTime());
                }

                if (this.G1_CountryCode2 == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CountryCode2.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CountryCode2_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CountryCode2_applyts.getTime());
                }

                if (this.G1_CountryCode2_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CountryCode2_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CountryCode2_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CountryCode2_prev_applyts.getTime());
                }

                if (this.G1_CountryName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CountryName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CountryName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CountryName_applyts.getTime());
                }

                if (this.G1_CountryName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_CountryName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_CountryName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_CountryName_prev_applyts.getTime());
                }

                if (this.G1_DepartureDate == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_DepartureDate.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_DepartureDate_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_DepartureDate_applyts.getTime());
                }

                if (this.G1_DepartureDate_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_DepartureDate_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_DepartureDate_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_DepartureDate_prev_applyts.getTime());
                }

                if (this.G1_EmployeeNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EmployeeNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EmployeeNumber_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EmployeeNumber_applyts.getTime());
                }

                if (this.G1_EmployeeNumber_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EmployeeNumber_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EmployeeNumber_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos
                            .writeLong(this.G1_EmployeeNumber_prev_applyts
                                    .getTime());
                }

                if (this.G1_EmployeeType == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EmployeeType.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EmployeeType_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EmployeeType_applyts.getTime());
                }

                if (this.G1_EmployeeType_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EmployeeType_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EmployeeType_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EmployeeType_prev_applyts.getTime());
                }

                if (this.G1_Entity == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Entity.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Entity_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Entity_applyts.getTime());
                }

                if (this.G1_Entity_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Entity_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Entity_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Entity_prev_applyts.getTime());
                }

                if (this.G1_EntityPostalAddress == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EntityPostalAddress.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EntityPostalAddress_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos
                            .writeLong(this.G1_EntityPostalAddress_applyts
                                    .getTime());
                }

                if (this.G1_EntityPostalAddress_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EntityPostalAddress_prev
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EntityPostalAddress_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EntityPostalAddress_prev_applyts
                            .getTime());
                }

                if (this.G1_ESFCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ESFCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ESFCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ESFCode_applyts.getTime());
                }

                if (this.G1_ESFCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ESFCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ESFCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ESFCode_prev_applyts.getTime());
                }

                if (this.G1_ESFShortName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ESFShortName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ESFShortName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ESFShortName_applyts.getTime());
                }

                if (this.G1_ESFShortName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ESFShortName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ESFShortName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_ESFShortName_prev_applyts.getTime());
                }

                if (this.G1_FacsimileTelephoneNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_FacsimileTelephoneNumber
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_FacsimileTelephoneNumber_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_FacsimileTelephoneNumber_applyts
                            .getTime());
                }

                if (this.G1_FacsimileTelephoneNumber_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_FacsimileTelephoneNumber_prev
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_FacsimileTelephoneNumber_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_FacsimileTelephoneNumber_prev_applyts
                            .getTime());
                }

                if (this.G1_Floor == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Floor.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Floor_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Floor_applyts.getTime());
                }

                if (this.G1_Floor_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Floor_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Floor_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Floor_prev_applyts.getTime());
                }

                if (this.G1_GDDBuUT == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_GDDBuUT.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_GDDBuUT_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_GDDBuUT_applyts.getTime());
                }

                if (this.G1_GDDBuUT_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_GDDBuUT_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_GDDBuUT_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_GDDBuUT_prev_applyts.getTime());
                }

                if (this.G1_GDDUT == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_GDDUT.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_GDDUT_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_GDDUT_applyts.getTime());
                }

                if (this.G1_GDDUT_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_GDDUT_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_GDDUT_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_GDDUT_prev_applyts.getTime());
                }

                if (this.G1_Givenname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Givenname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Givenname_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Givenname_applyts.getTime());
                }

                if (this.G1_Givenname_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Givenname_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Givenname_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Givenname_prev_applyts.getTime());
                }

                if (this.G1_IsCalyon == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCalyon.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCalyon_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCalyon_applyts.getTime());
                }

                if (this.G1_IsCalyon_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCalyon_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCalyon_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCalyon_prev_applyts.getTime());
                }

                if (this.G1_IsCalyonFR == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCalyonFR.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCalyonFR_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCalyonFR_applyts.getTime());
                }

                if (this.G1_IsCalyonFR_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCalyonFR_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCalyonFR_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCalyonFR_prev_applyts.getTime());
                }

                if (this.G1_IsCM == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCM.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCM_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCM_applyts.getTime());
                }

                if (this.G1_IsCM_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsCM_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsCM_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsCM_prev_applyts.getTime());
                }

                if (this.G1_IsInternal == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsInternal.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsInternal_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsInternal_applyts.getTime());
                }

                if (this.G1_IsInternal_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_IsInternal_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_IsInternal_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_IsInternal_prev_applyts.getTime());
                }

                if (this.G1_L == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_L.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_L_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_L_applyts.getTime());
                }

                if (this.G1_L_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_L_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_L_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_L_prev_applyts.getTime());
                }

                if (this.G1_Level1OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level1OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level1OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level1OUId_applyts.getTime());
                }

                if (this.G1_Level1OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level1OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level1OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level1OUId_prev_applyts.getTime());
                }

                if (this.G1_Level2OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level2OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level2OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level2OUId_applyts.getTime());
                }

                if (this.G1_Level2OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level2OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level2OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level2OUId_prev_applyts.getTime());
                }

                if (this.G1_Level3OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level3OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level3OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level3OUId_applyts.getTime());
                }

                if (this.G1_Level3OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level3OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level3OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level3OUId_prev_applyts.getTime());
                }

                if (this.G1_Level4OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level4OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level4OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level4OUId_applyts.getTime());
                }

                if (this.G1_Level4OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level4OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level4OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level4OUId_prev_applyts.getTime());
                }

                if (this.G1_Level5OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level5OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level5OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level5OUId_applyts.getTime());
                }

                if (this.G1_Level5OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level5OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level5OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level5OUId_prev_applyts.getTime());
                }

                if (this.G1_Level6OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level6OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level6OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level6OUId_applyts.getTime());
                }

                if (this.G1_Level6OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level6OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level6OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level6OUId_prev_applyts.getTime());
                }

                if (this.G1_Level7OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level7OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level7OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level7OUId_applyts.getTime());
                }

                if (this.G1_Level7OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level7OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level7OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level7OUId_prev_applyts.getTime());
                }

                if (this.G1_Level8OUId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level8OUId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level8OUId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level8OUId_applyts.getTime());
                }

                if (this.G1_Level8OUId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Level8OUId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Level8OUId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Level8OUId_prev_applyts.getTime());
                }

                if (this.G1_LocalityName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_LocalityName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_LocalityName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_LocalityName_applyts.getTime());
                }

                if (this.G1_LocalityName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_LocalityName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_LocalityName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_LocalityName_prev_applyts.getTime());
                }

                if (this.G1_Localization == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Localization.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Localization_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Localization_applyts.getTime());
                }

                if (this.G1_Localization_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Localization_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Localization_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Localization_prev_applyts.getTime());
                }

                if (this.G1_Mail == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Mail.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Mail_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Mail_applyts.getTime());
                }

                if (this.G1_Mail_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Mail_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Mail_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Mail_prev_applyts.getTime());
                }

                if (this.G1_MLec == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_MLec.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_MLec_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_MLec_applyts.getTime());
                }

                if (this.G1_MLec_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_MLec_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_MLec_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_MLec_prev_applyts.getTime());
                }

                if (this.G1_Mobile == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Mobile.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Mobile_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Mobile_applyts.getTime());
                }

                if (this.G1_Mobile_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Mobile_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Mobile_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Mobile_prev_applyts.getTime());
                }

                if (this.G1_OrdGivenName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_OrdGivenName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_OrdGivenName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_OrdGivenName_applyts.getTime());
                }

                if (this.G1_OrdGivenName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_OrdGivenName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_OrdGivenName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_OrdGivenName_prev_applyts.getTime());
                }

                if (this.G1_PostalAddress == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_PostalAddress.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_PostalAddress_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_PostalAddress_applyts.getTime());
                }

                if (this.G1_PostalAddress_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_PostalAddress_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_PostalAddress_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_PostalAddress_prev_applyts.getTime());
                }

                if (this.G1_Presence == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Presence.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Presence_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Presence_applyts.getTime());
                }

                if (this.G1_Presence_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Presence_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Presence_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Presence_prev_applyts.getTime());
                }

                if (this.G1_RoomNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_RoomNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_RoomNumber_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_RoomNumber_applyts.getTime());
                }

                if (this.G1_RoomNumber_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_RoomNumber_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_RoomNumber_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_RoomNumber_prev_applyts.getTime());
                }

                if (this.G1_SLec == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_SLec.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_SLec_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_SLec_applyts.getTime());
                }

                if (this.G1_SLec_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_SLec_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_SLec_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_SLec_prev_applyts.getTime());
                }

                if (this.G1_sn == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_sn.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_sn_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_sn_applyts.getTime());
                }

                if (this.G1_sn_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_sn_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_sn_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_sn_prev_applyts.getTime());
                }

                if (this.G1_StatusCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_StatusCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_StatusCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_StatusCode_applyts.getTime());
                }

                if (this.G1_StatusCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_StatusCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_StatusCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_StatusCode_prev_applyts.getTime());
                }

                if (this.G1_TeamManagerId == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamManagerId.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamManagerId_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamManagerId_applyts.getTime());
                }

                if (this.G1_TeamManagerId_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamManagerId_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamManagerId_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamManagerId_prev_applyts.getTime());
                }

                if (this.G1_TeamManagerName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamManagerName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamManagerName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamManagerName_applyts.getTime());
                }

                if (this.G1_TeamManagerName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamManagerName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamManagerName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamManagerName_prev_applyts
                            .getTime());
                }

                if (this.G1_TeamSec == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamSec.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamSec_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamSec_applyts.getTime());
                }

                if (this.G1_TeamSec_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamSec_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamSec_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamSec_prev_applyts.getTime());
                }

                if (this.G1_TeamSecTel == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamSecTel.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamSecTel_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamSecTel_applyts.getTime());
                }

                if (this.G1_TeamSecTel_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TeamSecTel_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TeamSecTel_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TeamSecTel_prev_applyts.getTime());
                }

                if (this.G1_TelephoneNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TelephoneNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TelephoneNumber_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TelephoneNumber_applyts.getTime());
                }

                if (this.G1_TelephoneNumber_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TelephoneNumber_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TelephoneNumber_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TelephoneNumber_prev_applyts
                            .getTime());
                }

                if (this.G1_Title == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Title.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Title_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Title_applyts.getTime());
                }

                if (this.G1_Title_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Title_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Title_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Title_prev_applyts.getTime());
                }

                if (this.G1_TitleShort == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TitleShort.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TitleShort_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TitleShort_applyts.getTime());
                }

                if (this.G1_TitleShort_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TitleShort_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TitleShort_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TitleShort_prev_applyts.getTime());
                }

                if (this.G1_UBCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_UBCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_UBCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_UBCode_applyts.getTime());
                }

                if (this.G1_UBCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_UBCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_UBCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_UBCode_prev_applyts.getTime());
                }

                if (this.G1_UBShortName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_UBShortName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_UBShortName_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_UBShortName_applyts.getTime());
                }

                if (this.G1_UBShortName_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_UBShortName_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_UBShortName_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_UBShortName_prev_applyts.getTime());
                }

                if (this.G1_Uid == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Uid.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Uid_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Uid_applyts.getTime());
                }

                if (this.G1_Uid_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_Uid_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_Uid_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_Uid_prev_applyts.getTime());
                }

                if (this.G1_TEMLocalization == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TEMLocalization.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TEMLocalization_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TEMLocalization_applyts.getTime());
                }

                if (this.G1_TEMLocalization_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TEMLocalization_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TEMLocalization_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TEMLocalization_prev_applyts
                            .getTime());
                }

                if (this.G1_TiersCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TiersCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TiersCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TiersCode_applyts.getTime());
                }

                if (this.G1_TiersCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_TiersCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_TiersCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_TiersCode_prev_applyts.getTime());
                }

                if (this.domain == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.domain.intValue());
                }

                if (this.prevDomain == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.prevDomain.intValue());
                }

                if (this.G1_ValidatorUTNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ValidatorUTNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ValidatorDelegationPool == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ValidatorDelegationPool
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ApproverUTNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ApproverUTNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_ApproverDelegationPool == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_ApproverDelegationPool
                            .getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_DoubleValidation == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_DoubleValidation.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusUnit == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusUnit.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusUnit_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusUnit_applyts.getTime());
                }

                if (this.G1_BusUnit_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusUnit_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusUnit_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusUnit_prev_applyts.getTime());
                }

                if (this.G1_BusUnitWrd == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusUnitWrd.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusUnitWrd_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusUnitWrd_applyts.getTime());
                }

                if (this.G1_BusUnitWrd_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_BusUnitWrd_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_BusUnitWrd_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_BusUnitWrd_prev_applyts.getTime());
                }

                if (this.G1_LPCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_LPCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_LPCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_LPCode_applyts.getTime());
                }

                if (this.G1_LPCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_LPCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_LPCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_LPCode_prev_applyts.getTime());
                }

                if (this.G1_EntityCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EntityCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EntityCode_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EntityCode_applyts.getTime());
                }

                if (this.G1_EntityCode_prev == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.G1_EntityCode_prev.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.G1_EntityCode_prev_applyts == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.G1_EntityCode_prev_applyts.getTime());
                }

                if (this.BusinessLine_id == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.BusinessLine_id.intValue());
                }

                if (this.Department_id == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.Department_id.intValue());
                }

                if (this.Entity_id == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.Entity_id.intValue());
                }

                if (this.department_id_rcp == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.department_id_rcp.intValue());
                }

                if (this.businessLine_id_rcp == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.businessLine_id_rcp.intValue());
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("item_last_action");
            sb.append("=");
            sb.append(String.valueOf(this.item_last_action));

            sb.append(", ");

            sb.append("item_last_action_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.item_last_action_applyts));

            sb.append(", ");

            sb.append("item_creation_date");
            sb.append("=");
            sb.append(String.valueOf(this.item_creation_date));

            sb.append(", ");

            sb.append("G1_ArrivalDate");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ArrivalDate));

            sb.append(", ");

            sb.append("G1_ArrivalDate_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ArrivalDate_applyts));

            sb.append(", ");

            sb.append("G1_ArrivalDate_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ArrivalDate_prev));

            sb.append(", ");

            sb.append("G1_ArrivalDate_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ArrivalDate_prev_applyts));

            sb.append(", ");

            sb.append("G1_BLec");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BLec));

            sb.append(", ");

            sb.append("G1_BLec_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BLec_applyts));

            sb.append(", ");

            sb.append("G1_BLec_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BLec_prev));

            sb.append(", ");

            sb.append("G1_BLec_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BLec_prev_applyts));

            sb.append(", ");

            sb.append("G1_BusinessUnit");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusinessUnit));

            sb.append(", ");

            sb.append("G1_BusinessUnit_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusinessUnit_applyts));

            sb.append(", ");

            sb.append("G1_BusinessUnit_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusinessUnit_prev));

            sb.append(", ");

            sb.append("G1_BusinessUnit_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusinessUnit_prev_applyts));

            sb.append(", ");

            sb.append("G1_CIDBuUT");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDBuUT));

            sb.append(", ");

            sb.append("G1_CIDBuUT_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDBuUT_applyts));

            sb.append(", ");

            sb.append("G1_CIDBuUT_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDBuUT_prev));

            sb.append(", ");

            sb.append("G1_CIDBuUT_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDBuUT_prev_applyts));

            sb.append(", ");

            sb.append("G1_CIDUT");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDUT));

            sb.append(", ");

            sb.append("G1_CIDUT_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDUT_applyts));

            sb.append(", ");

            sb.append("G1_CIDUT_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDUT_prev));

            sb.append(", ");

            sb.append("G1_CIDUT_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CIDUT_prev_applyts));

            sb.append(", ");

            sb.append("G1_cn");
            sb.append("=");
            sb.append(String.valueOf(this.G1_cn));

            sb.append(", ");

            sb.append("G1_cn_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_cn_applyts));

            sb.append(", ");

            sb.append("G1_cn_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_cn_prev));

            sb.append(", ");

            sb.append("G1_cn_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_cn_prev_applyts));

            sb.append(", ");

            sb.append("G1_ContractorCompany");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorCompany));

            sb.append(", ");

            sb.append("G1_ContractorCompany_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorCompany_applyts));

            sb.append(", ");

            sb.append("G1_ContractorCompany_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorCompany_prev));

            sb.append(", ");

            sb.append("G1_ContractorCompany_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorCompany_prev_applyts));

            sb.append(", ");

            sb.append("G1_ContractorStatus");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorStatus));

            sb.append(", ");

            sb.append("G1_ContractorStatus_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorStatus_applyts));

            sb.append(", ");

            sb.append("G1_ContractorStatus_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorStatus_prev));

            sb.append(", ");

            sb.append("G1_ContractorStatus_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ContractorStatus_prev_applyts));

            sb.append(", ");

            sb.append("G1_coseDomain");
            sb.append("=");
            sb.append(String.valueOf(this.G1_coseDomain));

            sb.append(", ");

            sb.append("G1_coseDomain_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_coseDomain_applyts));

            sb.append(", ");

            sb.append("G1_coseDomain_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_coseDomain_prev));

            sb.append(", ");

            sb.append("G1_coseDomain_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_coseDomain_prev_applyts));

            sb.append(", ");

            sb.append("G1_CountryCode2");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryCode2));

            sb.append(", ");

            sb.append("G1_CountryCode2_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryCode2_applyts));

            sb.append(", ");

            sb.append("G1_CountryCode2_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryCode2_prev));

            sb.append(", ");

            sb.append("G1_CountryCode2_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryCode2_prev_applyts));

            sb.append(", ");

            sb.append("G1_CountryName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryName));

            sb.append(", ");

            sb.append("G1_CountryName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryName_applyts));

            sb.append(", ");

            sb.append("G1_CountryName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryName_prev));

            sb.append(", ");

            sb.append("G1_CountryName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_CountryName_prev_applyts));

            sb.append(", ");

            sb.append("G1_DepartureDate");
            sb.append("=");
            sb.append(String.valueOf(this.G1_DepartureDate));

            sb.append(", ");

            sb.append("G1_DepartureDate_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_DepartureDate_applyts));

            sb.append(", ");

            sb.append("G1_DepartureDate_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_DepartureDate_prev));

            sb.append(", ");

            sb.append("G1_DepartureDate_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_DepartureDate_prev_applyts));

            sb.append(", ");

            sb.append("G1_EmployeeNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeNumber));

            sb.append(", ");

            sb.append("G1_EmployeeNumber_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeNumber_applyts));

            sb.append(", ");

            sb.append("G1_EmployeeNumber_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeNumber_prev));

            sb.append(", ");

            sb.append("G1_EmployeeNumber_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeNumber_prev_applyts));

            sb.append(", ");

            sb.append("G1_EmployeeType");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeType));

            sb.append(", ");

            sb.append("G1_EmployeeType_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeType_applyts));

            sb.append(", ");

            sb.append("G1_EmployeeType_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeType_prev));

            sb.append(", ");

            sb.append("G1_EmployeeType_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EmployeeType_prev_applyts));

            sb.append(", ");

            sb.append("G1_Entity");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Entity));

            sb.append(", ");

            sb.append("G1_Entity_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Entity_applyts));

            sb.append(", ");

            sb.append("G1_Entity_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Entity_prev));

            sb.append(", ");

            sb.append("G1_Entity_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Entity_prev_applyts));

            sb.append(", ");

            sb.append("G1_EntityPostalAddress");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityPostalAddress));

            sb.append(", ");

            sb.append("G1_EntityPostalAddress_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityPostalAddress_applyts));

            sb.append(", ");

            sb.append("G1_EntityPostalAddress_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityPostalAddress_prev));

            sb.append(", ");

            sb.append("G1_EntityPostalAddress_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityPostalAddress_prev_applyts));

            sb.append(", ");

            sb.append("G1_ESFCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFCode));

            sb.append(", ");

            sb.append("G1_ESFCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFCode_applyts));

            sb.append(", ");

            sb.append("G1_ESFCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFCode_prev));

            sb.append(", ");

            sb.append("G1_ESFCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFCode_prev_applyts));

            sb.append(", ");

            sb.append("G1_ESFShortName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFShortName));

            sb.append(", ");

            sb.append("G1_ESFShortName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFShortName_applyts));

            sb.append(", ");

            sb.append("G1_ESFShortName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFShortName_prev));

            sb.append(", ");

            sb.append("G1_ESFShortName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ESFShortName_prev_applyts));

            sb.append(", ");

            sb.append("G1_FacsimileTelephoneNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_FacsimileTelephoneNumber));

            sb.append(", ");

            sb.append("G1_FacsimileTelephoneNumber_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_FacsimileTelephoneNumber_applyts));

            sb.append(", ");

            sb.append("G1_FacsimileTelephoneNumber_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_FacsimileTelephoneNumber_prev));

            sb.append(", ");

            sb.append("G1_FacsimileTelephoneNumber_prev_applyts");
            sb.append("=");
            sb.append(
                    String.valueOf(this.G1_FacsimileTelephoneNumber_prev_applyts));

            sb.append(", ");

            sb.append("G1_Floor");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Floor));

            sb.append(", ");

            sb.append("G1_Floor_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Floor_applyts));

            sb.append(", ");

            sb.append("G1_Floor_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Floor_prev));

            sb.append(", ");

            sb.append("G1_Floor_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Floor_prev_applyts));

            sb.append(", ");

            sb.append("G1_GDDBuUT");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDBuUT));

            sb.append(", ");

            sb.append("G1_GDDBuUT_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDBuUT_applyts));

            sb.append(", ");

            sb.append("G1_GDDBuUT_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDBuUT_prev));

            sb.append(", ");

            sb.append("G1_GDDBuUT_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDBuUT_prev_applyts));

            sb.append(", ");

            sb.append("G1_GDDUT");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDUT));

            sb.append(", ");

            sb.append("G1_GDDUT_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDUT_applyts));

            sb.append(", ");

            sb.append("G1_GDDUT_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDUT_prev));

            sb.append(", ");

            sb.append("G1_GDDUT_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_GDDUT_prev_applyts));

            sb.append(", ");

            sb.append("G1_Givenname");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Givenname));

            sb.append(", ");

            sb.append("G1_Givenname_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Givenname_applyts));

            sb.append(", ");

            sb.append("G1_Givenname_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Givenname_prev));

            sb.append(", ");

            sb.append("G1_Givenname_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Givenname_prev_applyts));

            sb.append(", ");

            sb.append("G1_IsCalyon");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyon));

            sb.append(", ");

            sb.append("G1_IsCalyon_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyon_applyts));

            sb.append(", ");

            sb.append("G1_IsCalyon_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyon_prev));

            sb.append(", ");

            sb.append("G1_IsCalyon_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyon_prev_applyts));

            sb.append(", ");

            sb.append("G1_IsCalyonFR");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyonFR));

            sb.append(", ");

            sb.append("G1_IsCalyonFR_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyonFR_applyts));

            sb.append(", ");

            sb.append("G1_IsCalyonFR_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyonFR_prev));

            sb.append(", ");

            sb.append("G1_IsCalyonFR_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCalyonFR_prev_applyts));

            sb.append(", ");

            sb.append("G1_IsCM");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCM));

            sb.append(", ");

            sb.append("G1_IsCM_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCM_applyts));

            sb.append(", ");

            sb.append("G1_IsCM_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCM_prev));

            sb.append(", ");

            sb.append("G1_IsCM_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsCM_prev_applyts));

            sb.append(", ");

            sb.append("G1_IsInternal");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsInternal));

            sb.append(", ");

            sb.append("G1_IsInternal_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsInternal_applyts));

            sb.append(", ");

            sb.append("G1_IsInternal_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsInternal_prev));

            sb.append(", ");

            sb.append("G1_IsInternal_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_IsInternal_prev_applyts));

            sb.append(", ");

            sb.append("G1_L");
            sb.append("=");
            sb.append(String.valueOf(this.G1_L));

            sb.append(", ");

            sb.append("G1_L_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_L_applyts));

            sb.append(", ");

            sb.append("G1_L_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_L_prev));

            sb.append(", ");

            sb.append("G1_L_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_L_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level1OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level1OUId));

            sb.append(", ");

            sb.append("G1_Level1OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level1OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level1OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level1OUId_prev));

            sb.append(", ");

            sb.append("G1_Level1OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level1OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level2OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level2OUId));

            sb.append(", ");

            sb.append("G1_Level2OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level2OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level2OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level2OUId_prev));

            sb.append(", ");

            sb.append("G1_Level2OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level2OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level3OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level3OUId));

            sb.append(", ");

            sb.append("G1_Level3OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level3OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level3OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level3OUId_prev));

            sb.append(", ");

            sb.append("G1_Level3OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level3OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level4OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level4OUId));

            sb.append(", ");

            sb.append("G1_Level4OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level4OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level4OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level4OUId_prev));

            sb.append(", ");

            sb.append("G1_Level4OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level4OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level5OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level5OUId));

            sb.append(", ");

            sb.append("G1_Level5OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level5OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level5OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level5OUId_prev));

            sb.append(", ");

            sb.append("G1_Level5OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level5OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level6OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level6OUId));

            sb.append(", ");

            sb.append("G1_Level6OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level6OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level6OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level6OUId_prev));

            sb.append(", ");

            sb.append("G1_Level6OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level6OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level7OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level7OUId));

            sb.append(", ");

            sb.append("G1_Level7OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level7OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level7OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level7OUId_prev));

            sb.append(", ");

            sb.append("G1_Level7OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level7OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_Level8OUId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level8OUId));

            sb.append(", ");

            sb.append("G1_Level8OUId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level8OUId_applyts));

            sb.append(", ");

            sb.append("G1_Level8OUId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level8OUId_prev));

            sb.append(", ");

            sb.append("G1_Level8OUId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Level8OUId_prev_applyts));

            sb.append(", ");

            sb.append("G1_LocalityName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LocalityName));

            sb.append(", ");

            sb.append("G1_LocalityName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LocalityName_applyts));

            sb.append(", ");

            sb.append("G1_LocalityName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LocalityName_prev));

            sb.append(", ");

            sb.append("G1_LocalityName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LocalityName_prev_applyts));

            sb.append(", ");

            sb.append("G1_Localization");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Localization));

            sb.append(", ");

            sb.append("G1_Localization_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Localization_applyts));

            sb.append(", ");

            sb.append("G1_Localization_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Localization_prev));

            sb.append(", ");

            sb.append("G1_Localization_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Localization_prev_applyts));

            sb.append(", ");

            sb.append("G1_Mail");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mail));

            sb.append(", ");

            sb.append("G1_Mail_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mail_applyts));

            sb.append(", ");

            sb.append("G1_Mail_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mail_prev));

            sb.append(", ");

            sb.append("G1_Mail_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mail_prev_applyts));

            sb.append(", ");

            sb.append("G1_MLec");
            sb.append("=");
            sb.append(String.valueOf(this.G1_MLec));

            sb.append(", ");

            sb.append("G1_MLec_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_MLec_applyts));

            sb.append(", ");

            sb.append("G1_MLec_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_MLec_prev));

            sb.append(", ");

            sb.append("G1_MLec_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_MLec_prev_applyts));

            sb.append(", ");

            sb.append("G1_Mobile");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mobile));

            sb.append(", ");

            sb.append("G1_Mobile_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mobile_applyts));

            sb.append(", ");

            sb.append("G1_Mobile_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mobile_prev));

            sb.append(", ");

            sb.append("G1_Mobile_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Mobile_prev_applyts));

            sb.append(", ");

            sb.append("G1_OrdGivenName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_OrdGivenName));

            sb.append(", ");

            sb.append("G1_OrdGivenName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_OrdGivenName_applyts));

            sb.append(", ");

            sb.append("G1_OrdGivenName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_OrdGivenName_prev));

            sb.append(", ");

            sb.append("G1_OrdGivenName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_OrdGivenName_prev_applyts));

            sb.append(", ");

            sb.append("G1_PostalAddress");
            sb.append("=");
            sb.append(String.valueOf(this.G1_PostalAddress));

            sb.append(", ");

            sb.append("G1_PostalAddress_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_PostalAddress_applyts));

            sb.append(", ");

            sb.append("G1_PostalAddress_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_PostalAddress_prev));

            sb.append(", ");

            sb.append("G1_PostalAddress_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_PostalAddress_prev_applyts));

            sb.append(", ");

            sb.append("G1_Presence");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Presence));

            sb.append(", ");

            sb.append("G1_Presence_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Presence_applyts));

            sb.append(", ");

            sb.append("G1_Presence_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Presence_prev));

            sb.append(", ");

            sb.append("G1_Presence_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Presence_prev_applyts));

            sb.append(", ");

            sb.append("G1_RoomNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_RoomNumber));

            sb.append(", ");

            sb.append("G1_RoomNumber_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_RoomNumber_applyts));

            sb.append(", ");

            sb.append("G1_RoomNumber_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_RoomNumber_prev));

            sb.append(", ");

            sb.append("G1_RoomNumber_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_RoomNumber_prev_applyts));

            sb.append(", ");

            sb.append("G1_SLec");
            sb.append("=");
            sb.append(String.valueOf(this.G1_SLec));

            sb.append(", ");

            sb.append("G1_SLec_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_SLec_applyts));

            sb.append(", ");

            sb.append("G1_SLec_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_SLec_prev));

            sb.append(", ");

            sb.append("G1_SLec_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_SLec_prev_applyts));

            sb.append(", ");

            sb.append("G1_sn");
            sb.append("=");
            sb.append(String.valueOf(this.G1_sn));

            sb.append(", ");

            sb.append("G1_sn_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_sn_applyts));

            sb.append(", ");

            sb.append("G1_sn_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_sn_prev));

            sb.append(", ");

            sb.append("G1_sn_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_sn_prev_applyts));

            sb.append(", ");

            sb.append("G1_StatusCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_StatusCode));

            sb.append(", ");

            sb.append("G1_StatusCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_StatusCode_applyts));

            sb.append(", ");

            sb.append("G1_StatusCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_StatusCode_prev));

            sb.append(", ");

            sb.append("G1_StatusCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_StatusCode_prev_applyts));

            sb.append(", ");

            sb.append("G1_TeamManagerId");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerId));

            sb.append(", ");

            sb.append("G1_TeamManagerId_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerId_applyts));

            sb.append(", ");

            sb.append("G1_TeamManagerId_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerId_prev));

            sb.append(", ");

            sb.append("G1_TeamManagerId_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerId_prev_applyts));

            sb.append(", ");

            sb.append("G1_TeamManagerName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerName));

            sb.append(", ");

            sb.append("G1_TeamManagerName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerName_applyts));

            sb.append(", ");

            sb.append("G1_TeamManagerName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerName_prev));

            sb.append(", ");

            sb.append("G1_TeamManagerName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamManagerName_prev_applyts));

            sb.append(", ");

            sb.append("G1_TeamSec");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSec));

            sb.append(", ");

            sb.append("G1_TeamSec_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSec_applyts));

            sb.append(", ");

            sb.append("G1_TeamSec_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSec_prev));

            sb.append(", ");

            sb.append("G1_TeamSec_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSec_prev_applyts));

            sb.append(", ");

            sb.append("G1_TeamSecTel");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSecTel));

            sb.append(", ");

            sb.append("G1_TeamSecTel_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSecTel_applyts));

            sb.append(", ");

            sb.append("G1_TeamSecTel_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSecTel_prev));

            sb.append(", ");

            sb.append("G1_TeamSecTel_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TeamSecTel_prev_applyts));

            sb.append(", ");

            sb.append("G1_TelephoneNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TelephoneNumber));

            sb.append(", ");

            sb.append("G1_TelephoneNumber_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TelephoneNumber_applyts));

            sb.append(", ");

            sb.append("G1_TelephoneNumber_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TelephoneNumber_prev));

            sb.append(", ");

            sb.append("G1_TelephoneNumber_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TelephoneNumber_prev_applyts));

            sb.append(", ");

            sb.append("G1_Title");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Title));

            sb.append(", ");

            sb.append("G1_Title_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Title_applyts));

            sb.append(", ");

            sb.append("G1_Title_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Title_prev));

            sb.append(", ");

            sb.append("G1_Title_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Title_prev_applyts));

            sb.append(", ");

            sb.append("G1_TitleShort");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TitleShort));

            sb.append(", ");

            sb.append("G1_TitleShort_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TitleShort_applyts));

            sb.append(", ");

            sb.append("G1_TitleShort_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TitleShort_prev));

            sb.append(", ");

            sb.append("G1_TitleShort_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TitleShort_prev_applyts));

            sb.append(", ");

            sb.append("G1_UBCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBCode));

            sb.append(", ");

            sb.append("G1_UBCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBCode_applyts));

            sb.append(", ");

            sb.append("G1_UBCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBCode_prev));

            sb.append(", ");

            sb.append("G1_UBCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBCode_prev_applyts));

            sb.append(", ");

            sb.append("G1_UBShortName");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBShortName));

            sb.append(", ");

            sb.append("G1_UBShortName_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBShortName_applyts));

            sb.append(", ");

            sb.append("G1_UBShortName_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBShortName_prev));

            sb.append(", ");

            sb.append("G1_UBShortName_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_UBShortName_prev_applyts));

            sb.append(", ");

            sb.append("G1_Uid");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Uid));

            sb.append(", ");

            sb.append("G1_Uid_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Uid_applyts));

            sb.append(", ");

            sb.append("G1_Uid_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Uid_prev));

            sb.append(", ");

            sb.append("G1_Uid_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_Uid_prev_applyts));

            sb.append(", ");

            sb.append("G1_TEMLocalization");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TEMLocalization));

            sb.append(", ");

            sb.append("G1_TEMLocalization_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TEMLocalization_applyts));

            sb.append(", ");

            sb.append("G1_TEMLocalization_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TEMLocalization_prev));

            sb.append(", ");

            sb.append("G1_TEMLocalization_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TEMLocalization_prev_applyts));

            sb.append(", ");

            sb.append("G1_TiersCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TiersCode));

            sb.append(", ");

            sb.append("G1_TiersCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TiersCode_applyts));

            sb.append(", ");

            sb.append("G1_TiersCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TiersCode_prev));

            sb.append(", ");

            sb.append("G1_TiersCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_TiersCode_prev_applyts));

            sb.append(", ");

            sb.append("domain");
            sb.append("=");
            sb.append(String.valueOf(this.domain));

            sb.append(", ");

            sb.append("prevDomain");
            sb.append("=");
            sb.append(String.valueOf(this.prevDomain));

            sb.append(", ");

            sb.append("G1_ValidatorUTNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ValidatorUTNumber));

            sb.append(", ");

            sb.append("G1_ValidatorDelegationPool");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ValidatorDelegationPool));

            sb.append(", ");

            sb.append("G1_ApproverUTNumber");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ApproverUTNumber));

            sb.append(", ");

            sb.append("G1_ApproverDelegationPool");
            sb.append("=");
            sb.append(String.valueOf(this.G1_ApproverDelegationPool));

            sb.append(", ");

            sb.append("G1_DoubleValidation");
            sb.append("=");
            sb.append(String.valueOf(this.G1_DoubleValidation));

            sb.append(", ");

            sb.append("G1_BusUnit");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnit));

            sb.append(", ");

            sb.append("G1_BusUnit_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnit_applyts));

            sb.append(", ");

            sb.append("G1_BusUnit_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnit_prev));

            sb.append(", ");

            sb.append("G1_BusUnit_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnit_prev_applyts));

            sb.append(", ");

            sb.append("G1_BusUnitWrd");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnitWrd));

            sb.append(", ");

            sb.append("G1_BusUnitWrd_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnitWrd_applyts));

            sb.append(", ");

            sb.append("G1_BusUnitWrd_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnitWrd_prev));

            sb.append(", ");

            sb.append("G1_BusUnitWrd_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_BusUnitWrd_prev_applyts));

            sb.append(", ");

            sb.append("G1_LPCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LPCode));

            sb.append(", ");

            sb.append("G1_LPCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LPCode_applyts));

            sb.append(", ");

            sb.append("G1_LPCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LPCode_prev));

            sb.append(", ");

            sb.append("G1_LPCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_LPCode_prev_applyts));

            sb.append(", ");

            sb.append("G1_EntityCode");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityCode));

            sb.append(", ");

            sb.append("G1_EntityCode_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityCode_applyts));

            sb.append(", ");

            sb.append("G1_EntityCode_prev");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityCode_prev));

            sb.append(", ");

            sb.append("G1_EntityCode_prev_applyts");
            sb.append("=");
            sb.append(String.valueOf(this.G1_EntityCode_prev_applyts));

            sb.append(", ");

            sb.append("BusinessLine_id");
            sb.append("=");
            sb.append(String.valueOf(this.BusinessLine_id));

            sb.append(", ");

            sb.append("Department_id");
            sb.append("=");
            sb.append(String.valueOf(this.Department_id));

            sb.append(", ");

            sb.append("Entity_id");
            sb.append("=");
            sb.append(String.valueOf(this.Entity_id));

            sb.append(", ");

            sb.append("department_id_rcp");
            sb.append("=");
            sb.append(String.valueOf(this.department_id_rcp));

            sb.append(", ");

            sb.append("businessLine_id_rcp");
            sb.append("=");
            sb.append(String.valueOf(this.businessLine_id_rcp));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row1Struct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row2Struct
            implements IPersistableRow<row2Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public Date moment;
        public String pid;
        public String root_pid;
        public String father_pid;
        public String project;
        public String job;
        public String context;
        public Integer priority;
        public String type;
        public String origin;
        public String message;
        public Integer code;

        public Date getMoment()
        {
            return this.moment;
        }

        public String getPid()
        {
            return this.pid;
        }

        public String getRoot_pid()
        {
            return this.root_pid;
        }

        public String getFather_pid()
        {
            return this.father_pid;
        }

        public String getProject()
        {
            return this.project;
        }

        public String getJob()
        {
            return this.job;
        }

        public String getContext()
        {
            return this.context;
        }

        public Integer getPriority()
        {
            return this.priority;
        }

        public String getType()
        {
            return this.type;
        }

        public String getOrigin()
        {
            return this.origin;
        }

        public String getMessage()
        {
            return this.message;
        }

        public Integer getCode()
        {
            return this.code;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readByte();
                    if (length == -1)
                        this.moment = null;
                    else {
                        this.moment = new Date(dis.readLong());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.pid = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.pid = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.root_pid = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.root_pid = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.father_pid = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.father_pid = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.project = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.project = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.job = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.job = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.context = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.context = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.priority = null;
                    else {
                        this.priority = Integer.valueOf(dis.readInt());
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.type = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.type = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.origin = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.origin = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.message = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.message = new String(commonByteArray, 0, length);
                    }

                    length = dis.readByte();
                    if (length == -1)
                        this.code = null;
                    else
                        this.code = Integer.valueOf(dis.readInt());
                }
                catch (IOException e)
                {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.moment == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeLong(this.moment.getTime());
                }

                if (this.pid == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.pid.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.root_pid == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.root_pid.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.father_pid == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.father_pid.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.project == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.project.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.job == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.job.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.context == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.context.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.priority == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.priority.intValue());
                }

                if (this.type == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.type.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.origin == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.origin.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.message == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.message.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.code == null) {
                    dos.writeByte(-1);
                } else {
                    dos.writeByte(0);
                    dos.writeInt(this.code.intValue());
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("moment");
            sb.append("=");
            sb.append(String.valueOf(this.moment));

            sb.append(", ");

            sb.append("pid");
            sb.append("=");
            sb.append(String.valueOf(this.pid));

            sb.append(", ");

            sb.append("root_pid");
            sb.append("=");
            sb.append(String.valueOf(this.root_pid));

            sb.append(", ");

            sb.append("father_pid");
            sb.append("=");
            sb.append(String.valueOf(this.father_pid));

            sb.append(", ");

            sb.append("project");
            sb.append("=");
            sb.append(String.valueOf(this.project));

            sb.append(", ");

            sb.append("job");
            sb.append("=");
            sb.append(String.valueOf(this.job));

            sb.append(", ");

            sb.append("context");
            sb.append("=");
            sb.append(String.valueOf(this.context));

            sb.append(", ");

            sb.append("priority");
            sb.append("=");
            sb.append(String.valueOf(this.priority));

            sb.append(", ");

            sb.append("type");
            sb.append("=");
            sb.append(String.valueOf(this.type));

            sb.append(", ");

            sb.append("origin");
            sb.append("=");
            sb.append(String.valueOf(this.origin));

            sb.append(", ");

            sb.append("message");
            sb.append("=");
            sb.append(String.valueOf(this.message));

            sb.append(", ");

            sb.append("code");
            sb.append("=");
            sb.append(String.valueOf(this.code));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row2Struct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row3Struct
            implements IPersistableRow<row3Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        private static final int DEFAULT_HASHCODE = 1;
        private static final int PRIME = 31;
        private int hashCode = 1;
        public boolean hashCodeDirty = true;
        public String code;
        public String label;

        public String getCode()
        {
            return this.code;
        }

        public String getLabel()
        {
            return this.label;
        }

        public int hashCode()
        {
            if (this.hashCodeDirty) {
                int prime = 31;
                int result = 1;

                result = 31 * result + (
                        this.code == null ? 0 : this.code.hashCode());

                this.hashCode = result;
                this.hashCodeDirty = false;
            }
            return this.hashCode;
        }

        public boolean equals(Object obj)
        {
            if (this == obj)
                return true;
            if (obj == null)
                return false;
            if (getClass() != obj.getClass())
                return false;
            row3Struct other = (row3Struct)obj;

            if (this.code == null) {
                if (other.code != null)
                    return false;
            } else if (!this.code.equals(other.code)) {
                return false;
            }
            return true;
        }

        public void copyDataTo(row3Struct other)
        {
            other.code = this.code;
            other.label = this.label;
        }

        public void copyKeysDataTo(row3Struct other)
        {
            other.code = this.code;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.code = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.code = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.label = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.label = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.code == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.code.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.label == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.label.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("code");
            sb.append("=");
            sb.append(String.valueOf(this.code));

            sb.append(", ");

            sb.append("label");
            sb.append("=");
            sb.append(String.valueOf(this.label));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row3Struct other)
        {
            int returnValue = -1;

            returnValue = checkNullsAndCompare(this.code, other.code);
            if (returnValue != 0) {
                return returnValue;
            }

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row4Struct
            implements IPersistableRow<row4Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        private static final int DEFAULT_HASHCODE = 1;
        private static final int PRIME = 31;
        private int hashCode = 1;
        public boolean hashCodeDirty = true;
        public String code;
        public String label;

        public String getCode()
        {
            return this.code;
        }

        public String getLabel()
        {
            return this.label;
        }

        public int hashCode()
        {
            if (this.hashCodeDirty) {
                int prime = 31;
                int result = 1;

                result = 31 * result + (
                        this.code == null ? 0 : this.code.hashCode());

                this.hashCode = result;
                this.hashCodeDirty = false;
            }
            return this.hashCode;
        }

        public boolean equals(Object obj)
        {
            if (this == obj)
                return true;
            if (obj == null)
                return false;
            if (getClass() != obj.getClass())
                return false;
            row4Struct other = (row4Struct)obj;

            if (this.code == null) {
                if (other.code != null)
                    return false;
            } else if (!this.code.equals(other.code)) {
                return false;
            }
            return true;
        }

        public void copyDataTo(row4Struct other)
        {
            other.code = this.code;
            other.label = this.label;
        }

        public void copyKeysDataTo(row4Struct other)
        {
            other.code = this.code;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.code = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.code = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.label = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.label = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.code == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.code.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.label == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.label.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("code");
            sb.append("=");
            sb.append(String.valueOf(this.code));

            sb.append(", ");

            sb.append("label");
            sb.append("=");
            sb.append(String.valueOf(this.label));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row4Struct other)
        {
            int returnValue = -1;

            returnValue = checkNullsAndCompare(this.code, other.code);
            if (returnValue != 0) {
                return returnValue;
            }

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row5Struct
            implements IPersistableRow<row5Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        private static final int DEFAULT_HASHCODE = 1;
        private static final int PRIME = 31;
        private int hashCode = 1;
        public boolean hashCodeDirty = true;
        public String code;
        public String label;

        public String getCode()
        {
            return this.code;
        }

        public String getLabel()
        {
            return this.label;
        }

        public int hashCode()
        {
            if (this.hashCodeDirty) {
                int prime = 31;
                int result = 1;

                result = 31 * result + (
                        this.code == null ? 0 : this.code.hashCode());

                this.hashCode = result;
                this.hashCodeDirty = false;
            }
            return this.hashCode;
        }

        public boolean equals(Object obj)
        {
            if (this == obj)
                return true;
            if (obj == null)
                return false;
            if (getClass() != obj.getClass())
                return false;
            row5Struct other = (row5Struct)obj;

            if (this.code == null) {
                if (other.code != null)
                    return false;
            } else if (!this.code.equals(other.code)) {
                return false;
            }
            return true;
        }

        public void copyDataTo(row5Struct other)
        {
            other.code = this.code;
            other.label = this.label;
        }

        public void copyKeysDataTo(row5Struct other)
        {
            other.code = this.code;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.code = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.code = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.label = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.label = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.code == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.code.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.label == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.label.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("code");
            sb.append("=");
            sb.append(String.valueOf(this.code));

            sb.append(", ");

            sb.append("label");
            sb.append("=");
            sb.append(String.valueOf(this.label));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row5Struct other)
        {
            int returnValue = -1;

            returnValue = checkNullsAndCompare(this.code, other.code);
            if (returnValue != 0) {
                return returnValue;
            }

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row6Struct
            implements IPersistableRow<row6Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        private static final int DEFAULT_HASHCODE = 1;
        private static final int PRIME = 31;
        private int hashCode = 1;
        public boolean hashCodeDirty = true;
        public String code;
        public String label;

        public String getCode()
        {
            return this.code;
        }

        public String getLabel()
        {
            return this.label;
        }

        public int hashCode()
        {
            if (this.hashCodeDirty) {
                int prime = 31;
                int result = 1;

                result = 31 * result + (
                        this.code == null ? 0 : this.code.hashCode());

                this.hashCode = result;
                this.hashCodeDirty = false;
            }
            return this.hashCode;
        }

        public boolean equals(Object obj)
        {
            if (this == obj)
                return true;
            if (obj == null)
                return false;
            if (getClass() != obj.getClass())
                return false;
            row6Struct other = (row6Struct)obj;

            if (this.code == null) {
                if (other.code != null)
                    return false;
            } else if (!this.code.equals(other.code)) {
                return false;
            }
            return true;
        }

        public void copyDataTo(row6Struct other)
        {
            other.code = this.code;
            other.label = this.label;
        }

        public void copyKeysDataTo(row6Struct other)
        {
            other.code = this.code;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.code = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.code = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.label = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.label = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.code == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.code.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.label == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.label.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("code");
            sb.append("=");
            sb.append(String.valueOf(this.code));

            sb.append(", ");

            sb.append("label");
            sb.append("=");
            sb.append(String.valueOf(this.label));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row6Struct other)
        {
            int returnValue = -1;

            returnValue = checkNullsAndCompare(this.code, other.code);
            if (returnValue != 0) {
                return returnValue;
            }

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row7Struct
            implements IPersistableRow<row7Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public String utCreationDate;
        public String utLastModifiedDate;
        public String utCode;
        public String utcodeStatus;
        public String thirdParty;
        public String thirdPartyStatus;
        public String MercureCode;
        public String presenceFlag;
        public String personStatus;
        public String utInMercure;
        public String utInAddrBook;
        public String utInPhoneBook;
        public String coseLastname;
        public String hrLastname;
        public String maddrBkLastname;
        public String ipbLastName;
        public String expLastname;
        public String coseFirstname;
        public String hrFirstName;
        public String maddrbkFirstname;
        public String ipbFirstname;
        public String expFirstname;
        public String coseTitle;
        public String hrTitle;
        public String maddrbkTitle;
        public String ipbTitle;
        public String rcpTitle;
        public String mailAddr;
        public String mailAddrIpb;
        public String phoneNumber;
        public String faxNumber;
        public String email;
        public String esfCode;
        public String esfWording;
        public String coseDomain;
        public String domainName;
        public String entityName;
        public String coseMain;
        public String coseBackup;
        public String mgrUt;
        public String mgrFullname;
        public String mngStmtStatus;
        public String mngStVisa;
        public String codeLigne;
        public String libelleLigne;
        public String batiment;
        public String codelignMetier;
        public String typeAnoMng;

        public String getUtCreationDate()
        {
            return this.utCreationDate;
        }

        public String getUtLastModifiedDate()
        {
            return this.utLastModifiedDate;
        }

        public String getUtCode()
        {
            return this.utCode;
        }

        public String getUtcodeStatus()
        {
            return this.utcodeStatus;
        }

        public String getThirdParty()
        {
            return this.thirdParty;
        }

        public String getThirdPartyStatus()
        {
            return this.thirdPartyStatus;
        }

        public String getMercureCode()
        {
            return this.MercureCode;
        }

        public String getPresenceFlag()
        {
            return this.presenceFlag;
        }

        public String getPersonStatus()
        {
            return this.personStatus;
        }

        public String getUtInMercure()
        {
            return this.utInMercure;
        }

        public String getUtInAddrBook()
        {
            return this.utInAddrBook;
        }

        public String getUtInPhoneBook()
        {
            return this.utInPhoneBook;
        }

        public String getCoseLastname()
        {
            return this.coseLastname;
        }

        public String getHrLastname()
        {
            return this.hrLastname;
        }

        public String getMaddrBkLastname()
        {
            return this.maddrBkLastname;
        }

        public String getIpbLastName()
        {
            return this.ipbLastName;
        }

        public String getExpLastname()
        {
            return this.expLastname;
        }

        public String getCoseFirstname()
        {
            return this.coseFirstname;
        }

        public String getHrFirstName()
        {
            return this.hrFirstName;
        }

        public String getMaddrbkFirstname()
        {
            return this.maddrbkFirstname;
        }

        public String getIpbFirstname()
        {
            return this.ipbFirstname;
        }

        public String getExpFirstname()
        {
            return this.expFirstname;
        }

        public String getCoseTitle()
        {
            return this.coseTitle;
        }

        public String getHrTitle()
        {
            return this.hrTitle;
        }

        public String getMaddrbkTitle()
        {
            return this.maddrbkTitle;
        }

        public String getIpbTitle()
        {
            return this.ipbTitle;
        }

        public String getRcpTitle()
        {
            return this.rcpTitle;
        }

        public String getMailAddr()
        {
            return this.mailAddr;
        }

        public String getMailAddrIpb()
        {
            return this.mailAddrIpb;
        }

        public String getPhoneNumber()
        {
            return this.phoneNumber;
        }

        public String getFaxNumber()
        {
            return this.faxNumber;
        }

        public String getEmail()
        {
            return this.email;
        }

        public String getEsfCode()
        {
            return this.esfCode;
        }

        public String getEsfWording()
        {
            return this.esfWording;
        }

        public String getCoseDomain()
        {
            return this.coseDomain;
        }

        public String getDomainName()
        {
            return this.domainName;
        }

        public String getEntityName()
        {
            return this.entityName;
        }

        public String getCoseMain()
        {
            return this.coseMain;
        }

        public String getCoseBackup()
        {
            return this.coseBackup;
        }

        public String getMgrUt()
        {
            return this.mgrUt;
        }

        public String getMgrFullname()
        {
            return this.mgrFullname;
        }

        public String getMngStmtStatus()
        {
            return this.mngStmtStatus;
        }

        public String getMngStVisa()
        {
            return this.mngStVisa;
        }

        public String getCodeLigne()
        {
            return this.codeLigne;
        }

        public String getLibelleLigne()
        {
            return this.libelleLigne;
        }

        public String getBatiment()
        {
            return this.batiment;
        }

        public String getCodelignMetier()
        {
            return this.codelignMetier;
        }

        public String getTypeAnoMng()
        {
            return this.typeAnoMng;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.utCreationDate = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utCreationDate = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utLastModifiedDate = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utLastModifiedDate = new String(commonByteArray,
                                0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utcodeStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utcodeStatus = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.thirdParty = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.thirdParty = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.thirdPartyStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.thirdPartyStatus = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.MercureCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.MercureCode = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.presenceFlag = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.presenceFlag = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.personStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.personStatus = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utInMercure = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utInMercure = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utInAddrBook = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utInAddrBook = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.utInPhoneBook = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utInPhoneBook = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseLastname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseLastname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.hrLastname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.hrLastname = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.maddrBkLastname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.maddrBkLastname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ipbLastName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ipbLastName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.expLastname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.expLastname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseFirstname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseFirstname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.hrFirstName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.hrFirstName = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.maddrbkFirstname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.maddrbkFirstname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ipbFirstname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ipbFirstname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.expFirstname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.expFirstname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseTitle = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseTitle = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.hrTitle = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.hrTitle = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.maddrbkTitle = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.maddrbkTitle = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.ipbTitle = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.ipbTitle = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.rcpTitle = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.rcpTitle = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mailAddr = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mailAddr = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mailAddrIpb = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mailAddrIpb = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.phoneNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.phoneNumber = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.faxNumber = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.faxNumber = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.email = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.email = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.esfCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.esfCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.esfWording = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.esfWording = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseDomain = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseDomain = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.domainName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.domainName = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.entityName = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.entityName = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseMain = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseMain = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.coseBackup = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.coseBackup = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mgrUt = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mgrUt = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mgrFullname = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mgrFullname = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mngStmtStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mngStmtStatus = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mngStVisa = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mngStVisa = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.codeLigne = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.codeLigne = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.libelleLigne = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.libelleLigne = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.batiment = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.batiment = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.codelignMetier = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.codelignMetier = new String(commonByteArray, 0,
                                length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.typeAnoMng = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.typeAnoMng = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.utCreationDate == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utCreationDate.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utLastModifiedDate == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utLastModifiedDate.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utcodeStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utcodeStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.thirdParty == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.thirdParty.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.thirdPartyStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.thirdPartyStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.MercureCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.MercureCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.presenceFlag == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.presenceFlag.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.personStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.personStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utInMercure == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utInMercure.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utInAddrBook == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utInAddrBook.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.utInPhoneBook == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utInPhoneBook.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseLastname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseLastname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.hrLastname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.hrLastname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.maddrBkLastname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.maddrBkLastname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ipbLastName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ipbLastName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.expLastname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.expLastname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseFirstname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseFirstname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.hrFirstName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.hrFirstName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.maddrbkFirstname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.maddrbkFirstname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ipbFirstname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ipbFirstname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.expFirstname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.expFirstname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseTitle == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseTitle.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.hrTitle == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.hrTitle.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.maddrbkTitle == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.maddrbkTitle.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.ipbTitle == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.ipbTitle.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.rcpTitle == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.rcpTitle.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mailAddr == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mailAddr.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mailAddrIpb == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mailAddrIpb.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.phoneNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.phoneNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.faxNumber == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.faxNumber.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.email == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.email.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.esfCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.esfCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.esfWording == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.esfWording.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseDomain == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseDomain.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.domainName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.domainName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.entityName == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.entityName.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseMain == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseMain.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.coseBackup == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.coseBackup.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mgrUt == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mgrUt.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mgrFullname == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mgrFullname.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mngStmtStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mngStmtStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mngStVisa == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mngStVisa.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.codeLigne == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.codeLigne.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.libelleLigne == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.libelleLigne.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.batiment == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.batiment.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.codelignMetier == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.codelignMetier.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.typeAnoMng == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.typeAnoMng.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("utCreationDate");
            sb.append("=");
            sb.append(String.valueOf(this.utCreationDate));

            sb.append(", ");

            sb.append("utLastModifiedDate");
            sb.append("=");
            sb.append(String.valueOf(this.utLastModifiedDate));

            sb.append(", ");

            sb.append("utCode");
            sb.append("=");
            sb.append(String.valueOf(this.utCode));

            sb.append(", ");

            sb.append("utcodeStatus");
            sb.append("=");
            sb.append(String.valueOf(this.utcodeStatus));

            sb.append(", ");

            sb.append("thirdParty");
            sb.append("=");
            sb.append(String.valueOf(this.thirdParty));

            sb.append(", ");

            sb.append("thirdPartyStatus");
            sb.append("=");
            sb.append(String.valueOf(this.thirdPartyStatus));

            sb.append(", ");

            sb.append("MercureCode");
            sb.append("=");
            sb.append(String.valueOf(this.MercureCode));

            sb.append(", ");

            sb.append("presenceFlag");
            sb.append("=");
            sb.append(String.valueOf(this.presenceFlag));

            sb.append(", ");

            sb.append("personStatus");
            sb.append("=");
            sb.append(String.valueOf(this.personStatus));

            sb.append(", ");

            sb.append("utInMercure");
            sb.append("=");
            sb.append(String.valueOf(this.utInMercure));

            sb.append(", ");

            sb.append("utInAddrBook");
            sb.append("=");
            sb.append(String.valueOf(this.utInAddrBook));

            sb.append(", ");

            sb.append("utInPhoneBook");
            sb.append("=");
            sb.append(String.valueOf(this.utInPhoneBook));

            sb.append(", ");

            sb.append("coseLastname");
            sb.append("=");
            sb.append(String.valueOf(this.coseLastname));

            sb.append(", ");

            sb.append("hrLastname");
            sb.append("=");
            sb.append(String.valueOf(this.hrLastname));

            sb.append(", ");

            sb.append("maddrBkLastname");
            sb.append("=");
            sb.append(String.valueOf(this.maddrBkLastname));

            sb.append(", ");

            sb.append("ipbLastName");
            sb.append("=");
            sb.append(String.valueOf(this.ipbLastName));

            sb.append(", ");

            sb.append("expLastname");
            sb.append("=");
            sb.append(String.valueOf(this.expLastname));

            sb.append(", ");

            sb.append("coseFirstname");
            sb.append("=");
            sb.append(String.valueOf(this.coseFirstname));

            sb.append(", ");

            sb.append("hrFirstName");
            sb.append("=");
            sb.append(String.valueOf(this.hrFirstName));

            sb.append(", ");

            sb.append("maddrbkFirstname");
            sb.append("=");
            sb.append(String.valueOf(this.maddrbkFirstname));

            sb.append(", ");

            sb.append("ipbFirstname");
            sb.append("=");
            sb.append(String.valueOf(this.ipbFirstname));

            sb.append(", ");

            sb.append("expFirstname");
            sb.append("=");
            sb.append(String.valueOf(this.expFirstname));

            sb.append(", ");

            sb.append("coseTitle");
            sb.append("=");
            sb.append(String.valueOf(this.coseTitle));

            sb.append(", ");

            sb.append("hrTitle");
            sb.append("=");
            sb.append(String.valueOf(this.hrTitle));

            sb.append(", ");

            sb.append("maddrbkTitle");
            sb.append("=");
            sb.append(String.valueOf(this.maddrbkTitle));

            sb.append(", ");

            sb.append("ipbTitle");
            sb.append("=");
            sb.append(String.valueOf(this.ipbTitle));

            sb.append(", ");

            sb.append("rcpTitle");
            sb.append("=");
            sb.append(String.valueOf(this.rcpTitle));

            sb.append(", ");

            sb.append("mailAddr");
            sb.append("=");
            sb.append(String.valueOf(this.mailAddr));

            sb.append(", ");

            sb.append("mailAddrIpb");
            sb.append("=");
            sb.append(String.valueOf(this.mailAddrIpb));

            sb.append(", ");

            sb.append("phoneNumber");
            sb.append("=");
            sb.append(String.valueOf(this.phoneNumber));

            sb.append(", ");

            sb.append("faxNumber");
            sb.append("=");
            sb.append(String.valueOf(this.faxNumber));

            sb.append(", ");

            sb.append("email");
            sb.append("=");
            sb.append(String.valueOf(this.email));

            sb.append(", ");

            sb.append("esfCode");
            sb.append("=");
            sb.append(String.valueOf(this.esfCode));

            sb.append(", ");

            sb.append("esfWording");
            sb.append("=");
            sb.append(String.valueOf(this.esfWording));

            sb.append(", ");

            sb.append("coseDomain");
            sb.append("=");
            sb.append(String.valueOf(this.coseDomain));

            sb.append(", ");

            sb.append("domainName");
            sb.append("=");
            sb.append(String.valueOf(this.domainName));

            sb.append(", ");

            sb.append("entityName");
            sb.append("=");
            sb.append(String.valueOf(this.entityName));

            sb.append(", ");

            sb.append("coseMain");
            sb.append("=");
            sb.append(String.valueOf(this.coseMain));

            sb.append(", ");

            sb.append("coseBackup");
            sb.append("=");
            sb.append(String.valueOf(this.coseBackup));

            sb.append(", ");

            sb.append("mgrUt");
            sb.append("=");
            sb.append(String.valueOf(this.mgrUt));

            sb.append(", ");

            sb.append("mgrFullname");
            sb.append("=");
            sb.append(String.valueOf(this.mgrFullname));

            sb.append(", ");

            sb.append("mngStmtStatus");
            sb.append("=");
            sb.append(String.valueOf(this.mngStmtStatus));

            sb.append(", ");

            sb.append("mngStVisa");
            sb.append("=");
            sb.append(String.valueOf(this.mngStVisa));

            sb.append(", ");

            sb.append("codeLigne");
            sb.append("=");
            sb.append(String.valueOf(this.codeLigne));

            sb.append(", ");

            sb.append("libelleLigne");
            sb.append("=");
            sb.append(String.valueOf(this.libelleLigne));

            sb.append(", ");

            sb.append("batiment");
            sb.append("=");
            sb.append(String.valueOf(this.batiment));

            sb.append(", ");

            sb.append("codelignMetier");
            sb.append("=");
            sb.append(String.valueOf(this.codelignMetier));

            sb.append(", ");

            sb.append("typeAnoMng");
            sb.append("=");
            sb.append(String.valueOf(this.typeAnoMng));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row7Struct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }

    public static class row8Struct
            implements IPersistableRow<row8Struct>
    {
        static final byte[] commonByteArrayLock = new byte[0];
        static byte[] commonByteArray = new byte[0];
        public String utCode;
        public String mngStatus;

        public String getUtCode()
        {
            return this.utCode;
        }

        public String getMngStatus()
        {
            return this.mngStatus;
        }

        public void readData(ObjectInputStream dis)
        {
            synchronized (commonByteArrayLock)
            {
                try
                {
                    int length = 0;

                    length = dis.readInt();
                    if (length == -1) {
                        this.utCode = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.utCode = new String(commonByteArray, 0, length);
                    }

                    length = dis.readInt();
                    if (length == -1) {
                        this.mngStatus = null;
                    } else {
                        if (length > commonByteArray.length) {
                            if ((length < 1024) && (commonByteArray.length == 0))
                                commonByteArray = new byte[1024];
                            else {
                                commonByteArray = new byte[2 * length];
                            }
                        }
                        dis.readFully(commonByteArray, 0, length);
                        this.mngStatus = new String(commonByteArray, 0, length);
                    }
                }
                catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        public void writeData(ObjectOutputStream dos)
        {
            try
            {
                if (this.utCode == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.utCode.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }

                if (this.mngStatus == null) {
                    dos.writeInt(-1);
                } else {
                    byte[] byteArray = this.mngStatus.getBytes();
                    dos.writeInt(byteArray.length);
                    dos.write(byteArray);
                }
            }
            catch (IOException e) {
                throw new RuntimeException(e);
            }
        }

        public String toString()
        {
            StringBuilder sb = new StringBuilder();
            sb.append(super.toString());
            sb.append("[");

            sb.append("utCode");
            sb.append("=");
            sb.append(String.valueOf(this.utCode));

            sb.append(", ");

            sb.append("mngStatus");
            sb.append("=");
            sb.append(String.valueOf(this.mngStatus));

            sb.append("]");

            return sb.toString();
        }

        public int compareTo(row8Struct other)
        {
            int returnValue = -1;

            return returnValue;
        }

        private int checkNullsAndCompare(Object object1, Object object2) {
            int returnValue = 0;
            if (((object1 instanceof Comparable)) && ((object2 instanceof Comparable)))
                returnValue = ((Comparable)object1).compareTo(object2);
            else if ((object1 != null) && (object2 != null))
                returnValue = compareStrings(object1.toString(), object2
                        .toString());
            else if ((object1 == null) && (object2 != null))
                returnValue = 1;
            else if ((object1 != null) && (object2 == null))
                returnValue = -1;
            else {
                returnValue = 0;
            }

            return returnValue;
        }

        private int compareStrings(String string1, String string2) {
            return string1.compareTo(string2);
        }
    }
}
